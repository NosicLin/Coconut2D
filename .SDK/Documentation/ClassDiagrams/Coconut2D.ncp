<Project>
<Name>Coconut2D</Name>
<ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
<Name>Class Diagram</Name>
<Language>CSharp</Language>
<Entities>
<Entity type="Enum">
<Name>SCREEN_RESOLUTION_DPI_ENUM</Name>
<Access>Public</Access>
<Location left="0" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>RESOLUTION_nodpi</Value>
<Value>RESOLUTION_ldpi</Value>
<Value>RESOLUTION_mdpi</Value>
<Value>RESOLUTION_tvdpi</Value>
<Value>RESOLUTION_hdpi</Value>
<Value>RESOLUTION_xhdpi</Value>
<Value>RESOLUTION_Retina</Value>
<Value>RESOLUTION_DefaultDpi</Value>
</Entity>
<Entity type="Enum">
<Name>COCO_CLIP_SYMBOL_LOOP_ENUM</Name>
<Access>Public</Access>
<Location left="220" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>CLIP_SYMBOL_LOOP_CONTINUOUS</Value>
<Value>CLIP_SYMBOL_LOOP_SYNCHRONIZED_WITH_PARENT</Value>
<Value>CLIP_SYMBOL_LOOP_ONCE</Value>
</Entity>
<Entity type="Enum">
<Name>COCO_KEYFRAME_INTERPOLATION_ENUM</Name>
<Access>Public</Access>
<Location left="440" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>KEYFRAME_INTERPOLATION_NONE</Value>
<Value>KEYFRAME_INTERPOLATION_MOTION_TWEEN</Value>
<Value>KEYFRAME_INTERPOLATION_ECHO</Value>
<Value>KEYFRAME_INTERPOLATION_PHYSICS</Value>
</Entity>
<Entity type="Enum">
<Name>COCO_FILTER_ENUM</Name>
<Access>Public</Access>
<Location left="660" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>FILTER_INHERIT</Value>
<Value>FILTER_SIMPLE</Value>
<Value>FILTER_SIMPLE_WITH_ALPHA</Value>
<Value>FILTER_SATURATION_WITH_ALPHA</Value>
</Entity>
<Entity type="Enum">
<Name>COCO_TEXT_ALIGN_ENUM</Name>
<Access>Public</Access>
<Location left="880" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>TEXT_ALIGN_NEAR</Value>
<Value>TEXT_ALIGN_CENTER</Value>
<Value>TEXT_ALIGN_FAR</Value>
</Entity>
<Entity type="Enum">
<Name>COCO_TEXT_TRIMMING_ENUM</Name>
<Access>Public</Access>
<Location left="1100" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>StringTrimmingNone</Value>
<Value>StringTrimmingCharacter</Value>
<Value>StringTrimmingWord</Value>
<Value>StringTrimmingEllipsisCharacter</Value>
<Value>StringTrimmingEllipsisWord</Value>
<Value>StringTrimmingEllipsisPath</Value>
</Entity>
<Entity type="Class">
<Name>DeviceEvent</Name>
<Access>Public</Access>
<Location left="1320" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void stopPropagation()</Member>
<Member type="Method">public void preventDefault()</Member>
<Member type="Method">public void initEvent(String type, Boolean canBubble, Boolean cancelable)</Member>
<Member type="Method">public void initUIEvent(String type, Boolean canBubble, Boolean cancelable, HTMLWindow view, Integer detail)</Member>
<Member type="Method">public void initTouchEvent(String type, Boolean canBubble, Boolean cancelable, HTMLWindow view, Integer detail, Integer screenX, Integer screenY, Integer clientX, Integer clientY, Boolean ctrlKey, Boolean altKey, Boolean shiftKey, Boolean metaKey, TouchList touches, TouchList targetTouches, TouchList changedTouches, Float scale, Float rotation)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public String type</Member>
<Member type="Field">public EventTarget target</Member>
<Member type="Field">public EventTarget currentTarget</Member>
<Member type="Field">public Integer eventPhase</Member>
<Member type="Field">public Boolean bubbles</Member>
<Member type="Field">public Boolean cancelable</Member>
<Member type="Field">public Integer timeStamp</Member>
<Member type="Field">public Boolean defaultPrevented</Member>
<Member type="Field">public HTMLWindow view</Member>
<Member type="Field">public Integer detail</Member>
<Member type="Field">public TouchList touches</Member>
<Member type="Field">public TouchList targetTouches</Member>
<Member type="Field">public TouchList changedTouches</Member>
<Member type="Field">public Float scale</Member>
<Member type="Field">public Float rotation</Member>
<Member type="Field">public Integer clientX</Member>
<Member type="Field">public Integer clientY</Member>
<Member type="Field">public Integer __clientX</Member>
<Member type="Field">public Integer __clientY</Member>
</Entity>
<Entity type="Class">
<Name>EventTarget</Name>
<Access>Public</Access>
<Location left="1540" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>Audio</Name>
<Access>Public</Access>
<Location left="1760" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void play()</Member>
<Member type="Method">public void pause()</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String url)</Member>
<Member type="Field">private Integer __uid</Member>
<Member type="Field">private Float __currentTime</Member>
<Member type="Field">public Float duration</Member>
<Member type="Field">public Boolean paused</Member>
<Member type="Field">public Boolean ended</Member>
<Member type="Field">public Boolean autoplay</Member>
<Member type="Field">public Boolean loop</Member>
<Member type="Field">public String src</Member>
<Member type="Property">public Float currentTime { get; set; }</Member>
<Member type="Property">public Integer readyState { get; set; }</Member>
</Entity>
<Entity type="Class">
<Name>HTMLCanvasContext</Name>
<Access>Public</Access>
<Location left="1980" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public HTMLCanvasElement canvas</Member>
</Entity>
<Entity type="Class">
<Name>PathLine</Name>
<Access>Public</Access>
<Location left="2200" top="0" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Float _x0, Float _y0, Float _x1, Float _y1)</Member>
<Member type="Field">public Float x0</Member>
<Member type="Field">public Float y0</Member>
<Member type="Field">public Float x1</Member>
<Member type="Field">public Float y1</Member>
</Entity>
<Entity type="Class">
<Name>CanvasRenderingContext2D</Name>
<Access>Public</Access>
<Location left="0" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void arc(Float x, Float y, Float radius, Float startAngle, Float endAngle, Boolean anticlockwise)</Member>
<Member type="Method">public void arcTo(Float x1, Float y1, Float x2, Float y2, Float radius)</Member>
<Member type="Method">public void bezierCurveTo(Float cp1x, Float cp1y, Float cp2x, Float cp2y, Float x, Float y)</Member>
<Member type="Method">public void clip()</Member>
<Member type="Method">public void closePath()</Member>
<Member type="Method">public ImageData createImageData(Float width, Float height)</Member>
<Member type="Method">public HTMLCanvasGradient createLinearGradient(Float x0, Float y0, Float x1, Float y1)</Member>
<Member type="Method">public HTMLCanvasPattern createPattern(Image image, String repetition)</Member>
<Member type="Method">public HTMLCanvasGradient createRadialGradient(Float x0, Float y0, Float r0, Float x1, Float y1, Float r1)</Member>
<Member type="Method">public Boolean drawCustomFocusRing(HTMLElement element)</Member>
<Member type="Method">public void drawSystemFocusRing(HTMLElement element)</Member>
<Member type="Method">public void fill()</Member>
<Member type="Method">public ImageData getImageData(Float x, Float y, Float width, Float height)</Member>
<Member type="Method">public void getLineDash()</Member>
<Member type="Method">public Boolean isPointInPath(Float x, Float y)</Member>
<Member type="Method">public Boolean isPointInStroke(Float x, Float y)</Member>
<Member type="Method">public void quadraticCurveTo(Float cpx, Float cpy, Float x, Float y)</Member>
<Member type="Method">public void rect(Float x, Float y, Float width, Float height)</Member>
<Member type="Method">public void restore()</Member>
<Member type="Method">public void rotate(Float angle)</Member>
<Member type="Method">public void save()</Member>
<Member type="Method">public void scale(Float x, Float y)</Member>
<Member type="Method">public void scrollPathIntoView()</Member>
<Member type="Method">public void setLineDash(Array&lt;Float&gt; segments)</Member>
<Member type="Method">public void setTransform(Float m11, Float m12, Float m21, Float m22, Float dx, Float dy)</Member>
<Member type="Method">public void strokeRect(Float x, Float y, Float w, Float h)</Member>
<Member type="Method">public void strokeText(String text, Float x, Float y, Float maxWidth)</Member>
<Member type="Method">public void transform(Float m11, Float m12, Float m21, Float m22, Float dx, Float dy)</Member>
<Member type="Method">public void translate(Float x, Float y)</Member>
<Member type="Method">public void drawImage(Image image, Float a1, Float a2, Float a3, Float a4, Float a5, Float a6, Float a7, Float a8)</Member>
<Member type="Method">public void putImageData(ImageData imagedata, Float dx, Float dy, Float dirtyX, Float dirtyY, Float dirtyWidth, Float dirtyHeight)</Member>
<Member type="Method">public void beginPath()</Member>
<Member type="Method">public void moveTo(Float x, Float y)</Member>
<Member type="Method">public void lineTo(Float x, Float y)</Member>
<Member type="Method">public void stroke()</Member>
<Member type="Method">public void fillText(String text, Float x, Float y, Float maxWidth)</Member>
<Member type="Method">public void fillRect(Float x, Float y, Float width, Float height)</Member>
<Member type="Method">public void clearRect(Float x, Float y, Float width, Float height)</Member>
<Member type="Method">public HTMLTextMetrics measureText(String text)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(HTMLCanvasElement Canvas)</Member>
<Member type="Field">public Float globalAlpha</Member>
<Member type="Field">public String lineCap</Member>
<Member type="Field">public Float lineDashOffset</Member>
<Member type="Field">public String lineJoin</Member>
<Member type="Field">public Float miterLimit</Member>
<Member type="Field">public Float shadowBlur</Member>
<Member type="Field">public String shadowColor</Member>
<Member type="Field">public Float shadowOffsetX</Member>
<Member type="Field">public Float shadowOffsetY</Member>
<Member type="Field">public String textAlign</Member>
<Member type="Field">public String textBaseline</Member>
<Member type="Field">public String globalCompositeOperation</Member>
<Member type="Field">private Float __lineWidth</Member>
<Member type="Field">private String __fillStyle</Member>
<Member type="Field">private Array&lt;Float&gt; __fillColor</Member>
<Member type="Field">private String __strokeStyle</Member>
<Member type="Field">private Array&lt;Float&gt; __strokeColor</Member>
<Member type="Field">private String __fontSetting</Member>
<Member type="Field">private CocoFont __font</Member>
<Member type="Field">private Float __curX</Member>
<Member type="Field">private Float __curY</Member>
<Member type="Field">private Array&lt;PathLine&gt; __pathLines</Member>
<Member type="Property">public String fillStyle { get; set; }</Member>
<Member type="Property">public String strokeStyle { get; set; }</Member>
<Member type="Property">public Float lineWidth { get; set; }</Member>
<Member type="Property">public String font { get; set; }</Member>
</Entity>
<Entity type="Class">
<Name>HTMLCanvasElement</Name>
<Access>Public</Access>
<Location left="220" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public HTMLCanvasContext getContext(String contextId)</Member>
<Member type="Method">public String toDataURL()</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Float width</Member>
<Member type="Field">public Float height</Member>
<Member type="Field">public ImageData __imageData</Member>
</Entity>
<Entity type="Class">
<Name>HTMLCanvasGradient</Name>
<Access>Public</Access>
<Location left="440" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>HTMLCanvasPattern</Name>
<Access>Public</Access>
<Location left="660" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>HTMLDocument</Name>
<Access>Public</Access>
<Location left="880" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public HTMLCanvasElement createElement(String tagName)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public HTMLElement body</Member>
</Entity>
<Entity type="Class">
<Name>HTMLElement</Name>
<Access>Public</Access>
<Location left="1100" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public HTMLCanvasElement appendChild(HTMLCanvasElement node)</Member>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>Image</Name>
<Access>Public</Access>
<Location left="1320" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void load(String url)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public ImageData __imageData</Member>
<Member type="Field">public String src</Member>
<Member type="Field">public Integer width</Member>
<Member type="Field">public Integer height</Member>
<Member type="Field">public Integer naturalWidth</Member>
<Member type="Field">public Integer naturalHeight</Member>
<Member type="Field">public Boolean complete</Member>
</Entity>
<Entity type="Class">
<Name>HTMLTextMetrics</Name>
<Access>Public</Access>
<Location left="1540" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Float width</Member>
</Entity>
<Entity type="Class">
<Name>HTMLWindow</Name>
<Access>Public</Access>
<Location left="1760" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void addEventListener(String eventType, Function listener, Boolean useCapture)</Member>
<Member type="Method">public void removeEventListener(String eventType, Function listener, Boolean useCapture)</Member>
<Member type="Method">public void dispatchEvent(Integer uid, String eventType)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Integer __uid</Member>
<Member type="Field">public HTMLDocument document</Member>
<Member type="Field">public Integer innerHeight</Member>
<Member type="Field">public Integer innerWidth</Member>
<Member type="Field">public Float devicePixelRatio</Member>
<Member type="Field">public DeviceEvent __deviceEvent</Member>
<Member type="Field">public Array&lt;Function&gt; __elements</Member>
</Entity>
<Entity type="Class">
<Name>ImageData</Name>
<Access>Public</Access>
<Location left="1980" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String a0, String a1)</Member>
<Member type="Field">public Uint8Array data</Member>
<Member type="Field">public String src</Member>
<Member type="Field">public Integer width</Member>
<Member type="Field">public Integer height</Member>
</Entity>
<Entity type="Class">
<Name>Touch</Name>
<Access>Public</Access>
<Location left="2200" top="280" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void initTouch(Integer identifier, EventTarget target, Integer screenX, Integer screenY, Integer clientX, Integer clientY, Integer pageX, Integer pageY)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Integer identifier</Member>
<Member type="Field">public Integer screenX</Member>
<Member type="Field">public Integer screenY</Member>
<Member type="Field">public Integer clientX</Member>
<Member type="Field">public Integer clientY</Member>
<Member type="Field">public Integer pageX</Member>
<Member type="Field">public Integer pageY</Member>
<Member type="Field">public EventTarget target</Member>
</Entity>
<Entity type="Class">
<Name>TouchList</Name>
<Access>Public</Access>
<Location left="0" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public Touch item(Integer index)</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Integer length</Member>
</Entity>
<Entity type="Class">
<Name>WebGLObject</Name>
<Access>Public</Access>
<Location left="220" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
<Member type="Field">public Integer __uid</Member>
</Entity>
<Entity type="Class">
<Name>WebGLActiveInfo</Name>
<Access>Public</Access>
<Location left="440" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid, Integer program_uid, Integer index)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLBuffer</Name>
<Access>Public</Access>
<Location left="660" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLContextAttributes</Name>
<Access>Public</Access>
<Location left="880" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLFramebuffer</Name>
<Access>Public</Access>
<Location left="1100" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLProgram</Name>
<Access>Public</Access>
<Location left="1320" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
<Member type="Field">public Integer GLSLiTexCoords</Member>
<Member type="Field">public Integer GLSLiVec2Coords</Member>
<Member type="Field">public Integer GLSLiVecCoords</Member>
<Member type="Field">public WebGLUniformLocation GLSLuColor</Member>
<Member type="Field">public WebGLUniformLocation GLSLuAlpha</Member>
<Member type="Field">public WebGLUniformLocation GLSLuMVMat</Member>
<Member type="Field">public WebGLUniformLocation GLSLuProjMat</Member>
<Member type="Field">public WebGLUniformLocation GLSLuSampler</Member>
<Member type="Field">public WebGLUniformLocation GLSLuSprFrame</Member>
<Member type="Field">public WebGLUniformLocation GLSLuSprSize</Member>
<Member type="Field">public WebGLUniformLocation GLSLuSprFlip</Member>
</Entity>
<Entity type="Class">
<Name>WebGLRenderbuffer</Name>
<Access>Public</Access>
<Location left="1540" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLRenderingContext</Name>
<Access>Public</Access>
<Location left="1760" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void activeTexture(Integer texture)</Member>
<Member type="Method">public void attachShader(WebGLProgram program, WebGLShader shader)</Member>
<Member type="Method">public void bindAttribLocation(WebGLProgram program, Integer index, String name)</Member>
<Member type="Method">public void bindBuffer(Integer target, WebGLBuffer buffer)</Member>
<Member type="Method">public void bindFramebuffer(Integer target, WebGLFramebuffer framebuffer)</Member>
<Member type="Method">public void bindRenderbuffer(Integer target, WebGLRenderbuffer renderbuffer)</Member>
<Member type="Method">public void bindTexture(Integer target, WebGLTexture texture)</Member>
<Member type="Method">public void blendColor(Float red, Float green, Float blue, Float alpha)</Member>
<Member type="Method">public void blendEquation(Integer mode)</Member>
<Member type="Method">public void blendEquationSeparate(Integer modeRGB, Integer modeAlpha)</Member>
<Member type="Method">public void blendFunc(Integer sfactor, Integer dfactor)</Member>
<Member type="Method">public void blendFuncSeparate(Integer srcRGB, Integer dstRGB, Integer srcAlpha, Integer dstAlpha)</Member>
<Member type="Method">public void bufferData(Integer target, Float32Array data, Integer usage)</Member>
<Member type="Method">public void bufferSubData(Integer target, Integer offset, Float32Array data)</Member>
<Member type="Method">public Integer checkFramebufferStatus(Integer target)</Member>
<Member type="Method">public void clear(Integer mask)</Member>
<Member type="Method">public void clearColor(Float red, Float green, Float blue, Float alpha)</Member>
<Member type="Method">public void clearDepth(Float depth)</Member>
<Member type="Method">public void clearStencil(Integer s)</Member>
<Member type="Method">public void colorMask(Boolean red, Boolean green, Boolean blue, Boolean alpha)</Member>
<Member type="Method">public void compileShader(WebGLShader shader)</Member>
<Member type="Method">public void compressedTexImage2D(Integer target, Integer level, Integer internalformat, Integer width, Integer height, Integer border, Float32Array data)</Member>
<Member type="Method">public void compressedTexSubImage2D(Integer target, Integer level, Integer xoffset, Integer yoffset, Integer width, Integer height, Integer format, Float32Array data)</Member>
<Member type="Method">public void copyTexImage2D(Integer target, Integer level, Integer internalformat, Integer x, Integer y, Integer width, Integer height, Integer border)</Member>
<Member type="Method">public void copyTexSubImage2D(Integer target, Integer level, Integer xoffset, Integer yoffset, Integer x, Integer y, Integer width, Integer height)</Member>
<Member type="Method">public WebGLBuffer createBuffer()</Member>
<Member type="Method">public WebGLFramebuffer createFramebuffer()</Member>
<Member type="Method">public WebGLProgram createProgram()</Member>
<Member type="Method">public WebGLRenderbuffer createRenderbuffer()</Member>
<Member type="Method">public WebGLShader createShader(Integer type)</Member>
<Member type="Method">public WebGLTexture createTexture()</Member>
<Member type="Method">public void cullFace(Integer mode)</Member>
<Member type="Method">public void deleteBuffer(WebGLBuffer buffer)</Member>
<Member type="Method">public void deleteFramebuffer(WebGLFramebuffer framebuffer)</Member>
<Member type="Method">public void deleteProgram(WebGLProgram program)</Member>
<Member type="Method">public void deleteRenderbuffer(WebGLRenderbuffer renderbuffer)</Member>
<Member type="Method">public void deleteShader(WebGLShader shader)</Member>
<Member type="Method">public void deleteTexture(WebGLTexture texture)</Member>
<Member type="Method">public void depthFunc(Integer func)</Member>
<Member type="Method">public void depthMask(Boolean flag)</Member>
<Member type="Method">public void depthRange(Float zNear, Float zFar)</Member>
<Member type="Method">public void detachShader(WebGLProgram program, WebGLShader shader)</Member>
<Member type="Method">public void disable(Integer cap)</Member>
<Member type="Method">public void disableVertexAttribArray(Integer index)</Member>
<Member type="Method">public void drawArrays(Integer mode, Integer first, Integer count)</Member>
<Member type="Method">public void drawElements(Integer mode, Integer count, Integer type, Integer offset)</Member>
<Member type="Method">public void enable(Integer cap)</Member>
<Member type="Method">public void enableVertexAttribArray(Integer index)</Member>
<Member type="Method">public void finish()</Member>
<Member type="Method">public void flush()</Member>
<Member type="Method">public void framebufferRenderbuffer(Integer target, Integer attachment, Integer renderbuffertarget, WebGLRenderbuffer renderbuffer)</Member>
<Member type="Method">public void framebufferTexture2D(Integer target, Integer attachment, Integer textarget, WebGLTexture texture, Integer level)</Member>
<Member type="Method">public void frontFace(Integer mode)</Member>
<Member type="Method">public void generateMipmap(Integer target)</Member>
<Member type="Method">public WebGLActiveInfo getActiveAttrib(WebGLProgram program, Integer index)</Member>
<Member type="Method">public WebGLActiveInfo getActiveUniform(WebGLProgram program, Integer index)</Member>
<Member type="Method">public Array&lt;WebGLShader&gt; getAttachedShaders(WebGLProgram program)</Member>
<Member type="Method">public Integer getAttribLocation(WebGLProgram program, String name)</Member>
<Member type="Method">public String getBufferParameter(Integer target, Integer pname)</Member>
<Member type="Method">public WebGLContextAttributes getContextAttributes()</Member>
<Member type="Method">public Integer getError()</Member>
<Member type="Method">public Object getExtension(String name)</Member>
<Member type="Method">public String getFramebufferAttachmentParameter(Integer target, Integer attachment, Integer pname)</Member>
<Member type="Method">public String getParameter(Integer pname)</Member>
<Member type="Method">public String getProgramInfoLog(WebGLProgram program)</Member>
<Member type="Method">public Boolean getProgramParameter(WebGLProgram program, Integer pname)</Member>
<Member type="Method">public String getRenderbufferParameter(Integer target, Integer pname)</Member>
<Member type="Method">public String getShaderInfoLog(WebGLShader shader)</Member>
<Member type="Method">public Boolean getShaderParameter(WebGLShader shader, Integer pname)</Member>
<Member type="Method">public WebGLShaderPrecisionFormat getShaderPrecisionFormat(Integer shadertype, Integer precisiontype)</Member>
<Member type="Method">public String getShaderSource(WebGLShader shader)</Member>
<Member type="Method">public Array&lt;String&gt; getSupportedExtensions()</Member>
<Member type="Method">public String getTexParameter(Integer target, Integer pname)</Member>
<Member type="Method">public String getUniform(WebGLProgram program, WebGLUniformLocation location)</Member>
<Member type="Method">public WebGLUniformLocation getUniformLocation(WebGLProgram program, String name)</Member>
<Member type="Method">public String getVertexAttrib(Integer index, Integer pname)</Member>
<Member type="Method">public Integer getVertexAttribOffset(Integer index, Integer pname)</Member>
<Member type="Method">public void hint(Integer target, Integer mode)</Member>
<Member type="Method">public Boolean isBuffer(WebGLBuffer buffer)</Member>
<Member type="Method">public Boolean isContextLost()</Member>
<Member type="Method">public Boolean isEnabled(Integer cap)</Member>
<Member type="Method">public Boolean isFramebuffer(WebGLFramebuffer framebuffer)</Member>
<Member type="Method">public Boolean isProgram(WebGLProgram program)</Member>
<Member type="Method">public Boolean isRenderbuffer(WebGLRenderbuffer renderbuffer)</Member>
<Member type="Method">public Boolean isShader(WebGLShader shader)</Member>
<Member type="Method">public Boolean isTexture(WebGLTexture texture)</Member>
<Member type="Method">public void lineWidth(Float width)</Member>
<Member type="Method">public void linkProgram(WebGLProgram program)</Member>
<Member type="Method">public void pixelStorei(Integer pname, Integer param)</Member>
<Member type="Method">public void polygonOffset(Float factor, Float units)</Member>
<Member type="Method">public void readPixels(Integer x, Integer y, Integer width, Integer height, Integer format, Integer type, Float32Array pixels)</Member>
<Member type="Method">public void renderbufferStorage(Integer target, Integer internalformat, Integer width, Integer height)</Member>
<Member type="Method">public void sampleCoverage(Float value, Boolean invert)</Member>
<Member type="Method">public void scissor(Integer x, Integer y, Integer width, Integer height)</Member>
<Member type="Method">public void shaderSource(WebGLShader shader, String source)</Member>
<Member type="Method">public void stencilFunc(Integer func, Integer ref, Integer mask)</Member>
<Member type="Method">public void stencilFuncSeparate(Integer face, Integer func, Integer ref, Integer mask)</Member>
<Member type="Method">public void stencilMask(Integer mask)</Member>
<Member type="Method">public void stencilMaskSeparate(Integer face, Integer mask)</Member>
<Member type="Method">public void stencilOp(Integer fail, Integer zfail, Integer zpass)</Member>
<Member type="Method">public void stencilOpSeparate(Integer face, Integer fail, Integer zfail, Integer zpass)</Member>
<Member type="Method">public void texImage2D(Integer target, Integer level, Integer internalformat, Integer format, Integer type, Image image)</Member>
<Member type="Method">public void texParameterf(Integer target, Integer pname, Float param)</Member>
<Member type="Method">public void texParameteri(Integer target, Integer pname, Integer param)</Member>
<Member type="Method">public void texSubImage2D(Integer target, Integer level, Integer xoffset, Integer yoffset, Integer width, Integer height, Integer format, Integer type, Float32Array pixels)</Member>
<Member type="Method">public void uniform1f(WebGLUniformLocation location, Float x)</Member>
<Member type="Method">public void uniform1fv(WebGLUniformLocation location, Float32Array v)</Member>
<Member type="Method">public void uniform1i(WebGLUniformLocation location, Integer x)</Member>
<Member type="Method">public void uniform1iv(WebGLUniformLocation location, Int32Array v)</Member>
<Member type="Method">public void uniform2f(WebGLUniformLocation location, Float x, Float y)</Member>
<Member type="Method">public void uniform2fv(WebGLUniformLocation location, Float32Array v)</Member>
<Member type="Method">public void uniform2i(WebGLUniformLocation location, Integer x, Integer y)</Member>
<Member type="Method">public void uniform2iv(WebGLUniformLocation location, Int32Array v)</Member>
<Member type="Method">public void uniform3f(WebGLUniformLocation location, Float x, Float y, Float z)</Member>
<Member type="Method">public void uniform3fv(WebGLUniformLocation location, Float32Array v)</Member>
<Member type="Method">public void uniform3i(WebGLUniformLocation location, Integer x, Integer y, Integer z)</Member>
<Member type="Method">public void uniform3iv(WebGLUniformLocation location, Int32Array v)</Member>
<Member type="Method">public void uniform4f(WebGLUniformLocation location, Float x, Float y, Float z, Float w)</Member>
<Member type="Method">public void uniform4fv(WebGLUniformLocation location, Float32Array v)</Member>
<Member type="Method">public void uniform4i(WebGLUniformLocation location, Integer x, Integer y, Integer z, Integer w)</Member>
<Member type="Method">public void uniform4iv(WebGLUniformLocation location, Int32Array v)</Member>
<Member type="Method">public void uniformMatrix2fv(WebGLUniformLocation location, Boolean transpose, Float32Array value)</Member>
<Member type="Method">public void uniformMatrix3fv(WebGLUniformLocation location, Boolean transpose, Float32Array value)</Member>
<Member type="Method">public void uniformMatrix4fv(WebGLUniformLocation location, Boolean transpose, Float32Array value)</Member>
<Member type="Method">public void useProgram(WebGLProgram program)</Member>
<Member type="Method">public void validateProgram(WebGLProgram program)</Member>
<Member type="Method">public void vertexAttrib1f(Integer indx, Float x)</Member>
<Member type="Method">public void vertexAttrib1fv(Integer indx, Float32Array values)</Member>
<Member type="Method">public void vertexAttrib2f(Integer indx, Float x, Float y)</Member>
<Member type="Method">public void vertexAttrib2fv(Integer indx, Float32Array values)</Member>
<Member type="Method">public void vertexAttrib3f(Integer indx, Float x, Float y, Float z)</Member>
<Member type="Method">public void vertexAttrib3fv(Integer indx, Float32Array values)</Member>
<Member type="Method">public void vertexAttrib4f(Integer indx, Float x, Float y, Float z, Float w)</Member>
<Member type="Method">public void vertexAttrib4fv(Integer indx, Float32Array values)</Member>
<Member type="Method">public void vertexAttribPointer(Integer indx, Integer size, Integer type, Boolean normalized, Integer stride, Integer offset)</Member>
<Member type="Method">public void viewport(Integer x, Integer y, Integer width, Integer height)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(HTMLCanvasElement canvas)</Member>
<Member type="Field">public Integer __uid</Member>
<Member type="Field">public HTMLCanvasElement canvas</Member>
</Entity>
<Entity type="Class">
<Name>WebGLShader</Name>
<Access>Public</Access>
<Location left="1980" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid, Integer type)</Member>
<Member type="Field">protected Integer type</Member>
</Entity>
<Entity type="Class">
<Name>WebGLShaderPrecisionFormat</Name>
<Access>Public</Access>
<Location left="2200" top="560" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid, Integer shadertype, Integer precisiontype)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLTexture</Name>
<Access>Public</Access>
<Location left="0" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor(Integer uid)</Member>
<Member type="Constructor">public void Constructor(Integer uid)</Member>
</Entity>
<Entity type="Class">
<Name>WebGLUniformLocation</Name>
<Access>Public</Access>
<Location left="220" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer uid, Integer program_uid, String name)</Member>
</Entity>
<Entity type="Class">
<Name>CocoAudio</Name>
<Access>Public</Access>
<Location left="440" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void reset()</Member>
<Member type="Method">public void tick()</Member>
<Member type="Method">public void play()</Member>
<Member type="Method">public void pause()</Member>
<Member type="Method">public void stop()</Member>
<Member type="Method">public Float duration()</Member>
<Member type="Method">public Boolean paused()</Member>
<Member type="Method">public Boolean ended()</Member>
<Member type="Method">public Float getCurrentTime()</Member>
<Member type="Method">public void setCurrentTime(Float t)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String url, Boolean autoplay, Integer loops)</Member>
<Member type="Field">public String src</Member>
<Member type="Field">public Audio audio</Member>
<Member type="Field">public Boolean autoplay</Member>
<Member type="Field">public Integer loops</Member>
<Member type="Field">private Boolean __firstPlayed</Member>
<Member type="Field">private Integer __loopCount</Member>
</Entity>
<Entity type="Class">
<Name>CocoClip</Name>
<Access>Public</Access>
<Location left="660" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void prepare(CocoScene scene)</Member>
<Member type="Method">public void setText(String text)</Member>
<Member type="Method">public void createTextTexture(String text, String fontName, Integer fontSizePixels, COCO_TEXT_ALIGN_ENUM hAlign, COCO_TEXT_ALIGN_ENUM vAlign, Boolean multiline, COCO_TEXT_TRIMMING_ENUM trimming, String CSSColor, Integer textRectWidth, Integer textRectHeight)</Member>
<Member type="Method">public void reset()</Member>
<Member type="Method">public CocoClip addChild(CocoClip clipInstance)</Member>
<Member type="Method">public CocoClip removeChild(CocoClip clipInstance)</Member>
<Member type="Method">private void normalize()</Member>
<Member type="Method">public CocoClip getChildByName(String instanceName)</Member>
<Member type="Method">public Integer getChildIndex(CocoClip child)</Member>
<Member type="Method">public Boolean gotoFrameByName(String LabelName, Boolean pause)</Member>
<Member type="Method">public Boolean gotoFrameByIndex(Integer FrameIndex, Boolean pause)</Member>
<Member type="Method">private void __advanceTime(Time parentClipsDuration)</Member>
<Member type="Method">public void paint(WebGLRenderingContext gl, CocoScene scene, CocoClip parentClip, Boolean calcBoundingBox, Integer level)</Member>
<Member type="Method">public Boolean hitTest(Float wx, Float wy)</Member>
<Member type="Method">public void initBoundingBoxFromTexture(CocoScene scene, Float W2, Float H2)</Member>
<Member type="Method">public void initBoundingBoxFromChildren(CocoScene scene)</Member>
<Member type="Method">public void drawBoundingBox(CocoScene scene, WebGLRenderingContext gl)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(CocoImage image)</Member>
<Member type="Field">public String __instanceName</Member>
<Member type="Field">public String __clipPath</Member>
<Member type="Field">public CocoScene __scene</Member>
<Member type="Field">public CocoImage __image</Member>
<Member type="Field">public COCO_CLIP_SYMBOL_LOOP_ENUM __symbolLoop</Member>
<Member type="Field">public Array&lt;CocoClip&gt; __children</Member>
<Member type="Field">public CocoTimeline __timeline</Member>
<Member type="Field">public CocoClip __parent</Member>
<Member type="Field">public String text</Member>
<Member type="Field">public String textFontName</Member>
<Member type="Field">public Integer textFontSize</Member>
<Member type="Field">public COCO_TEXT_ALIGN_ENUM textHAlign</Member>
<Member type="Field">public COCO_TEXT_ALIGN_ENUM textVAlign</Member>
<Member type="Field">public Boolean textMultiline</Member>
<Member type="Field">public COCO_TEXT_TRIMMING_ENUM textTrimming</Member>
<Member type="Field">public String textColor</Member>
<Member type="Field">public Integer textWidth</Member>
<Member type="Field">public Integer textHeight</Member>
<Member type="Field">public Time __currentTime</Member>
<Member type="Field">public Time __loopTime</Member>
<Member type="Field">public Integer __loops</Member>
<Member type="Field">public CocoKeyFrame __currentFrame</Member>
<Member type="Field">public CocoClip __childWithMaxTimelineDuration</Member>
<Member type="Field">public Boolean __hasBoundingBox</Member>
<Member type="Field">public CocoVector __vABS_TOP_LEFT</Member>
<Member type="Field">public CocoVector __vABS_TOP_RIGHT</Member>
<Member type="Field">public CocoVector __vABS_BOTTOM_LEFT</Member>
<Member type="Field">public CocoVector __vABS_BOTTOM_RIGHT</Member>
<Member type="Field">public CocoVector __vREL_TOP_LEFT</Member>
<Member type="Field">public CocoVector __vREL_TOP_RIGHT</Member>
<Member type="Field">public CocoVector __vREL_BOTTOM_LEFT</Member>
<Member type="Field">public CocoVector __vREL_BOTTOM_RIGHT</Member>
<Member type="Field">public CocoVector __vTemp</Member>
<Member type="Field">public CocoMatrix __mTemp</Member>
<Member type="Field">private CocoSequence __currentSequence</Member>
<Member type="Field">private CocoAudio __currentAudio</Member>
</Entity>
<Entity type="Class">
<Name>CocoEngine</Name>
<Access>Public</Access>
<Location left="880" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void addTickListener(CocoITickable tickable)</Member>
<Member type="Method">public Integer getTickableIndex(CocoITickable tickable)</Member>
<Member type="Method">public void removeTickListener(CocoITickable tickable)</Member>
<Member type="Method">public void setNextState(State s)</Member>
<Member type="Method">public void run(WebGLRenderingContext gl, Time time)</Member>
<Member type="Method">private void __setTouchEvent(DeviceEvent e)</Member>
<Member type="Method">public DeviceEvent getTouchEvent()</Member>
<Member type="Method">public void pushTouched(CocoClip clip)</Member>
<Member type="Method">public Integer isClicked(Array&lt;CocoClip&gt; check)</Member>
<Member type="Method">public void __debug_trace(CocoScene scene, CocoClip clip, String message)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Boolean debugbreak</Member>
<Member type="Field">private State __currentState</Member>
<Member type="Field">private State __nextState</Member>
<Member type="Field">private DeviceEvent __deviceEvent</Member>
<Member type="Field">private Array&lt;CocoClip&gt; __clicked</Member>
<Member type="Field">private Time __clock</Member>
<Member type="Field">private Array&lt;CocoITickable&gt; __tickables</Member>
</Entity>
<Entity type="Class">
<Name>CocoImage</Name>
<Access>Public</Access>
<Location left="1100" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public CocoImageSibling addSibling(CocoImageSibling sibling)</Member>
<Member type="Method">public CocoSequence addSequence(CocoSequence sequence)</Member>
<Member type="Method">public CocoSequence getSequence(String name)</Member>
<Member type="Method">public void prepare(CocoScene scene, WebGLRenderingContext gl)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public String symbolName</Member>
<Member type="Field">public Image image</Member>
<Member type="Field">public Float textureCellWidth</Member>
<Member type="Field">public Float textureCellHeight</Member>
<Member type="Field">public Float32Array textureGrid</Member>
<Member type="Field">public Float32Array color</Member>
<Member type="Field">public Float32Array texSize</Member>
<Member type="Field">public Boolean isSpriteSheet</Member>
<Member type="Field">public Float __pixelRatioScale</Member>
<Member type="Field">public WebGLTexture texture</Member>
<Member type="Field">public WebGLBuffer buffer</Member>
<Member type="Field">public Array&lt;CocoSequence&gt; sequences</Member>
<Member type="Field">public String baseUrl</Member>
<Member type="Field">public Integer viewOptimalWidth</Member>
<Member type="Field">public Integer viewOptimalHeight</Member>
<Member type="Field">public Array&lt;CocoImageSibling&gt; viewSiblings</Member>
<Member type="Field">public Float pixelRatio</Member>
</Entity>
<Entity type="Class">
<Name>CocoImageSibling</Name>
<Access>Public</Access>
<Location left="1320" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(String url, Float pixelRatio, Float textureWidth, Float textureHeight)</Member>
<Member type="Field">public String url</Member>
<Member type="Field">public Float pixelRatio</Member>
<Member type="Field">public Float textureWidth</Member>
<Member type="Field">public Float textureHeight</Member>
</Entity>
<Entity type="Class">
<Name>CocoITickable</Name>
<Access>Public</Access>
<Location left="1540" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void Register()</Member>
<Member type="Method">public void Unregister()</Member>
<Member type="Method">public void tick(Time time)</Member>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>CocoKeyFrame</Name>
<Access>Public</Access>
<Location left="1760" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public CocoKeyFrame clone(Boolean exact)</Member>
<Member type="Method">public void reset()</Member>
<Member type="Method">public void interpolate(CocoKeyFrame F1, CocoKeyFrame F2, Float s)</Member>
<Member type="Method">public void combine(CocoKeyFrame Frame)</Member>
<Member type="Method">public void apply(CocoMatrix matrix)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Integer frameIndex</Member>
<Member type="Field">public Float __frameIndex</Member>
<Member type="Field">public COCO_KEYFRAME_INTERPOLATION_ENUM frameInterpolation</Member>
<Member type="Field">public Boolean handleEvents</Member>
<Member type="Field">public Boolean visible</Member>
<Member type="Field">public Integer filter</Member>
<Member type="Field">public Float red</Member>
<Member type="Field">public Float green</Member>
<Member type="Field">public Float blue</Member>
<Member type="Field">public Float alpha</Member>
<Member type="Field">public Float x</Member>
<Member type="Field">public Float y</Member>
<Member type="Field">public Float pivotX</Member>
<Member type="Field">public Float pivotY</Member>
<Member type="Field">public Float scaleX</Member>
<Member type="Field">public Float scaleY</Member>
<Member type="Field">public Float rotation</Member>
<Member type="Field">public CocoAction action</Member>
<Member type="Field">public State nextState</Member>
<Member type="Field">public CocoAudio audio</Member>
<Member type="Field">public Boolean flipH</Member>
<Member type="Field">public Boolean flipV</Member>
<Member type="Field">public String spriteSequenceName</Member>
<Member type="Field">private Boolean __isCloned</Member>
</Entity>
<Entity type="Class">
<Name>CocoMatrix</Name>
<Access>Public</Access>
<Location left="1980" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void identity()</Member>
<Member type="Method">public void ortho(Float left, Float right, Float bottom, Float top, Float near, Float far)</Member>
<Member type="Method">public void transpose()</Member>
<Member type="Method">public Float determinant()</Member>
<Member type="Method">public void invert()</Member>
<Member type="Method">public CocoVector multiplyByVector(CocoVector v)</Member>
<Member type="Method">public CocoMatrix multiplyByMatrix(CocoMatrix v)</Member>
<Member type="Method">public void translate(Float tx, Float ty)</Member>
<Member type="Method">public void scale(Float sx, Float sy)</Member>
<Member type="Method">public void rotateZ(Float rz)</Member>
<Member type="Method">public void refresh()</Member>
<Member type="Method">public void update(WebGLRenderingContext gl, WebGLUniformLocation ul)</Member>
<Member type="Method">public void push()</Member>
<Member type="Method">public void pop()</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(CocoMatrix M)</Member>
<Member type="Field">public Float rc11</Member>
<Member type="Field">public Float rc12</Member>
<Member type="Field">public Float rc13</Member>
<Member type="Field">public Float rc14</Member>
<Member type="Field">public Float rc21</Member>
<Member type="Field">public Float rc22</Member>
<Member type="Field">public Float rc23</Member>
<Member type="Field">public Float rc24</Member>
<Member type="Field">public Float rc31</Member>
<Member type="Field">public Float rc32</Member>
<Member type="Field">public Float rc33</Member>
<Member type="Field">public Float rc34</Member>
<Member type="Field">public Float rc41</Member>
<Member type="Field">public Float rc42</Member>
<Member type="Field">public Float rc43</Member>
<Member type="Field">public Float rc44</Member>
<Member type="Field">public Array&lt;Float32Array&gt; __stack</Member>
<Member type="Field">public Float32Array __data</Member>
<Member type="Field">public Boolean __dirty</Member>
</Entity>
<Entity type="Class">
<Name>CocoRect</Name>
<Access>Public</Access>
<Location left="2200" top="840" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Field">public Float left</Member>
<Member type="Field">public Float top</Member>
<Member type="Field">public Float right</Member>
<Member type="Field">public Float bottom</Member>
</Entity>
<Entity type="Class">
<Name>CocoScene</Name>
<Access>Public</Access>
<Location left="0" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public CocoImage getImageSymbol(String symbolName)</Member>
<Member type="Method">public CocoImage newResourceImage(String symbolName, String baseUrl)</Member>
<Member type="Method">private void prepare(WebGLRenderingContext gl)</Member>
<Member type="Method">private WebGLProgram makeProgram(WebGLRenderingContext gl, String vs, String fs)</Member>
<Member type="Method">private void loadResources()</Member>
<Member type="Method">private Boolean resourcesLoaded(WebGLRenderingContext gl)</Member>
<Member type="Method">public void paint(WebGLRenderingContext gl, Time time)</Member>
<Member type="Method">private Boolean setFilter(Integer filter)</Member>
<Member type="Method">public void drawFrame(WebGLRenderingContext gl, CocoImage image, Integer frame, CocoKeyFrame KF)</Member>
<Member type="Method">public void gotoAndPlayByName(String LabelName)</Member>
<Member type="Method">public void gotoAndStopByName(String LabelName)</Member>
<Member type="Method">public void gotoAndPlayByIndex(Integer FrameIndex)</Member>
<Member type="Method">public void gotoAndStopyByIndex(Integer FrameIndex)</Member>
<Member type="Method">public void stop()</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public String __sceneName</Member>
<Member type="Field">public Array&lt;CocoImage&gt; __imageSymbols</Member>
<Member type="Field">public Float __fps</Member>
<Member type="Field">public Float __view_width</Member>
<Member type="Field">public Float __view_height</Member>
<Member type="Field">public Float __view_pixel_ratio</Member>
<Member type="Field">public Float __view_scale</Member>
<Member type="Field">public CocoClip __root</Member>
<Member type="Field">public CocoMatrix __modelViewMatrix</Member>
<Member type="Field">public CocoMatrix __projectionMatrix</Member>
<Member type="Field">public WebGLProgram __glProgram</Member>
<Member type="Field">public WebGLProgram __glProgram_Simple</Member>
<Member type="Field">public WebGLProgram __glProgram_SimpleWithAlpha</Member>
<Member type="Field">public WebGLProgram __glProgram_SaturationWithAlpha</Member>
<Member type="Field">public Array&lt;CocoClip&gt; __levelParents</Member>
<Member type="Field">public String __vertex_shader_Common</Member>
<Member type="Field">public String __fragment_shader_Simple</Member>
<Member type="Field">public String __fragment_shader_SimpleWithAlpha</Member>
<Member type="Field">public String __fragment_shader_SaturationWithAlpha</Member>
<Member type="Field">public String __boundingBoxVertexShader</Member>
<Member type="Field">public String __boundingBoxFragmentShader</Member>
<Member type="Field">public WebGLProgram __boundingBoxProgram</Member>
<Member type="Field">public WebGLBuffer __boundingBoxBuffer</Member>
<Member type="Field">public Boolean __ready</Member>
<Member type="Field">public Boolean __finished</Member>
</Entity>
<Entity type="Class">
<Name>CocoSequence</Name>
<Access>Public</Access>
<Location left="220" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String name, Array&lt;Integer&gt; framesArray)</Member>
<Member type="Field">public String name</Member>
<Member type="Field">public Array&lt;Integer&gt; frames</Member>
<Member type="Field">public Time sequenceStartTime</Member>
</Entity>
<Entity type="Class">
<Name>State</Name>
<Access>Public</Access>
<Location left="440" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void enter()</Member>
<Member type="Method">public void exit()</Member>
<Member type="Method">public void tick(Time time)</Member>
<Member type="Method">public void paint(WebGLRenderingContext gl, Time time)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Field">public String __name</Member>
<Member type="Field">public Object params</Member>
</Entity>
<Entity type="Class">
<Name>Class1</Name>
<Access>Public</Access>
<Location left="660" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void test_virtual()</Member>
<Member type="Method">public void test()</Member>
<Member type="Method">public String public_static_function(String b)</Member>
<Member type="Method">private String private_static_function(String b)</Member>
<Member type="Method">protected String protected_static_function(String b)</Member>
<Member type="Method">public String public_function(String b)</Member>
<Member type="Method">private String private_function(String b)</Member>
<Member type="Method">protected String protected_function(String b)</Member>
<Member type="Method">public String public_overload()</Member>
<Member type="Method">public String public_overload$1(String arg)</Member>
<Member type="Method">public String public_overload$2(String arg1, String arg2)</Member>
<Member type="Method">private String private_overload()</Member>
<Member type="Method">private String private_overload$1(String arg)</Member>
<Member type="Method">private String private_overload$2(String arg1, String arg2)</Member>
<Member type="Method">protected String protected_overload()</Member>
<Member type="Method">protected String protected_overload$1(String arg)</Member>
<Member type="Method">protected String protected_overload$2(String arg1, String arg2)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String arg1, String arg2)</Member>
<Member type="Field">public String public_var</Member>
<Member type="Field">private String private_var</Member>
<Member type="Field">protected String protected_var</Member>
<Member type="Field">public String static_public_var</Member>
<Member type="Field">private String static_private_var</Member>
<Member type="Field">protected String static_protected_var</Member>
<Member type="Field">private String __public_property</Member>
<Member type="Field">private String __private_property</Member>
<Member type="Field">private String __protected_property</Member>
<Member type="Field">private String __public_static_property</Member>
<Member type="Field">private String __private_static_property</Member>
<Member type="Field">private String __protected_static_property</Member>
<Member type="Method">public State public_state</Member>
<Member type="Method">private State private_state</Member>
<Member type="Method">protected State protected_state</Member>
<Member type="Property">public String public_property { get; set; }</Member>
<Member type="Property">private String private_property { get; set; }</Member>
<Member type="Property">protected String protected_property { get; set; }</Member>
<Member type="Property">public String public_static_property { get; set; }</Member>
<Member type="Property">private String private_static_property { get; set; }</Member>
<Member type="Property">protected String protected_static_property { get; set; }</Member>
</Entity>
<Entity type="Class">
<Name>Class2</Name>
<Access>Public</Access>
<Location left="880" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void test()</Member>
<Member type="Method">public String cls2_public_function()</Member>
<Member type="Constructor">public void Constructor(String arg1)</Member>
<Member type="Field">public String x</Member>
<Member type="Field">private String y</Member>
<Member type="Field">protected String z</Member>
<Member type="Field">public String static_public_var</Member>
<Member type="Field">private String static_private_var</Member>
<Member type="Field">protected String static_protected_var</Member>
<Member type="Field">private String __public_static_property</Member>
<Member type="Field">private String __private_static_property</Member>
<Member type="Field">private String __protected_static_property</Member>
<Member type="Property">public String public_static_property { get; set; }</Member>
<Member type="Property">private String private_static_property { get; set; }</Member>
<Member type="Property">protected String protected_static_property { get; set; }</Member>
</Entity>
<Entity type="Class">
<Name>Class3</Name>
<Access>Public</Access>
<Location left="1100" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void test_virtual()</Member>
<Member type="Method">public void test()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public String static_public_var</Member>
<Member type="Field">private String static_private_var</Member>
<Member type="Field">protected String static_protected_var</Member>
<Member type="Field">private String __public_static_property</Member>
<Member type="Field">private String __private_static_property</Member>
<Member type="Field">private String __protected_static_property</Member>
<Member type="Property">public String public_static_property { get; set; }</Member>
<Member type="Property">private String private_static_property { get; set; }</Member>
<Member type="Property">protected String protected_static_property { get; set; }</Member>
</Entity>
<Entity type="Class">
<Name>CocoTextStyle</Name>
<Access>Public</Access>
<Location left="1320" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(String ff, Integer fsp, String fs, String fw, Boolean u, Integer r, Integer g, Integer b, Integer a, Integer br, Integer bg, Integer bb, Integer ba)</Member>
<Member type="Field">public String fontFamily</Member>
<Member type="Field">public Integer fontSizePixels</Member>
<Member type="Field">public String fontStyle</Member>
<Member type="Field">public String fontWeight</Member>
<Member type="Field">public Boolean underline</Member>
<Member type="Field">public Array&lt;Integer&gt; color</Member>
<Member type="Field">public Array&lt;Integer&gt; bgcolor</Member>
</Entity>
<Entity type="Class">
<Name>CocoText</Name>
<Access>Public</Access>
<Location left="1540" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public Integer npo2(Integer i)</Member>
<Member type="Method">public void init(Integer width, Integer height)</Member>
<Member type="Method">public void wrap(Integer width)</Member>
<Member type="Method">public String draw(Float width, Float height, Float halign, Float valign, Integer bgR, Integer bgG, Integer bgB, Integer bgA)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public CanvasRenderingContext2D c2d</Member>
<Member type="Field">public String str</Member>
<Member type="Field">public Array&lt;CocoTextStyle&gt; styles</Member>
<Member type="Field">public Array&lt;Integer&gt; indices</Member>
<Member type="Field">public Array&lt;Integer&gt; mappings</Member>
<Member type="Field">public Array&lt;Integer&gt; lineBreaks</Member>
<Member type="Field">public Array&lt;Integer&gt; lineWidths</Member>
<Member type="Field">public Array&lt;Integer&gt; lineHeights</Member>
<Member type="Field">public Integer totalHeight</Member>
</Entity>
<Entity type="Class">
<Name>CocoTimeLabel</Name>
<Access>Public</Access>
<Location left="1760" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor(Integer FrameIndex, String LabelName)</Member>
<Member type="Field">public Integer frameIndex</Member>
<Member type="Field">public String name</Member>
</Entity>
<Entity type="Class">
<Name>CocoTimeline</Name>
<Access>Public</Access>
<Location left="1980" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void prepare(CocoScene scene, CocoClip clip)</Member>
<Member type="Method">public void clear()</Member>
<Member type="Method">public void reset()</Member>
<Member type="Method">public CocoTimeLabel addLabel(CocoTimeLabel Label)</Member>
<Member type="Method">public CocoTimeLabel addLabelEx(Integer FrameIndex, String LabelName)</Member>
<Member type="Method">public CocoTimeLabel findLabelByName(String LabelName)</Member>
<Member type="Method">public CocoKeyFrame keyFrame(Integer frameIndex)</Member>
<Member type="Method">public CocoKeyFrame firstKeyFrame()</Member>
<Member type="Method">public CocoKeyFrame lastKeyFrame()</Member>
<Member type="Method">public CocoKeyFrame addKeyFrame(CocoKeyFrame KeyFrame)</Member>
<Member type="Method">public CocoKeyFrame addKeyFrameEx(State nextState, CocoAction actionCallback, Integer frameIndex, COCO_KEYFRAME_INTERPOLATION_ENUM frameInterpolation, Boolean handleEvents, Boolean visible, Float x, Float y, Float scaleX, Float scaleY, Float rotation, Float pivotX, Float pivotY, Integer filter, Float red, Float green, Float blue, Float alpha, CocoAudio audio, Boolean flipH, Boolean flipV, String spriteSequenceName)</Member>
<Member type="Method">public void normalizetimeline()</Member>
<Member type="Method">public CocoKeyFrame findKeyFrameBeforeframeIndex(Float frameIndex, Boolean inclusive, Float excludeListIndex)</Member>
<Member type="Method">public CocoKeyFrame findKeyFrameAfterframeIndex(Float frameIndex, Boolean inclusive, Float excludeListIndex)</Member>
<Member type="Method">public CocoKeyFrame interpolate(Float frameIndex)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Array&lt;CocoTimeLabel&gt; __labels</Member>
<Member type="Field">public Array&lt;CocoKeyFrame&gt; __keyFrames</Member>
<Member type="Field">public Time __singleFrameDurationTime</Member>
<Member type="Field">public Time __durationInTime</Member>
<Member type="Field">public Integer __durationInFrames</Member>
<Member type="Field">public Boolean __paused</Member>
<Member type="Field">public Float __fps</Member>
<Member type="Field">public Integer __currentFrameIndex</Member>
<Member type="Field">public Integer __firstKeyFrameIndex</Member>
<Member type="Field">public Integer __lastKeyFrameIndex</Member>
</Entity>
<Entity type="Class">
<Name>CocoVector</Name>
<Access>Public</Access>
<Location left="2200" top="1120" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void reset(Float x, Float y, Float z, Float w)</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">public Float X</Member>
<Member type="Field">public Float Y</Member>
<Member type="Field">public Float Z</Member>
<Member type="Field">public Float W</Member>
</Entity>
<Entity type="Class">
<Name>GameEngine</Name>
<Access>Public</Access>
<Location left="0" top="1400" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public void setTexts()</Member>
<Member type="Method">public String createGUID()</Member>
<Member type="Method">public Boolean hasClosedCells()</Member>
<Member type="Method">public void OpenCell(Integer i)</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor()</Member>
<Member type="Field">private CocoScene scene</Member>
<Member type="Field">private Number balance</Member>
<Member type="Field">private Number winnings</Member>
<Member type="Field">private Array&lt;CocoClip&gt; avatars</Member>
<Member type="Field">private CocoClip avatar_leo</Member>
<Member type="Field">private CocoClip avatar_xerxes</Member>
<Member type="Field">private CocoClip avatar_spartan</Member>
<Member type="Field">private CocoClip avatar_persian</Member>
<Member type="Field">private CocoClip avatar_swords</Member>
<Member type="Field">private CocoClip avatar_armor</Member>
<Member type="Field">private CocoClip btnOpenAll</Member>
<Member type="Field">private CocoClip btnBuyTicket</Member>
<Member type="Field">private Array&lt;CocoClip&gt; cells</Member>
<Member type="Field">private Array&lt;Boolean&gt; cellsOpen</Member>
<Member type="Field">private Integer selectedAvatar</Member>
<Member type="Field">private Integer selAvatarAppearances</Member>
<Member type="Field">private Number counter</Member>
<Member type="Field">private String TICKET_TicketID</Member>
<Member type="Field">private Array&lt;Integer&gt; TICKET_cells</Member>
<Member type="Field">private Integer TICKET_price</Member>
<Member type="Field">private Integer TICKET_winCount</Member>
<Member type="Field">private Array&lt;Integer&gt; WIN_PRIZES</Member>
<Member type="Method">public State STATE_TITLE_SCREEN</Member>
<Member type="Method">public State STATE_GAME_BOARD</Member>
<Member type="Method">public State STATE_GAME_BOARD_JUMPING_AVATARS</Member>
<Member type="Method">public State STATE_GAME_BOARD_CHOOSE_AVATAR</Member>
<Member type="Method">public State STATE_GAME_BOARD_BUY_TICKET</Member>
<Member type="Method">public State STATE_GAME_BOARD_SCRATCH_OR_OPEN_ALL</Member>
<Member type="Method">public State STATE_GAME_BOARD_OPEN_ALL</Member>
<Member type="Method">public State STATE_GAME_BOARD_WIN</Member>
<Member type="Method">public State STATE_GAME_BOARD_LOSE</Member>
</Entity>
<Entity type="Enum">
<Name>SYMBOL_ENUM</Name>
<Access>Public</Access>
<Location left="220" top="1400" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Value>SYMBOL_LEONIDAS</Value>
<Value>SYMBOL_XERXES</Value>
<Value>SYMBOL_SPARTAN</Value>
<Value>SYMBOL_PERSIAN</Value>
<Value>SYMBOL_SWORDS</Value>
<Value>SYMBOL_ARMOR</Value>
</Entity>
<Entity type="Class">
<Name>GridSymbol</Name>
<Access>Public</Access>
<Location left="440" top="1400" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Method">public Integer getRandom()</Member>
<Member type="Method">public CocoClip createSymbol(Integer symbol)</Member>
<Member type="Method">public CocoClip initPlaceholder()</Member>
<Member type="Method">public CocoClip initLeonidas()</Member>
<Member type="Method">public CocoClip initXerxes()</Member>
<Member type="Method">public CocoClip initSpartan()</Member>
<Member type="Method">public CocoClip initPersian()</Member>
<Member type="Method">public CocoClip initSwords()</Member>
<Member type="Method">public CocoClip initArmor()</Member>
<Member type="Destructor">public void Destructor()</Member>
<Member type="Constructor">public void Constructor(CocoScene scene)</Member>
<Member type="Field">public CocoScene scene</Member>
</Entity>
<Entity type="Class">
<Name>SceneGameBoard</Name>
<Access>Public</Access>
<Location left="660" top="1400" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
<Entity type="Class">
<Name>SceneTitle</Name>
<Access>Public</Access>
<Location left="880" top="1400" />
<Size width="0" height="0" />
<Collapsed>False</Collapsed>
<Modifier>None</Modifier>
<Member type="Constructor">public void Constructor()</Member>
</Entity>
</Entities>
<Relationships>
<Relationship type="Generalization" first="11" second="9">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="24" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="25" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="26" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="27" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="28" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="29" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="30" second="9">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="31" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="32" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="33" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="34" second="23">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="48" second="47">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="49" second="48">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="55" second="37">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="58" second="44">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Generalization" first="59" second="44">
<StartOrientation>Vertical</StartOrientation>
<EndOrientation>Vertical</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="10">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="20">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="13">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="14">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="17">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="16">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="18">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="12">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="11" second="19">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="28" second="34">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="12">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="28">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="31">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="25">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="27">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="29">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="33">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="24">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="26">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="32">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="34">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="17">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="30" second="20">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="48" second="46">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="49" second="46">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="44">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="36">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="57">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="59">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="46">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="30">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="55" second="58">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="38">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="36">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="39">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="45">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="53">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="52">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="41">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="2">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="35">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="55">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="37">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="58" second="46">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="38">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="36">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="39">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="53">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="41">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="2">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
<Relationship type="Dependency" first="59" second="35">
<StartOrientation>Horizontal</StartOrientation>
<EndOrientation>Horizontal</EndOrientation>
</Relationship>
</Relationships>
</ProjectItem>
</Project>