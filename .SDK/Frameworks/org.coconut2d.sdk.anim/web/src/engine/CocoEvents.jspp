"#export native";
"#export web"

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2014 www.coconut2D.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

///////////////////////////////////////////////////////////////////////////////////////////////

// Objects that wish to receive events need to implement IEventListener.

interface IEventListener
{
}

// Objects that are event targets and need to be placed on event.target property must implement IEventListener.
// (eg. a button that gets clicked and we read which button that was from event.target)

interface IEventTarget
{
}

// ==================================================================================================================================
//	   ______                 ______                 __
//	  / ____/___  _________  / ____/   _____  ____  / /_
//	 / /   / __ \/ ___/ __ \/ __/ | | / / _ \/ __ \/ __/
//	/ /___/ /_/ / /__/ /_/ / /___ | |/ /  __/ / / / /_
//	\____/\____/\___/\____/_____/ |___/\___/_/ /_/\__/
//
// ==================================================================================================================================

class CocoEvent
{
	public var type:String;

	public var target:IEventTarget;
	public var currentTarget:IEventTarget;

	public var bubbles:Boolean;
	public var cancelable:Boolean;

	public var timeStamp:Integer;
	public var stopPropagation:Boolean;
	public var defaultPrevented:Boolean;

	public var view:HTMLWindow;
	public var detail:Integer;

	public var touches:TouchList;           // all touches
	public var targetTouches:TouchList;     // all touches in this TouchEvent Target
	public var changedTouches:TouchList;    // all touches changed in the current event
	public var scale:Float;     			// distance (since event start) between fingers as multiplier of initial value. Initially 1.0, zoom out (pinch) < 1.0, zoom in > 1.0.
	public var rotation:Float;  			// rotation delta (since event start) in degrees (clockwise is positive). Initially 0.0.

	public var clientX:Integer;
	public var clientY:Integer;
	public var __clientX:Integer;
	public var __clientY:Integer;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(type:String, cancelable:Boolean, bubbles:Boolean)
	{
		this.type = type;
		this.cancelable = cancelable;
		this.bubbles = bubbles;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function is(Event:CocoEvent):Boolean
	{
		return Event.type==type;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function cancelBubble()
	{
		stopPropagation = true;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function preventDefault()
	{
		defaultPrevented = true;
	}
}

// ==================================================================================================================================
//	   ______                 ______                 __  __    _      __
//	  / ____/___  _________  / ____/   _____  ____  / /_/ /   (_)____/ /____  ____  ___  _____
//	 / /   / __ \/ ___/ __ \/ __/ | | / / _ \/ __ \/ __/ /   / / ___/ __/ _ \/ __ \/ _ \/ ___/
//	/ /___/ /_/ / /__/ /_/ / /___ | |/ /  __/ / / / /_/ /___/ (__  ) /_/  __/ / / /  __/ /
//	\____/\____/\___/\____/_____/ |___/\___/_/ /_/\__/_____/_/____/\__/\___/_/ /_/\___/_/
//
// ==================================================================================================================================

class CocoEventConnectionPoint
{
	public var Event:CocoEvent;
	public var Callback:Function;
	public var Listener:IEventListener;

	public function Constructor(Source:CocoEventSource, Event:CocoEvent, Listener:IEventListener, Callback:Function)
	{
		this.Event = Event;
		this.Listener = Listener;
		this.Callback = Callback;
	}

	public function Destructor()
	{
	}
}

// ==================================================================================================================================
//	   ______                 ______                 __  _____
//	  / ____/___  _________  / ____/   _____  ____  / /_/ ___/____  __  _______________
//	 / /   / __ \/ ___/ __ \/ __/ | | / / _ \/ __ \/ __/\__ \/ __ \/ / / / ___/ ___/ _ \
//	/ /___/ /_/ / /__/ /_/ / /___ | |/ /  __/ / / / /_ ___/ / /_/ / /_/ / /  / /__/  __/
//	\____/\____/\___/\____/_____/ |___/\___/_/ /_/\__//____/\____/\__,_/_/   \___/\___/
//
// ==================================================================================================================================

////////////////////////////////////////////////////////////////////////////////////////////////////
class CocoEventSource
{
	protected var __eventListeners:Array<CocoEventConnectionPoint>

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor()
	{
		__eventListeners = new Array<CocoEventListener>;
	}

	public function Destructor()
	{
		delete __eventListeners;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function addEventListener(Event:CocoEvent, Listener:IEventListener, Callback:Function)
	{
		// If we din't have the "__THIS__" implementation in our inheritance mechanism,
		// the following code would never work. It would store the CocoEventSource
		// instance of the prototype instead of the top-level instance.

		var item:CocoEventConnectionPoint = new CocoEventConnectionPoint(this, Event, Listener, Callback);

		__eventListeners.push(item);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function removeEventListener(Event:CocoEvent, Listener:IEventListener, Callback:Function) :Boolean
	{
		var i:Integer;
		for(i=__eventListeners.size()-1;i>=0;i--)
		{
			if(__eventListeners[i].Event.is(Event) && __eventListeners[i].Listener==Listener && __eventListeners[i].Callback==Callback)
			{
				__eventListeners.splice(i, 1);
				return true;
			}
		}
		return false;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function dispatchEvent(Event:CocoEvent, ...) :Integer
	{
		var i:Integer;
		var c:Integer;

		var event_arguments:Array<Object>;
		event_arguments.push(this);
		event_arguments.push(Event);
		event_arguments.concat(arguments);
		//Array.prototype.slice.call(arguments, 0, arguments.length);

		for(i=__eventListeners.size()-1;i>=0;i--)
		{
			var cp:CocoEventConnectionPoint = __eventListeners[i];

			if(cp.Event.is(Event))
			{
				c++;
				var cancel:Boolean = cp.Callback.apply(cp.Listener, event_arguments);
				if(cancel)
				{
					__eventListeners[i].Event.cancelBubble();
				}
				if(__eventListeners[i].Event.stopPropagation)
				{
					break;
				}
			}
		}
		delete event_arguments;
		return c;
	}
}

// ==================================================================================================================================
//	  ______                 __
//	 /_  __/___  __  _______/ /_
//	  / / / __ \/ / / / ___/ __ \
//	 / / / /_/ / /_/ / /__/ / / /
//	/_/  \____/\__,_/\___/_/ /_/
//
// ==================================================================================================================================

///////////////////////////////////////////////////////////////////////////////////////////////
class Touch
{
    public var identifier:Integer;
    public var screenX:Integer;
    public var screenY:Integer;
    public var clientX:Integer;
    public var clientY:Integer;
    public var pageX:Integer;
    public var pageY:Integer;
    public var target:IEventTarget;

	///////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor()
	{
		identifier	= 0;
		target		= null;
		screenX		= 0;
		screenY		= 0;
		clientX		= 0;
		clientY		= 0;
		pageX		= 0;
		pageY		= 0;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	public function initTouch(identifier:Integer, target:IEventTarget, screenX:Integer, screenY:Integer, clientX:Integer, clientY:Integer, pageX:Integer, pageY:Integer)
	{
		this.identifier	= identifier;
		this.target		= target;
		this.screenX	= screenX;
		this.screenY	= screenY;
		this.clientX	= clientX;
		this.clientY	= clientY;
		this.pageX		= pageX;
		this.pageY		= pageY;
	}
}

// ==================================================================================================================================
//	  ______                 __    __    _      __
//	 /_  __/___  __  _______/ /_  / /   (_)____/ /_
//	  / / / __ \/ / / / ___/ __ \/ /   / / ___/ __/
//	 / / / /_/ / /_/ / /__/ / / / /___/ (__  ) /_
//	/_/  \____/\__,_/\___/_/ /_/_____/_/____/\__/
//
// ==================================================================================================================================

///////////////////////////////////////////////////////////////////////////////////////////////
class TouchList : Array<Touch>
{
	public var length:Integer;

	///////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor()
	{
		for(var i:Integer=0; i<=5; i++)
		{
			var touch:Touch = new Touch();
			touch.initTouch(i, null, 0, 0, 0, 0, 0, 0);
			push(touch);
		}
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	public function item(index:Integer) : Touch
	{
		return this[index];
	}
}