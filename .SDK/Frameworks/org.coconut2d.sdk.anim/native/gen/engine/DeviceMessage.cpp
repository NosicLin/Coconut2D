/* Generated by Coconut2D C++ Compiler from file DeviceMessage.jspp */

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "DeviceMessage.hpp"
#include "IEventTarget.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
Touch::Touch()
{
	identifier = 0;
	target = nullptr;
	screenX = 0;
	screenY = 0;
	clientX = 0;
	clientY = 0;
	pageX = 0;
	pageY = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Touch::~Touch()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void Touch::initTouch(int identifier, IEventTarget* target, float screenX, float screenY, float clientX, float clientY, float pageX, float pageY)
{
	this->identifier = identifier;
	this->target = target;
	this->screenX = screenX;
	this->screenY = screenY;
	this->clientX = clientX;
	this->clientY = clientY;
	this->pageX = pageX;
	this->pageY = pageY;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
TouchList::TouchList()
{
	for(int i = 0; i <= 5; i++)
	{
		Touch* touch = new Touch();
		touch->initTouch(i, nullptr, 0, 0, 0, 0, 0, 0);
		push(touch);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Touch* TouchList::item(int index)
{
	return (*this)[index];
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
HTMLEvent::HTMLEvent()
{
	touches = new TouchList();
	changedTouches = new TouchList();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
HTMLEvent::~HTMLEvent()
{
	if(touches)
	{
		touches = (delete touches, nullptr);
	}
	if(changedTouches)
	{
		changedTouches = (delete changedTouches, nullptr);
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

