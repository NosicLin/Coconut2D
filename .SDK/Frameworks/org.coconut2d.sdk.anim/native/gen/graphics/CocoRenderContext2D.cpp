/* Generated by Coconut2D C++ Compiler from file CocoRenderContext2D.jspp */

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "CocoRenderContext2D.hpp"
#include "CocoMatrix.hpp"
#include "CanvasRenderingContext2D.hpp"
#include "HTMLCanvasElement.hpp"
#include "CocoScene.hpp"
#include "ICocoImageRenderData.hpp"
#include "CocoImage.hpp"
#include "CocoTimeline.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoImageRenderData2D::CocoImageRenderData2D()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoImageRenderData2D::~CocoImageRenderData2D()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoRenderContext2D::CocoRenderContext2D(CanvasRenderingContext2D* ctx)
{
	c2d = ctx;
	__modelViewMatrix = new CocoMatrix();
	__modelViewMatrix->identity();
	__projectionMatrix = new CocoMatrix();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoRenderContext2D::~CocoRenderContext2D()
{
	if(__modelViewMatrix)
	{
		__modelViewMatrix = (delete __modelViewMatrix, nullptr);
	}
	if(__projectionMatrix)
	{
		__projectionMatrix = (delete __projectionMatrix, nullptr);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoRenderContext2D::flush()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoMatrix* CocoRenderContext2D::getModelViewMatrix()
{
	return __modelViewMatrix;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoMatrix* CocoRenderContext2D::getProjectionMatrix()
{
	return __projectionMatrix;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
float CocoRenderContext2D::getWidth()
{
	return c2d->canvas->width;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
float CocoRenderContext2D::getHeight()
{
	return c2d->canvas->height;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoRenderContext2D::cls()
{
	__modelViewMatrix->identity();
	c2d->setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
	c2d->__set_fillStyle(String("#000"));
	c2d->fillRect(0.0, 0.0, c2d->canvas->width, c2d->canvas->height);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoRenderContext2D::ready()
{
	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoRenderContext2D::prepare(CocoScene* scene)
{
	__projectionMatrix->identity();
	__projectionMatrix->translate((float)(c2d->canvas->width) / (float)(2.0), (float)(c2d->canvas->height) / (float)(2.0));
	__projectionMatrix->scale(scene->__view_scale, scene->__view_scale);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
ICocoImageRenderData* CocoRenderContext2D::prepareImage(CocoImage* img)
{
	CocoImageRenderData2D* data = new CocoImageRenderData2D();
	return data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoRenderContext2D::drawFrame(CocoScene* scene, CocoImage* image, int frame, CocoKeyFrame* KF)
{
	c2d->setTransform(__projectionMatrix->rc11, __projectionMatrix->rc12, __projectionMatrix->rc21, __projectionMatrix->rc22, __projectionMatrix->rc41, __projectionMatrix->rc42);
	c2d->transform(__modelViewMatrix->rc11, __modelViewMatrix->rc12, __modelViewMatrix->rc21, __modelViewMatrix->rc22, __modelViewMatrix->rc41, __modelViewMatrix->rc42);
	float sx = (((KF->flipH ? 1.0 : 0.0) + (*image->textureGrid)[frame * 2 + 1]) * (*image->texSize)[0]) * image->image->naturalWidth;
	float sy = (((KF->flipV ? 1.0 : 0.0) + (*image->textureGrid)[frame * 2 + 0]) * (*image->texSize)[1]) * image->image->naturalHeight;
	float sw = (*image->texSize)[0] * ((float)image->image->naturalWidth);
	float sh = (*image->texSize)[1] * ((float)image->image->naturalHeight);
	float dx = (float)(-sw) / (float)(2.0);
	float dy = (float)(-sh) / (float)(2.0);
	float dw = sw;
	float dh = sh;
	c2d->drawImage(image->image, sx, sy, sw, sh, dx, dy, dw, dh);
}
