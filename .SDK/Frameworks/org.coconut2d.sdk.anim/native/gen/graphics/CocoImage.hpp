/* Generated by Coconut2D C++ Compiler from file CocoImage.jspp */

#ifndef __COCOIMAGE_HPP__
#define __COCOIMAGE_HPP__

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Coconut2D.hpp"
#include "HTMLImageElement.hpp"
#include "CocoScene.hpp"
#include "ICocoImageRenderData.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoSequence
{
public:
	String name;
	Array<int>* frames;
	float sequenceStartTime;
	const String __className = String("CocoSequence");
	CocoSequence(String name, Array<int>* framesArray);
	virtual ~CocoSequence();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoImageSibling
{
public:
	String url;
	float pixelRatio;
	float textureWidth;
	float textureHeight;
	const String __className = String("CocoImageSibling");
	CocoImageSibling(String url, float pixelRatio, float textureWidth, float textureHeight);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoImage
{
public:
	String symbolName;
	Image* image;
	CocoScene* scene;
	float textureCellWidth;
	float textureCellHeight;
	Float32Array* textureGrid;
	Float32Array* color;
	Float32Array* texSize;
	bool isSpriteSheet;
	float __pixelRatioScale;
	Array<CocoSequence*>* sequences;
	Float32Array* skin;
	ICocoImageRenderData* renderData;
	String baseUrl;
	int viewOptimalWidth;
	int viewOptimalHeight;
	Array<CocoImageSibling*>* viewSiblings;
	float pixelRatio;
	const String __className = String("CocoImage");
	CocoImage();
	virtual ~CocoImage();
	CocoImageSibling* addSibling(CocoImageSibling* sibling);
	CocoSequence* addSequence(CocoSequence* sequence);
	CocoSequence* getSequence(String name);
	void load();
	bool loaded();
	void unload();
};

#endif // __COCOIMAGE_HPP__
