/* Generated by Coconut2D C++ Compiler from file CocoRenderContext2D.jspp */

#ifndef __COCORENDERCONTEXT2D_HPP__
#define __COCORENDERCONTEXT2D_HPP__

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Coconut2D.hpp"
#include "ICocoImageRenderData.hpp"
#include "ICocoRenderContext.hpp"
#include "CocoMatrix.hpp"
#include "CanvasRenderingContext2D.hpp"
#include "CocoScene.hpp"
#include "CocoImage.hpp"
#include "CocoTimeline.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoImageRenderData2D : public ICocoImageRenderData
{
public:
	const String __className = String("CocoImageRenderData2D");
	CocoImageRenderData2D();
	virtual ~CocoImageRenderData2D();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoRenderContext2D : public ICocoRenderContext
{
public:
	CocoMatrix* __modelViewMatrix;
	CocoMatrix* __projectionMatrix;
	CanvasRenderingContext2D* c2d;
	const String __className = String("CocoRenderContext2D");
	CocoRenderContext2D(CanvasRenderingContext2D* ctx);
	virtual ~CocoRenderContext2D();
	void flush();
	CocoMatrix* getModelViewMatrix();
	CocoMatrix* getProjectionMatrix();
	float getWidth();
	float getHeight();
	void cls();
	bool ready();
	void prepare(CocoScene* scene);
	ICocoImageRenderData* prepareImage(CocoImage* img);
	void drawFrame(CocoScene* scene, CocoImage* image, int frame, CocoKeyFrame* KF);
};

#endif // __COCORENDERCONTEXT2D_HPP__
