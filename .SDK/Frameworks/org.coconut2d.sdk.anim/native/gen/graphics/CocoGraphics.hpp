/* Generated by Coconut2D C++ Compiler from file CocoGraphics.jspp */

#ifndef __COCOGRAPHICS_HPP__
#define __COCOGRAPHICS_HPP__

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Coconut2D.hpp"
#include "CocoImage.hpp"
#include "CocoScene.hpp"
#include "Constants.hpp"
#include "CanvasRenderingContext2D.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct CocoPoint
{
	float x;
	float y;
	CocoPoint() {};
	CocoPoint(CocoPoint* T)
	{
		x = T->x;
		y = T->y;
	};
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct CocoRect
{
	float left;
	float top;
	float right;
	float bottom;
	CocoRect() {};
	CocoRect(CocoRect* T)
	{
		left = T->left;
		top = T->top;
		right = T->right;
		bottom = T->bottom;
	};
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CocoGraphics
{
public:
	const String __className = String("CocoGraphics");
	CocoGraphics();
	virtual ~CocoGraphics();
	static CocoImage* createTextTexture(CocoScene* scene, String text, String fontName, int fontSizePixels, COCO_TEXT_ALIGN_ENUM hAlign, COCO_TEXT_ALIGN_ENUM vAlign, bool multiline, COCO_TEXT_TRIMMING_ENUM trimming, String CSSColor, int textRectWidth, int textRectHeight);
	static void drawSkin(CanvasRenderingContext2D* ctx, CocoImage* skinImage, float x, float y, float width, float height);
	static void __drawSlice(CanvasRenderingContext2D* ctx, CocoImage* skin, float cx, float cy, float cw, float ch, float sx, float sy, float sw, float sh, COCO_SKIN_TILE_ENUM r);
	static int __countFixed(Array<float>* v);
	static bool __fixedW(Array<COCO_SKIN_TILE_ENUM>* v);
	static bool __fixedH(Array<COCO_SKIN_TILE_ENUM>* v);
	static void __tileSkin(CanvasRenderingContext2D* ctx, CocoImage* image, float cellX, float cellY, float cellWidth, float cellHeight, float x, float y, float width, float height);
	static void __drawRegion(CanvasRenderingContext2D* ctx, CocoImage* image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh);
	static void drawImage(CocoImage* image, float x, float y, float stretchW, float stretchH, COCO_CONTROL_ANCHOR_ENUM anchor, bool clear);
};

#endif // __COCOGRAPHICS_HPP__
