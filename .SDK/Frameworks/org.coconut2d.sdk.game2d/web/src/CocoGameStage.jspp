"#export native";
"#export web";

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2014 www.yourcompany.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

"#include CocoClip.jspp";

class CocoGameStage : CocoClip
{
	// Special Game Sprites
	published reference var PlayerSprite:CocoGamePlayerSprite;

	private var __spritesToRemove:Array<CocoGameSprite>;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(optional image:CocoImage) : CocoClip(image)
	{
		PlayerSprite=null;
		__spritesToRemove=null;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		PlayerSprite=null;
		delete __spritesToRemove;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function tick(time:Time)
	{
		removeDeadSprites();

		scrollStage();

		collisionDetection();

		super.tick;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	//public virtual function paint(ctx:ICocoRenderContext, time:Time)
	public virtual function paint(ctx:ICocoRenderContext, scene:CocoScene, parentClip:CocoClip, calcBoundingBox:Boolean, level:Integer)
	{
		super.paint;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function scrollStage()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function collisionDetection()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function removeDeadSprites()
	{
	}
}
