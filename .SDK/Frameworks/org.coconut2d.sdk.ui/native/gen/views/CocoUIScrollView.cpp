/* Generated by Coconut2D C++ Compiler from file CocoUIScrollView.jspp */

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "CocoUIScrollView.hpp"
#include "CocoScene.hpp"
#include "HTMLWindow.hpp"
#include "CocoImage.hpp"
#include "CocoTimeline.hpp"
#include "ICocoRenderContext.hpp"
#include "CocoEngine.hpp"
#include "CocoClip.hpp"
#include "Constants.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoUIScrollView::CocoUIScrollView(String name)
{
	__instanceName = name;
	__width = ((float)window->innerWidth);
	__height = ((float)window->innerHeight);
	CocoUIScrollView::addEventListener(this->OnTouchStart, this, __EH4_CocoUIScrollView_HandleStart_L54_L65__);
	CocoUIScrollView::addEventListener(this->OnTouchMove, this, __EH5_CocoUIScrollView_HandleMove_L55_L66__);
	CocoUIScrollView::addEventListener(this->OnTouchEnd, this, __EH6_CocoUIScrollView_HandleEnd_L56_L67__);
	CocoKeyFrame* KF;
	KF = __timeline->addKeyFrameEx(nullptr, nullptr, 0, COCO_KEYFRAME_INTERPOLATION_ENUM::KEYFRAME_INTERPOLATION_ECHO, true, true, 0, minY, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, nullptr, false, false, String(""));
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoUIScrollView::~CocoUIScrollView()
{
	CocoUIScrollView::removeEventListener(this->OnTouchStart, this, __EH4_CocoUIScrollView_HandleStart_L54_L65__);
	CocoUIScrollView::removeEventListener(this->OnTouchMove, this, __EH5_CocoUIScrollView_HandleMove_L55_L66__);
	CocoUIScrollView::removeEventListener(this->OnTouchEnd, this, __EH6_CocoUIScrollView_HandleEnd_L56_L67__);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoUIScrollView::repaint(CocoScene* scene, CocoClip* parentClip, HTMLCanvasElement* canvas)
{
	scrollSpeedY = 0.0;
	minY = 250.0 - (float)(window->innerHeight) / (float)(2.0) + (float)(scene->getImageSymbol(String("SkinSymbol_iPhone_ActionSheet"))->textureCellHeight) / (float)(2.0);
	maxY = -5 * 250.0 + (float)(window->innerHeight) / (float)(2.0) - (float)(scene->getImageSymbol(String("SkinSymbol_iPhone_ActionSheet"))->textureCellHeight) / (float)(2.0);
	bounceY = false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoKeyFrame* CocoUIScrollView::getKeyFrame()
{
	return __timeline->keyFrame(0);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoUIScrollView::paint(ICocoRenderContext* ctx, CocoScene* scene, CocoClip* parentClip, bool calcBoundingBox, int level)
{
	CocoKeyFrame* KF = getKeyFrame();
	scrollSpeedY *= 0.95;
	KF->y += scrollSpeedY;
	if(bounceY)
	{
		float springY = minY - KF->y;
		if(springY < 0.0)
		{
			scrollSpeedY = 0.0;
			KF->y += (float)(-springY) / (float)(-sqrt(-springY));
			if(KF->y < minY)
			{
				KF->y = minY;
				bounceY = false;
				scrollSpeedY = 0.0;
			}
		}
		else
		{
			float springY = maxY - KF->y;
			if(springY > 0.0)
			{
				scrollSpeedY = 0.0;
				KF->y += (float)(springY) / (float)(sqrt(springY));
				if(KF->y > maxY)
				{
					KF->y = maxY;
					bounceY = false;
					scrollSpeedY = 0.0;
				}
			}
		}
	}
	CocoUIView::paint(ctx, scene, parentClip, calcBoundingBox, level);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoUIScrollView::HandleStart(CocoEventSource* sender, CocoEvent* e, float x, float y)
{
	scrollLastTime = engine->__clock;
	scrollLastPointY = y;
	scrollSpeedY = 0.0;
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoUIScrollView::HandleMove(CocoEventSource* sender, CocoEvent* e, float x, float y)
{
	CocoKeyFrame* KF = getKeyFrame();
	float dY = y - scrollLastPointY;
	float sY = 1.0;
	float springY = minY - KF->y;
	if(springY < 0.0)
	{
		sY = (float)((float)(engine->__ctx->getHeight()) / (float)(2.0)) / (float)(((float)(engine->__ctx->getHeight()) / (float)(2.0) - springY));
	}
	else
	{
		float springY = maxY - KF->y;
		if(springY > 0.0)
		{
			sY = (float)((float)(engine->__ctx->getHeight()) / (float)(2.0)) / (float)(((float)(engine->__ctx->getHeight()) / (float)(2.0) + springY));
		}
	}
	KF->y += dY * sY;
	scrollLastTime = engine->__clock;
	scrollLastPointY = y;
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoUIScrollView::HandleEnd(CocoEventSource* sender, CocoEvent* e, float x, float y)
{
	float dY = y - scrollLastPointY;
	scrollSpeedY = dY;
	bounceY = true;
	return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoUIScrollView::__dispatch_event__(void* __event_listener, int __event_handler_uid, void* __event_source, void* __event_object)
{
	CocoUIScrollView* __this = reinterpret_cast<CocoUIScrollView*>(__event_listener);
	switch(__event_handler_uid)
	{
		case __EH4_CocoUIScrollView_HandleStart_L54_L65__:
		{
			CocoUIScrollView* s = reinterpret_cast<CocoUIScrollView*>(__event_source);
			CocoClipOnTouchStartEvent* e = reinterpret_cast<CocoClipOnTouchStartEvent*>(__event_object);
			return __this->HandleStart(s, e, e->x, e->y);
		}
		break;
		case __EH5_CocoUIScrollView_HandleMove_L55_L66__:
		{
			CocoUIScrollView* s = reinterpret_cast<CocoUIScrollView*>(__event_source);
			CocoClipOnTouchMoveEvent* e = reinterpret_cast<CocoClipOnTouchMoveEvent*>(__event_object);
			return __this->HandleMove(s, e, e->x, e->y);
		}
		break;
		case __EH6_CocoUIScrollView_HandleEnd_L56_L67__:
		{
			CocoUIScrollView* s = reinterpret_cast<CocoUIScrollView*>(__event_source);
			CocoClipOnTouchEndEvent* e = reinterpret_cast<CocoClipOnTouchEndEvent*>(__event_object);
			return __this->HandleEnd(s, e, e->x, e->y);
		}
		break;
	}
	return false;
}