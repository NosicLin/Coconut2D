"#export native";
"#export web";

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2014 www.coconut2D.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

// ==================================================================================================================================
//	   ______                 __  ____________                   _    ___
//	  / ____/___  _________  / / / /  _/ ____/___  _________ ___| |  / (_)__ _      __
//	 / /   / __ \/ ___/ __ \/ / / // // /_  / __ \/ ___/ __ `__ \ | / / / _ \ | /| / /
//	/ /___/ /_/ / /__/ /_/ / /_/ // // __/ / /_/ / /  / / / / / / |/ / /  __/ |/ |/ /
//	\____/\____/\___/\____/\____/___/_/    \____/_/  /_/ /_/ /_/|___/_/\___/|__/|__/
//
// ==================================================================================================================================

"#include CocoUIView.jspp";

////////////////////////////////////////////////////////////////////////////////////////////////////////
class CocoUIFormView : CocoUIScrollView
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(name:String, scene:CocoScene) : CocoUIScrollView(name, scene)
	{
		__instanceName = name;
 		__scene = scene;
 		__invalidated = true;
 		__scene.__root.addChild(this);
		__container = true;
		__width = window.innerWidth;
		__height = window.innerHeight;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		if(__scene && __scene.__root)
			__scene.__root.removeChild(this);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function addInlineControl(ctl:CocoUIControl) :CocoUIControl
	{
		ctl.__scene = __scene;
		ctl.__form = this;
		ctl.Width = Width - ctl.MarginLeft - ctl.MarginRight;
		ctl.RefreshLayout();
		__scrollContainer.addChild(ctl);
		inlineHeight();
		invalidate();
		return ctl;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function addFloatingControl(ctl:CocoUIControl, anchor:COCO_CONTROL_ANCHOR_ENUM) :CocoUIControl
	{

		ctl.__scene = __scene;
		ctl.__form = this;
		ctl.RefreshLayout();
		addChild(ctl);
		return ctl;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function LayoutRecalc()
	{
		var h:Float = 0;
		var ctl:CocoUIControl;

		for(var i:Integer=0;i<__scrollContainer.__children.size();i++)
		{
			ctl = CocoUIControl(__scrollContainer.__children[i]);

			// Set control width
			ctl.Width = Width - ctl.MarginLeft - ctl.MarginRight;
			ctl.RefreshLayout();

			// Translate control's position from top-left origin to parent's center.
			ctl.__timeline.translateTo( -Width/2 + ctl.MarginLeft + ctl.Width/2, -Height/2 + (h+ctl.MarginTop) + ctl.Height/2);
			h += ctl.MarginTop + ctl.Height + ctl.MarginBottom;
		}

		inlineHeight();

		__timeline.translateTo(__x, __y);
		__invalidated = false;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public virtual function paint(ctx:ICocoRenderContext, scene:CocoScene, parentClip:CocoClip, calcBoundingBox:Boolean, level:Integer)
	{
		if(!__visible || !parentClip || !scene)
			return;

		if(__invalidated)
			LayoutRecalc();

		super.paint;
	}
}
