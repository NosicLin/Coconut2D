#include "CocoAudio.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoAudio::CocoAudio(String url, bool autoplay, int loops)
{
	audio = new Audio(url);
	audio->autoplay = false;
	audio->loop = false;
	this->src = url;
	this->autoplay = autoplay;
	this->loops = loops;
	__firstPlayed = false;
	__loopCount = 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
CocoAudio::~CocoAudio()
{
	if(audio)
		if(audio)
		{
			audio = (delete audio, nullptr);
		}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoAudio::tick()
{
	if(!audio)
	{
		return;
	}
	if(!__firstPlayed && autoplay)
	{
		__firstPlayed = true;
		play();
		return;
	}
	if(loops >= 0 && audio->ended)
	{
		__loopCount++;
		if(loops == 0 || (loops > 0 && __loopCount < loops))
		{
			play();
		}
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoAudio::play()
{
	if(audio)
	{
		audio->ended = false;
		audio->paused = false;
		audio->play();
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoAudio::pause()
{
	if(audio)
	{
		audio->ended = false;
		audio->paused = true;
		audio->pause();
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoAudio::stop()
{
	__loopCount = 0;
	__firstPlayed = true;
	if(audio)
	{
		audio->ended = true;
		audio->paused = false;
		audio->pause();
		setCurrentTime(0);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
float CocoAudio::duration()
{
	return audio ? audio->duration : 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoAudio::paused()
{
	return audio ? audio->paused : true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
bool CocoAudio::ended()
{
	return audio ? audio->ended : true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
float CocoAudio::getCurrentTime()
{
	return audio ? audio->__currentTime : 0;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void CocoAudio::setCurrentTime(float t)
{
	if(audio)
	{
		audio->__currentTime = t;
	}
}
