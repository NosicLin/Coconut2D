var RX = require("./RegularExpressions.jobj");
//@line 29
var fs = require("fs");
//@line 30
var vm = require("vm");
//@line 31
var path = require("path");
//@line 33

function ASPProcessor()
{
	var __BASE__ = null;

	function __ASPProcessor()
	{
		var __PDEFINE__ = Object.defineProperty;
		var __NOENUM__ = {enumerable:false};
		var __CLASS__ASPPROCESSOR__ = this.__CLASS__ASPPROCESSOR__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'ASPProcessor'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		};
		var __PRIVATE__ = this.__PRIVATE__ = {};
		var __PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 185
		this.__className = "ASPProcessor";
		//@line 46
		this.run = __VIRTUAL__.run = function (Request, Response)
		{
			//@line 48
			try
			{
				//@line 50
				var aspFile = Request.url;
				//@line 51
				var compiledFile = path.resolve(aspFile).replace(".asp", "_compiled.js");
				//@line 53
				if (fs.existsSync(aspFile))
				//@line 54
				{
					//@line 56
					var aspCode = fs.readFileSync(aspFile, "utf8");
					//@line 59
					var jsCode = __CLASS__ASPPROCESSOR__.__PRIVATE__.compile(aspCode);
					//@line 62
					fs.writeFileSync(compiledFile, jsCode);
					//@line 65
					var f = new Function("Request", "Response", jsCode);
					//@line 66
					Response.writeHead(200, {
						"Content-Type": "text/html"
					});
					//@line 67
					f.call(global, Request, Response);
					//@line 68
				}
				else
				//@line 70
				{
					//@line 72
				}
				//@line 73
			}
			catch (e)
			//@line 74
			{
				//@line 76
			}
			//@line 77
		};
		//@line 80
		this.__PRIVATE__.compile = function (buff)
		{
			//@line 82
			if (buff == "") return "";
			//@line 84
			var code = [];
			//@line 85
			var s = "";
			//@line 86
			var p = 0;
			//@line 87
			var HTML = "";
			//@line 89
			var rx = new RX.RegEx("(?:\\x3c\\x25([\\W\\w\\n\\r\\t\\s.]*?)\\x25\\x3e)|(?:\\x3c\\x21\\x2d\\x2d\\s*\\x23include\\s+(?:virtual|file)\\s*\\x3d\\s*[\\x27\\x22]*(.*?)[\\x27\\x22]*\\s*\\x2d\\x2d\\x3e)|(?:\\x3cscript\\s+.*?runat\\s*\\x3d\\s*[\\x27\\x22]*server[\\x27\\x22]*.*?\\x3e([\\W\\w\\n\\r\\t\\s.]*?)\\x3c\\x2fscript\\s*.*?\\x3e)", RX.REGULAR_EXPRESSION_FLAGS.RX_ALL);
			//@line 90
			var ms = rx.parse(buff);
			//@line 92
			if (ms.size() == 0)
			//@line 93
			return __CLASS__ASPPROCESSOR__.__PRIVATE__.HTML2Script(buff);
			//@line 95
			var pos = 0;
			//@line 96
			for (var i = 0; i < ms.size(); i++)
			//@line 97
			{
				//@line 98
				var m = ms[i];
				//@line 101
				HTML = "";
				//@line 102
				if (m.index > pos)
				//@line 103
				{
					//@line 104
					HTML = buff.substr(pos, m.index - pos);
					//@line 105
					code.push(__CLASS__ASPPROCESSOR__.__PRIVATE__.HTML2Script(HTML));
					//@line 106
				}
				//@line 109
				if (m.value.indexOf("#include") != -1)
				//@line 110
				{
					//@line 112
					continue;
					//@line 113
				}
				//@line 116
				s = m.subMatches(2).trim();
				//@line 117
				if (s != "")
				//@line 118
				{
					//@line 119
					code.push(s);
					//@line 120
					pos = Math.round(m.index + m.length);
					//@line 121
					continue;
					//@line 122
				}
				//@line 125
				if (rx.test(m.value, "^\\x3c\\x25\\s*\\x3d", RX.REGULAR_EXPRESSION_FLAGS.RX_ALL))
				//@line 126
				{
					//@line 127
					s = m.subMatches(0).trim();
					//@line 128
					s = s.substr(s.indexOf("=") + 1);
					//@line 129
					s = "Response.write(String(" + s + "));";
					//@line 130
					code.push(s);
					//@line 131
					pos = Math.round(m.index + m.length);
					//@line 132
					continue;
					//@line 133
				}
				//@line 136
				s = m.subMatches(0).trim();
				//@line 137
				code.push(s);
				//@line 138
				pos = Math.round(m.index + m.length);
				//@line 139
			}
			//@line 141
			return code.join("\n");
			return "" //@line 142
		};
		//@line 146
		this.__PRIVATE__.HTML2Script = function (HTML)
		{
			//@line 148
			if (HTML == "") return "";
			//@line 150
			HTML = HTML.replace(/(\r\n)|\n/mg, "\r");
			HTML = HTML.replace(/\t/mg, " ");
			//@line 157
			if (HTML.trim() == "") return "";
			//@line 159
			var v = HTML.split("\r");
			//@line 160
			var script = new Array;
			//@line 161
			var L = v.size();
			//@line 162
			var s = "";
			//@line 164
			for (var i = 0; i < L; i++)
			//@line 165
			{
				//@line 166
				s = v[i].trim();
				//@line 167
				if (s != "")
				//@line 168
				{
					//@line 169
					s = s.replace(/\x5c/mg, "\\\\");
					s = s.replace(/\x22/mg, '\\"');
					s = s.replace(/\t/mg, "    ");
					//@line 176
					s = "Response.write(String(\"" + s + (i < L ? "\\n" : "") + "\"));";
					//@line 177
					script.push(s);
					//@line 178
				}
				//@line 179
			}
			//@line 181
			s = script.join("\n");
			//@line 182
			{
				script && ((script.hasOwnProperty('Destructor') && script.Destructor()) || !script.hasOwnProperty('Destructor')) && (delete script);
				script = null
			};
			//@line 183
			return s;
			return "" //@line 184
		};
		//@line 41
		this.Destructor = function ()
		{
			{
				//@line 43
			}
			{}
			return true
		};
		//@line 36
		this.Constructor = function ()
		{
			//@line 38
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	__ASPProcessor.prototype.constructor = __ASPProcessor;
	return new __ASPProcessor();
}
ASPProcessor.__PRIVATE__ = {};
ASPProcessor.__PROTECTED__ = {};
module.exports.ASPProcessor = ASPProcessor;