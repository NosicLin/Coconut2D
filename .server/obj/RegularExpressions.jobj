//@line 30
var REGULAR_EXPRESSION_FLAGS =
{
	RX_IGNORE_CASE: 1,
	RX_MULTILINE: 2,
	RX_GLOBAL: 4,
	RX_ALL: 7
};
//@line 40

function Match(__CLASS__MATCH__$arr__)
{
	var __BASE__ = null;

	function __Match(__CLASS__MATCH__$arr__)
	{
		var __PDEFINE__ = Object.defineProperty;
		var __NOENUM__ = {enumerable:false};
		var __CLASS__MATCH__ = this.__CLASS__MATCH__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'Match'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		};
		var __PRIVATE__ = this.__PRIVATE__ = {};
		var __PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 77
		this.__className = "Match";
		//@line 42
		this.index = 0;
		//@line 43
		this.value = "";
		//@line 44
		this.length = 0;
		//@line 46
		__PRIVATE__.submatches = [];
		//@line 66
		this.subMatches = function (index)
		{
			index = Math.round(index);
			//@line 68
			var s = "";
			//@line 69
			var sm = __CLASS__MATCH__.__PRIVATE__.submatches;
			//@line 70
			s = index >= 0 && index < sm.length ? sm[index] || "" : "";
			//@line 75
			return s;
			return "" //@line 76
		};
		//@line 60
		this.Destructor = function ()
		{
			{
				//@line 62
				{
					__CLASS__MATCH__.__PRIVATE__.submatches && ((__CLASS__MATCH__.__PRIVATE__.submatches.hasOwnProperty('Destructor') && __CLASS__MATCH__.__PRIVATE__.submatches.Destructor()) || !__CLASS__MATCH__.__PRIVATE__.submatches.hasOwnProperty('Destructor')) && (delete __CLASS__MATCH__.__PRIVATE__.submatches);
					__CLASS__MATCH__.__PRIVATE__.submatches = null
				};
				//@line 63
			}
			{
				__CLASS__MATCH__.__PRIVATE__.submatches = null;
			}
			return true
		};
		//@line 49
		this.Constructor = function (arr)
		{
			//@line 51
			__CLASS__MATCH__.index = Math.round(arr.index);
			//@line 52
			__CLASS__MATCH__.value = arr[0];
			//@line 53
			__CLASS__MATCH__.length = Math.round(__CLASS__MATCH__.value.length);
			//@line 54
			__CLASS__MATCH__.__PRIVATE__.submatches = new Array;
			//@line 55
			for (var i = 1; i < arr.length; i++)
			//@line 56
			__CLASS__MATCH__.__PRIVATE__.submatches.push(arr[i]);
			//@line 57
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor(__CLASS__MATCH__$arr__);
		return this;
	}
	__Match.prototype.constructor = __Match;
	return new __Match(__CLASS__MATCH__$arr__);
}
Match.__PRIVATE__ = {};
Match.__PROTECTED__ = {};
//@line 81

function MatchCollection()
{
	var __BASE__ = null;

	function __MatchCollection()
	{
		var __PDEFINE__ = Object.defineProperty;
		var __NOENUM__ = {enumerable:false};
		var __CLASS__MATCHCOLLECTION__ = this.__CLASS__MATCHCOLLECTION__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'MatchCollection'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		};
		var __PRIVATE__ = this.__PRIVATE__;
		var __PROTECTED__ = this.__PROTECTED__;
		var __CLASS__ARRAY__ = this;
		//@line 97
		this.__className = "MatchCollection";
		//@line 93
		this.size = __VIRTUAL__.size = __CLASS__ARRAY__.size = function ()
		{
			//@line 95
			return __CLASS__ARRAY__.length;
			return 0 //@line 96
		};
		//@line 89
		this.Destructor = function ()
		{
			{
				//@line 91
			}
			{
				__CLASS__MATCHCOLLECTION__.__CLASS__ARRAY__ && ((__CLASS__MATCHCOLLECTION__.__CLASS__ARRAY__.hasOwnProperty('Destructor') && __CLASS__MATCHCOLLECTION__.__CLASS__ARRAY__.Destructor()) || !__CLASS__MATCHCOLLECTION__.__CLASS__ARRAY__.hasOwnProperty('Destructor')) && (delete __CLASS__MATCHCOLLECTION__.__CLASS__ARRAY__);
			}
			return true
		};
		//@line 84
		this.Constructor = function ()
		{
			//@line 86
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	__MatchCollection.prototype = new Array();
	__MatchCollection.prototype.constructor = __MatchCollection;
	return new __MatchCollection();
}
MatchCollection.__PRIVATE__ = {};
MatchCollection.__PROTECTED__ = {};
//@line 100

function RegEx(__CLASS__REGEX__$pattern__, __CLASS__REGEX__$flags__)
{
	var __BASE__ = null;

	function __RegEx(__CLASS__REGEX__$pattern__, __CLASS__REGEX__$flags__)
	{
		var __PDEFINE__ = Object.defineProperty;
		var __NOENUM__ = {enumerable:false};
		var __CLASS__REGEX__ = this.__CLASS__REGEX__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'RegEx'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		};
		var __PRIVATE__ = this.__PRIVATE__ = {};
		var __PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 209
		this.__className = "RegEx";
		//@line 148
		__PRIVATE__.rx = /(?:)/;
		//@line 159
		this.__PRIVATE__.init = function (pattern, flags)
		{
			//@line 161
			if (__CLASS__REGEX__.__PRIVATE__.rx)
			{
				__CLASS__REGEX__.__PRIVATE__.rx && ((__CLASS__REGEX__.__PRIVATE__.rx.hasOwnProperty('Destructor') && __CLASS__REGEX__.__PRIVATE__.rx.Destructor()) || !__CLASS__REGEX__.__PRIVATE__.rx.hasOwnProperty('Destructor')) && (delete __CLASS__REGEX__.__PRIVATE__.rx);
				__CLASS__REGEX__.__PRIVATE__.rx = null
			};
			//@line 162
			var sflags = "";
			//@line 163
			if ((flags & REGULAR_EXPRESSION_FLAGS.RX_IGNORE_CASE) == REGULAR_EXPRESSION_FLAGS.RX_IGNORE_CASE) sflags += "i";
			//@line 164
			if ((flags & REGULAR_EXPRESSION_FLAGS.RX_MULTILINE) == REGULAR_EXPRESSION_FLAGS.RX_MULTILINE) sflags += "m";
			//@line 165
			if ((flags & REGULAR_EXPRESSION_FLAGS.RX_GLOBAL) == REGULAR_EXPRESSION_FLAGS.RX_GLOBAL) sflags += "g";
			//@line 166
			__CLASS__REGEX__.__PRIVATE__.rx = new RegExp(pattern, sflags);
			//@line 167
		};
		//@line 176
		this.parse = function (buff, pattern, flags)
		{
			pattern = pattern || "";
			flags = flags || null;
			//@line 178
			if (pattern != "")
			//@line 179
			__CLASS__REGEX__.__PRIVATE__.init(pattern, flags);
			//@line 181
			var arr = null;
			//@line 182
			var ms = new MatchCollection;
			//@line 183
			do
			//@line 184
			{
				//@line 185
				arr = __CLASS__REGEX__.__PRIVATE__.rx.exec(buff);
				//@line 186
				if (arr)
				//@line 187
				{
					//@line 188
					var m = new Match(arr);
					//@line 189
					ms.push(m);
					//@line 190
				}
				//@line 191
			}
			while (//@line 192
			arr);
			//@line 193
			return ms;
			//@line 194
		};
		//@line 197
		this.test = function (buff, pattern, flags)
		{
			pattern = pattern || "";
			flags = flags || null;
			//@line 199
			if (pattern != "") __CLASS__REGEX__.__PRIVATE__.init(pattern, flags);
			//@line 200
			return __CLASS__REGEX__.__PRIVATE__.rx.test(buff);
			return false //@line 201
		};
		//@line 204
		this.replace = function (buff, findPattern, replacePattern, flags)
		{
			flags = flags || null;
			//@line 206
			if (findPattern != "") __CLASS__REGEX__.__PRIVATE__.init(findPattern, flags);
			//@line 207
			return buff.replace(__CLASS__REGEX__.__PRIVATE__.rx, replacePattern);
			return "" //@line 208
		};
		//@line 170
		this.Destructor = function ()
		{
			{
				//@line 172
				{
					__CLASS__REGEX__.__PRIVATE__.rx && ((__CLASS__REGEX__.__PRIVATE__.rx.hasOwnProperty('Destructor') && __CLASS__REGEX__.__PRIVATE__.rx.Destructor()) || !__CLASS__REGEX__.__PRIVATE__.rx.hasOwnProperty('Destructor')) && (delete __CLASS__REGEX__.__PRIVATE__.rx);
					__CLASS__REGEX__.__PRIVATE__.rx = null
				};
				//@line 173
			}
			{
				__CLASS__REGEX__.__PRIVATE__.rx = null;
			}
			return true
		};
		//@line 151
		this.Constructor = function (pattern, flags)
		{
			pattern = pattern || "";
			flags = flags || null;
			//@line 153
			__CLASS__REGEX__.__PRIVATE__.rx = null;
			//@line 154
			if (pattern != "")
			//@line 155
			__CLASS__REGEX__.__PRIVATE__.init(pattern, flags);
			//@line 156
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor(__CLASS__REGEX__$pattern__, __CLASS__REGEX__$flags__);
		return this;
	}
	__RegEx.prototype.constructor = __RegEx;
	return new __RegEx(__CLASS__REGEX__$pattern__, __CLASS__REGEX__$flags__);
}
RegEx.__PRIVATE__ = {};
RegEx.__PROTECTED__ = {};
//@line 114
RegEx.toPattern = function (string)
{
	//@line 116
	if (string == "") return "";
	//@line 117
	var pattern = new Array;
	//@line 118
	for (var i = 0; i < string.length; i++)
	//@line 119
	{
		//@line 120
		switch (string.charCodeAt(i))
		{
			//@line 122
		case 42:
			{
				pattern.push("(?:[^:./\\\\]*?)");
				break;
				//@line NaN
			}
			break;
			//@line 123
		case 63:
			{
				pattern.push("(?:[^:./\\\\])");
				break;
				//@line NaN
			}
			break;
			//@line 124
		case 36:
			{
				pattern.push("\\$");
				break;
				//@line NaN
			}
			break;
			//@line 125
		case 40:
			{
				pattern.push("\\(");
				break;
				//@line NaN
			}
			break;
			//@line 126
		case 41:
			{
				pattern.push("\\)");
				break;
				//@line NaN
			}
			break;
			//@line 127
		case 123:
			{
				pattern.push("\\{");
				break;
				//@line NaN
			}
			break;
			//@line 128
		case 125:
			{
				pattern.push("\\}");
				break;
				//@line NaN
			}
			break;
			//@line 129
		case 91:
			{
				pattern.push("\\[");
				break;
				//@line NaN
			}
			break;
			//@line 130
		case 93:
			{
				pattern.push("\\]");
				break;
				//@line NaN
			}
			break;
			//@line 131
		case 43:
			{
				pattern.push("\\+");
				break;
				//@line NaN
			}
			break;
			//@line 132
		case 33:
			{
				pattern.push("\\!");
				break;
				//@line NaN
			}
			break;
			//@line 133
		case 94:
			{
				pattern.push("\\^");
				break;
				//@line NaN
			}
			break;
			//@line 134
		case 46:
			{
				pattern.push("\\.");
				break;
				//@line NaN
			}
			break;
			//@line 135
		case 45:
			{
				pattern.push("\\-");
				break;
				//@line NaN
			}
			break;
			//@line 136
		case 92:
			{
				pattern.push("/");
				break;
				//@line NaN
			}
			break;
			//@line 137
		case 47:
			{
				pattern.push("/");
				break;
				//@line NaN
			}
			break;
			//@line 138
		default:
			{
				//@line 139
				pattern.push(string.charAt(i));
				//@line NaN
			}
			break;
		}
		//@line 141
	}
	//@line 142
	var s = "^(?:" + pattern.join("") + ")$";
	//@line 143
	{
		pattern && ((pattern.hasOwnProperty('Destructor') && pattern.Destructor()) || !pattern.hasOwnProperty('Destructor')) && (delete pattern);
		pattern = null
	};
	//@line 144
	return s;
	return "" //@line 145
};
module.exports.REGULAR_EXPRESSION_FLAGS = REGULAR_EXPRESSION_FLAGS;
module.exports.Match = Match;
module.exports.MatchCollection = MatchCollection;
module.exports.RegEx = RegEx;