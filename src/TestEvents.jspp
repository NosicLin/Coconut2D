"#export web";
"#export native";

///////////////////////////////////////////////////////
// This class is an events source (produces events)
///////////////////////////////////////////////////////

class UIButtonClass : CocoClip
{
	public var id:String;

	//public event OnClick();
	//public event OnTouchStart(x:Float, y:Float);
	//public event OnTouchMove(x:Float, y:Float);
	//public event OnTouchEnd(x:Float, y:Float);

	public function Constructor(id:String) : CocoClip(null)
	{
		this.id=id;
	}

	public function Destructor()
	{
	}

 	public function work()
 	{
 		this.dispatchEvent(this.OnClick);
 	}
}

///////////////////////////////////////////////////////
// This class is an events source (produces events)
///////////////////////////////////////////////////////
class UITextBoxClass : CocoClip
{
	public var id:String;

	public event OnChange(text:String);
	//public event OnClick();
	//public event OnTouchStart(x:Float, y:Float);
	//public event OnTouchMove(x:Float, y:Float);
	//public event OnTouchEnd(x:Float, y:Float);

	public function Constructor(id:String) : CocoClip(null)
	{
		this.id=id;
	}

	public function Destructor()
	{
	}

 	public function work()
 	{
 		dispatchEvent(this.OnClick);
 		this.dispatchEvent(this.OnChange, "test1");
 		this.dispatchEvent(this.OnTouchStart, 5, 6);
 	}
}


///////////////////////////////////////////////////////
// This class is an event listener (receives events)
///////////////////////////////////////////////////////

class UIFormClass : CocoClip implements IEventListener
{
	private var body:CocoClip;
	private var button1:UIButtonClass;
	private var text1:UITextBoxClass;
	private var text2:UITextBoxClass;
	private var scrollLastTime:Time;
	private var scrollLastPointX:Float;
	private var scrollLastPointY:Float;

 	public function Constructor(scene:CocoScene) : CocoClip(null)
 	{
 		var img:CocoImage = scene.getImageSymbol("SpriteSymbol_metal_slug");

 		button1 = new UIButtonClass("button1");
 		button1.addEventListener(button1.OnClick, HandleOnClick);
 		button1.addEventListener(button1.OnClick, HandleOnClick);

 		text1 = new UITextBoxClass("text1");
 		text1.addEventListener(text1.OnClick, HandleOnClick);
 		text1.addEventListener(text1.OnChange, HandleOnChange);
 		text1.addEventListener(text1.OnChange, HandleOnValidate);

 		text2 = new UITextBoxClass("text2");
 		text2.addEventListener(text2.OnClick, HandleOnClick);
 		text2.addEventListener(text2.OnChange, HandleOnChange);
 		text2.addEventListener(text2.OnChange, HandleOnValidate);

 		//button1.work();
 		//text1.work();
 		__instanceName = "form1";
		__timeline.addKeyFrameEx(null, null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO, true, true, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, null, false, false, '');
		scene.__root.addChild(this);

 		button1.__instanceName = "button1";
 		button1.__image = img;
 		button1.__timeline.addKeyFrameEx(null, null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO, true, true, 0, 100, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, null, false, false, '');

 		text1.__instanceName = "text1";
 		text1.__image = img;
 		text1.__timeline.addKeyFrameEx(null, null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO, true, true, -100, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, null, false, false, '');

 		text2.__instanceName = "text2";
 		text2.__image = img;
		text2.__timeline.addKeyFrameEx(null, null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO, true, true, 100, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, null, false, false, '');

		body = new CocoClip(null);
 		body.__instanceName = "body";
 		body.__timeline.addKeyFrameEx(null, null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO, true, true, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, null, false, false, '');

 		body.addChild(button1);
 		body.addChild(text1);
 		body.addChild(text2);
 		body.addEventListener(body.OnTouchStart, HandleStart);
 		body.addEventListener(body.OnTouchMove, HandleMove);
 		body.addEventListener(body.OnTouchEnd, HandleEnd);
 		//scene.__root.addChild(body);
 	}

 	public function Destructor()
 	{
 		button1.removeEventListener(button1.OnClick, HandleOnClick);
 		text1.removeEventListener(text1.OnClick, HandleOnClick);
 		text1.removeEventListener(text1.OnChange, HandleOnChange);
 		text1.removeEventListener(text1.OnChange, HandleOnValidate);
 		text2.removeEventListener(text2.OnClick,  HandleOnClick);
 		text2.removeEventListener(text2.OnChange, HandleOnChange);
 		text2.removeEventListener(text2.OnChange, HandleOnValidate);
 		delete button1;
 		delete text1;
 		delete text2;
 	}

 	public function HandleStart(sender:CocoEventSource, e:CocoEvent) :Boolean
	{
		trace(sender.__className + ", " + e.type);
		//scrollLastTime = engine.__clock;
		//scrollLastPointX = e.__clientX;
		//scrollLastPointY = e.__clientY;
		return false;
	}

	public function HandleMove(sender:CocoEventSource, e:CocoEvent) :Boolean
	{
		trace(sender.__className + ", " + e.type);
		var dX:Float = e.__clientX - scrollLastPointX;
		var dY:Float = e.__clientY - scrollLastPointY;
		body.__timeline.__keyFrames[0].x += dX;
		body.__timeline.__keyFrames[0].y += dY;
		//scrollLastTime = engine.__clock;
		//scrollLastPointX = e.__clientX;
		//scrollLastPointY = e.__clientY;
		return false;
	}

	public function HandleEnd(sender:CocoEventSource, e:CocoEvent) :Boolean
	{
		trace(sender.__className + ", " + e.type);
		return false;
	}

	public function HandleOnClick(sender:CocoEventSource, e:CocoEvent) :Boolean
	{
		trace(sender.__className + ", " + e.type);
		return false;
	}

	public function HandleOnChange(sender:UITextBoxClass, e:UITextBoxClassOnChangeEvent) :Boolean
	{
		trace(sender.id + ", " + e.type + ", " + e.text);
		return false;
	}

	public function HandleOnValidate(sender:UITextBoxClass, e:CocoEvent, text:String) :Boolean
	{
		trace(sender.id + ", " + e.type + ", " + text);
		return false;
	}
}
