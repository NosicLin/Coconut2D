#pragma export_native;
#pragma export_web;

#include "CocoEngine.jspp"

// ==================================================================================================================================
//	   ______                     ______            _
//	  / ____/___ _____ ___  ___  / ____/___  ____ _(_)___  ___
//	 / / __/ __ `/ __ `__ \/ _ \/ __/ / __ \/ __ `/ / __ \/ _ \
//	/ /_/ / /_/ / / / / / /  __/ /___/ / / / /_/ / / / / /  __/
//	\____/\__,_/_/ /_/ /_/\___/_____/_/ /_/\__, /_/_/ /_/\___/
//	                                      /____/
// ==================================================================================================================================

state class GameEngine : CocoEngine implements IEventListener
{
	private reference var scene:CocoScene;
	protected var app:CocoAppController;

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor()
	{
		trace("Starting...");
		app=null;
		setNextState(STATE_START_APP);
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		delete app;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public state STATE_START_APP
	{
		function enter()
		{
			scene = new NewAnimation(this);
		}

		function exit()
		{
		}

		function tick(time:Float)
		{
			scene.tick(time);
			setNextState(STATE_DATASET_TEST);
		}

		function paint(ctx:ICocoRenderContext, time:Time)
		{
			scene.paint(ctx, time);
		}
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public state STATE_TEST_ASYNC
	{
		var timer:CocoTimer;

		function enter()
		{
			timer = new CocoTimer(10000);
		}

		function exit()
		{
		}

		function tick(time:Float)
		{
			scene.tick(time);

			if(timer.Signalled)
			{
				delete timer;
				setNextState(STATE_DATASET_TEST);
			}
		}

		function paint(ctx:ICocoRenderContext, time:Time)
		{
			scene.paint(ctx, time);
		}
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public state STATE_DATASET_TEST
	{
		var ds:CocoDataset;

		function enter()
		{
			var js:CocoJSONParser = new CocoJSONParser();
			var doc:CocoDOMDocument = js.parse("{\"person\": { \"address\": { \"city\": \"Anytown\", \"postalCode\": \"98765-4321\", \"state\": \"CA\", \"street\": \"12345 Sixth Ave\", \"type\": \"home\" }, \"created\": \"2006-11-11T19:23\", \"firstName\": \"Robert\", \"lastName\": \"Smith\", \"modified\": \"2006-12-31T23:59\", \"array_test\": [ 0, 1, 2, 3.14, \"5\", true, false, null, { \"6\" : \"7\" } ] }}");

			trace(doc.toXML());
			var xml:CocoXMLParser = new CocoXMLParser();
			doc = xml.parse(doc.toXML());
			trace(doc.toXML());
			var n:CocoDOMNode = doc.selectSingleNode("//document/person/array_test/item[@vt=='boolean']");

			var list:Array<CocoDOMNode>;

			list = doc.selectNodes("//document/person/array_test/item[@vt=='boolean']");
			delete list;

			list = doc.selectNodes("//item[@vt=='boolean']");
			delete list;

			list = doc.selectNodes("//array_test/item");
			delete list;

			list = doc.selectNodes("//item");
			delete list;

			delete doc;

			var s:String = "Test";
			trace(md5(s));

			trace("=============xxxx====================");
			trace("Φορτώνει, παρακαλώ περιμένετε...");
			trace("=============xxxx====================");

			ds = new CocoDataset();
			ds.openURL("http://www.mobilefx.com/coconut2d/data.bin", true);
		}

		function exit()
		{
			delete ds;
		}

		function tick(time:Float)
		{
			if(ds && ds.Ready)
			{
				trace(ds.toDebugString());
				setNextState(STATE_SHOW_FORM);
			}
		}

		function paint(ctx:ICocoRenderContext, time:Time)
		{
			scene.paint(ctx, time);
		}
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	public state STATE_SHOW_FORM
	{
		function enter()
		{
			app = new CocoAppController("MyApp", scene);
			app.addForm(new ReservationsForm("frm_Reserverations", scene));
			app.addForm(new ReservationsForm("frm_Reserverations", scene));
			app.showForm(app.Forms[0], COCO_UIFORM_ANIMATION.SHOW_NORMAL);

			// Create a QRCode
			//var c:CocoClip = scene.getClipByPath("Root/Mask1");
			//var img:CocoImage = new CocoImage();
			//img.createFromBase64(QRCodeEncode("test code"));
			//c.__image = img;
		}

		function exit()
		{
		}

		function tick(time:Float)
		{
			scene.tick(time);
		}

		function paint(ctx:ICocoRenderContext, time:Time)
		{
			scene.paint(ctx, time);
		}
	}
}
