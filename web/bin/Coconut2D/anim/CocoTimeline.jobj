"#export web"
//@line 40

function CocoTimeline()
{
	var __SUPER__;
	return ((function ()
	{
		var __CLASS__COCOTIMELINE__ = this,
			__PDEFINE__ =
			{
			}.constructor.defineProperty,
			__NOENUM__ =
			{
				enumerable: false
			};
		if (typeof __PDEFINE__ != 'function') __PDEFINE__ = null; /*@cc_on @if(1)try{({}).constructor.defineProperty({},'x',{})}catch(e){__PDEFINE__=null}@end @*/
		this.__SUPER__ = __SUPER__;
		__PDEFINE__ && __PDEFINE__(this, '__SUPER__', __NOENUM__);
		this.__CLASS__ = 'CocoTimeline';
		this.__PROTECTED__ =
		{
		};
		__PDEFINE__ && __PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 67
		var clear = this.clear = function ()
		{
			//@line 69
			__CLASS__COCOTIMELINE__.reset();
			//@line 70
			__CLASS__COCOTIMELINE__.__keyFrames = [];
			//@line 71
			__CLASS__COCOTIMELINE__.__labels = [];
			//@line 72
			__CLASS__COCOTIMELINE__.normalizetimeline();
		};
		//@line 76
		var reset = this.reset = function ()
		{
			//@line 78
			__CLASS__COCOTIMELINE__.__skipTime = 0;
			//@line 79
			__CLASS__COCOTIMELINE__.__paused = false;
			//@line 80
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			{
				//@line 82
				__CLASS__COCOTIMELINE__.__keyFrames[i].reset();
			}
		};
		//@line 87
		var addLabel = this.addLabel = function (Label)
		{
			//@line 89
			if (Label) __CLASS__COCOTIMELINE__.__labels.push(Label);
			//@line 90
			return Label;
		};
		//@line 94
		var addLabelEx = this.addLabelEx = function (FrameIndex, LabelName)
		{
			//@line 96
			var Label = new CocoTimeLabel(FrameIndex, LabelName);
			//@line 97
			return __CLASS__COCOTIMELINE__.addLabel(Label);
		};
		//@line 101
		var findLabelByName = this.findLabelByName = function (LabelName)
		{
			//@line 103
			for (var i = __CLASS__COCOTIMELINE__.__labels.size() - 1; i >= 0; i--)
			{
				//@line 105
				if (__CLASS__COCOTIMELINE__.__labels[i].name == LabelName)
				{
					//@line 107
					return __CLASS__COCOTIMELINE__.__labels[i];
				}
			}
			//@line 110
			return null;
		};
		//@line 114
		var keyFrame = this.keyFrame = function (frameIndex)
		{
			//@line 116
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			{
				//@line 118
				if (__CLASS__COCOTIMELINE__.__keyFrames[i].frameIndex == frameIndex)
				{
					//@line 120
					return __CLASS__COCOTIMELINE__.__keyFrames[i];
				}
			}
			//@line 123
			return null;
		};
		//@line 127
		var firstKeyFrame = this.firstKeyFrame = function ()
		{
			//@line 129
			return __CLASS__COCOTIMELINE__.__keyFrames[0];
		};
		//@line 133
		var lastKeyFrame = this.lastKeyFrame = function ()
		{
			//@line 135
			return __CLASS__COCOTIMELINE__.__keyFrames[__CLASS__COCOTIMELINE__.__keyFrames.size() - 1];
		};
		//@line 139
		var addKeyFrame = this.addKeyFrame = function (KeyFrame)
		{
			//@line 141
			if (KeyFrame)
			{
				//@line 143
				KeyFrame.frameIndex = Math.floor(KeyFrame.frameIndex);
				//@line 144
				__CLASS__COCOTIMELINE__.__keyFrames.push(KeyFrame);
				//@line 145
				__CLASS__COCOTIMELINE__.normalizetimeline();
			}
			//@line 147
			return KeyFrame;
		};
		//@line 151
		var addKeyFrameEx = this.addKeyFrameEx = function (actionCallback, frameIndex, frameInterpolation, handleEvents, visible, x, y, scaleX, scaleY, rotation, pivotX, pivotY, alpha)
		{
			//@line 165
			var KeyFrame = new CocoKeyFrame;
			//@line 167
			KeyFrame.action = actionCallback;
			//@line 168
			KeyFrame.frameIndex = frameIndex;
			//@line 169
			KeyFrame.frameInterpolation = frameInterpolation;
			//@line 170
			KeyFrame.handleEvents = handleEvents;
			//@line 171
			KeyFrame.visible = visible;
			//@line 172
			KeyFrame.x = x;
			//@line 173
			KeyFrame.y = y;
			//@line 174
			KeyFrame.scaleX = scaleX;
			//@line 175
			KeyFrame.scaleY = scaleY;
			//@line 176
			KeyFrame.rotation = rotation;
			//@line 177
			KeyFrame.pivotX = pivotX;
			//@line 178
			KeyFrame.pivotY = pivotY;
			//@line 179
			KeyFrame.alpha = alpha;
			//@line 181
			return __CLASS__COCOTIMELINE__.addKeyFrame(KeyFrame);
		};
		//@line 185
		var prepare = this.prepare = function (scene, clip)
		{
			//@line 187
			__CLASS__COCOTIMELINE__.__fps = scene.__fps;
			//@line 188
			__CLASS__COCOTIMELINE__.normalizetimeline();
		};
		//@line 192
		var normalizetimeline = this.normalizetimeline = function ()
		{
			//@line 194
			__CLASS__COCOTIMELINE__.reset();
			//@line 195
			__CLASS__COCOTIMELINE__.__durationInFrames = 0;
			//@line 196
			__CLASS__COCOTIMELINE__.__durationInTime = 0;
			//@line 197
			__CLASS__COCOTIMELINE__.__singleFrameDurationTime = 0;
			//@line 198
			if (__CLASS__COCOTIMELINE__.__keyFrames.size() > 0)
			{
				//@line 200
				__CLASS__COCOTIMELINE__.__durationInFrames = __CLASS__COCOTIMELINE__.__keyFrames[__CLASS__COCOTIMELINE__.__keyFrames.size() - 1].frameIndex + 1;
				//@line 201
				__CLASS__COCOTIMELINE__.__durationInTime = (__CLASS__COCOTIMELINE__.__durationInFrames / __CLASS__COCOTIMELINE__.__fps) * 1000;
				//@line 202
				__CLASS__COCOTIMELINE__.__singleFrameDurationTime = __CLASS__COCOTIMELINE__.__durationInTime / __CLASS__COCOTIMELINE__.__durationInFrames;
			}
		};
		//@line 207
		var jumpBy = this.jumpBy = function (frames, paused)
		{
			//@line 209
			__CLASS__COCOTIMELINE__.__paused = paused;
			//@line 210
			if (frames != 0)
			{
				//@line 212
				__CLASS__COCOTIMELINE__.__skipTime += (frames * __CLASS__COCOTIMELINE__.__singleFrameDurationTime);
				//@line 213
				__CLASS__COCOTIMELINE__.__pausedKeyFrame = null;
			}
		};
		//@line 218
		var findKeyFrameBeforeframeIndex = this.findKeyFrameBeforeframeIndex = function (frameIndex, inclusive, excludeListIndex)
		{
			//@line 220
			var KeyFrame;
			//@line 221
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			{
				//@line 223
				if (i != excludeListIndex)
				{
					//@line 225
					KeyFrame = __CLASS__COCOTIMELINE__.__keyFrames[i];
					//@line 226
					if (inclusive)
					{
						//@line 228
						if (KeyFrame.frameIndex <= frameIndex)
						//@line 229
						return KeyFrame;
					}
					else
					{
						//@line 233
						if (KeyFrame.frameIndex < frameIndex)
						//@line 234
						return KeyFrame;
					}
				}
			}
			//@line 238
			return null;
		};
		//@line 242
		var findKeyFrameAfterframeIndex = this.findKeyFrameAfterframeIndex = function (frameIndex, inclusive, excludeListIndex)
		{
			//@line 244
			var KeyFrame;
			//@line 245
			for (var i = 0, L = __CLASS__COCOTIMELINE__.__keyFrames.size(); i < L; i++)
			{
				//@line 247
				if (i != excludeListIndex)
				{
					//@line 249
					KeyFrame = __CLASS__COCOTIMELINE__.__keyFrames[i];
					//@line 250
					if (inclusive)
					{
						//@line 252
						if (KeyFrame.frameIndex >= frameIndex)
						//@line 253
						return KeyFrame;
					}
					else
					{
						//@line 257
						if (KeyFrame.frameIndex > frameIndex)
						//@line 258
						return KeyFrame;
					}
				}
			}
			//@line 262
			return null;
		};
		//@line 266
		var interpolateByTime = this.interpolateByTime = function (LoopTime)
		{
			//@line 268
			var T = (LoopTime / __CLASS__COCOTIMELINE__.__singleFrameDurationTime);
			//@line 269
			return __CLASS__COCOTIMELINE__.interpolateByFrame(T);
		};
		//@line 273
		var interpolateByFrame = this.interpolateByFrame = function (frameIndex)
		{
			//@line 275
			if (__CLASS__COCOTIMELINE__.__paused && __CLASS__COCOTIMELINE__.__pausedKeyFrame)
			//@line 276
			return __CLASS__COCOTIMELINE__.__pausedKeyFrame;
			//@line 278
			var F = null;
			//@line 279
			var F1 = null;
			//@line 280
			var F2 = null;
			//@line 281
			var s = 1.0;
			//@line 282
			var FrameIndex = Math.floor(frameIndex);
			//@line 285
			if (__CLASS__COCOTIMELINE__.__keyFrames.size() == 0)
			{
				//@line 287
				F = new CocoKeyFrame;
				//@line 288
				F.frameIndex = FrameIndex;
				//@line 289
				F.visible = false;
				//@line 290
				return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
			}
			//@line 294
			F1 = __CLASS__COCOTIMELINE__.keyFrame(FrameIndex);
			//@line 295
			if (F1) return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F1.clone());
			//@line 298
			F1 = __CLASS__COCOTIMELINE__.findKeyFrameBeforeframeIndex(FrameIndex, false, -1);
			//@line 300
			if (!F1)
			{
				//@line 303
				F = new CocoKeyFrame;
				//@line 304
				F.frameIndex = FrameIndex;
				//@line 305
				F.visible = false;
				//@line 306
				return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
			}
			else
			{
				//@line 310
				switch (F1.frameInterpolation)
				{
					//@line 312
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO:
					{
						//@line 314
						F = F1.clone();
						//@line 315
						F.frameIndex = FrameIndex;
						//@line 316
						F.action = null;
						//@line 317
						return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
					}
					break;
					//@line 319
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_NONE:
					{
						//@line 321
						F = F1.clone();
						//@line 322
						F.frameIndex = FrameIndex;
						//@line 323
						F.action = null;
						//@line 324
						F.visible = false;
						//@line 325
						return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
					}
					break;
					//@line 327
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_MOTION_TWEEN:
					{
						//@line 330
						F2 = __CLASS__COCOTIMELINE__.findKeyFrameAfterframeIndex(FrameIndex, false, -1);
						//@line 332
						if (!F2)
						{
							//@line 335
							F = F1.clone();
							//@line 336
							F.frameIndex = FrameIndex;
							//@line 337
							F.action = null;
							//@line 338
							return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
						}
						else
						{
							//@line 344
							F = F1.clone();
							//@line 345
							F.frameIndex = FrameIndex;
							//@line 346
							F.action = null;
							//@line 347
							s = (frameIndex - F1.frameIndex) / (F2.frameIndex - F1.frameIndex);
							//@line 348
							F.interpolate(F1, F2, s);
							//@line 349
							return (__CLASS__COCOTIMELINE__.__pausedKeyFrame = F);
						}
					}
					break;
				}
			}
			//@line 353
			return null;
		};
		//@line 42
		this.__labels = [];
		//@line 43
		this.__keyFrames = [];
		//@line 44
		this.__singleFrameDurationTime = 0;
		//@line 45
		this.__durationInTime = 0;
		//@line 46
		this.__durationInFrames = 0;
		//@line 47
		this.__skipTime = 0;
		//@line 48
		this.__paused = false;
		//@line 49
		this.__pausedKeyFrame = null;
		//@line 50
		this.__fps = 0;
		//@line 53
		this.Constructor = function ()
		{
			//@line 55
			__CLASS__COCOTIMELINE__.__singleFrameDurationTime = 0.0;
			//@line 56
			__CLASS__COCOTIMELINE__.__durationInTime = 0.0;
			//@line 57
			__CLASS__COCOTIMELINE__.__durationInFrames = 0;
			//@line 58
			__CLASS__COCOTIMELINE__.__skipTime = 0.0;
			//@line 59
			__CLASS__COCOTIMELINE__.__paused = false;
			//@line 60
			__CLASS__COCOTIMELINE__.__pausedKeyFrame = null;
			//@line 61
			__CLASS__COCOTIMELINE__.__fps = 30;
			//@line 63
			__CLASS__COCOTIMELINE__.addKeyFrameEx(null, 0, COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_MOTION_TWEEN, false, true, 0, 0, 1, 1, 0, 0, 0, 1);
			return __CLASS__COCOTIMELINE__
		};
		__PDEFINE__ && __PDEFINE__(this, 'Constructor', __NOENUM__);
		return this
	}).call(
	{
	})).Constructor.apply(this, [].slice.call(arguments))
}