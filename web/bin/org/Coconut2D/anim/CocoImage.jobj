//@compile{false}
//@line 41

function CocoImage()
{
	var __SUPER__;
	return ((function ()
	{
		var __CLASS__COCOIMAGE__ = this,
			__PDEFINE__ =
			{
			}.constructor.defineProperty,
			__NOENUM__ =
			{
				enumerable: false
			};
		if (typeof __PDEFINE__ != 'function') __PDEFINE__ = null; /*@cc_on @if(1)try{({}).constructor.defineProperty({},'x',{})}catch(e){__PDEFINE__=null}@end @*/
		this.__SUPER__ = __SUPER__;
		__PDEFINE__ && __PDEFINE__(this, '__SUPER__', __NOENUM__);
		this.__PROTECTED__ =
		{
		};
		__PDEFINE__ && __PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 88
		var addSibling = this.addSibling = function (sibling)
		{
			//@line 90
			__CLASS__COCOIMAGE__.viewSiblings.push(sibling);
			//@line 91
			return sibling;
		};
		//@line 95
		var addSequence = this.addSequence = function (sequence)
		{
			//@line 97
			if (!sequence) return null;
			//@line 98
			if (__CLASS__COCOIMAGE__.getSequence(sequence.name)) throw "Sequence " + sequence.name + " already exists.";
			//@line 99
			__CLASS__COCOIMAGE__.sequences.push(sequence);
			//@line 100
			__CLASS__COCOIMAGE__.isSpriteSheet = true;
			//@line 101
			return sequence;
		};
		//@line 105
		var getSequence = this.getSequence = function (name)
		{
			//@line 107
			for (var i = __CLASS__COCOIMAGE__.sequences.size() - 1; i >= 0; i--)
			{
				//@line 109
				if (__CLASS__COCOIMAGE__.sequences[i].name == name)
				//@line 110
				return __CLASS__COCOIMAGE__.sequences[i];
			}
			//@line 112
			return null;
		};
		//@line 131
		var prepare = this.prepare = function (gl)
		{
			//@line 134
			var w2 = __CLASS__COCOIMAGE__.textureCellWidth / 2;
			//@line 135
			var h2 = __CLASS__COCOIMAGE__.textureCellHeight / 2;
			//@line 136
			__CLASS__COCOIMAGE__.texSize = new Float32Array([__CLASS__COCOIMAGE__.textureCellWidth / __CLASS__COCOIMAGE__.image.naturalWidth, __CLASS__COCOIMAGE__.textureCellHeight / __CLASS__COCOIMAGE__.image.naturalHeight]);
			//@line 139
			__CLASS__COCOIMAGE__.texture = gl.createTexture();
			//@line 140
			gl.bindTexture(gl.TEXTURE_2D, __CLASS__COCOIMAGE__.texture);
			//@line 143
			gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, __CLASS__COCOIMAGE__.image);
			//@line 146
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			//@line 147
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			//@line 150
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			//@line 151
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
			//@line 154
			gl.generateMipmap(gl.TEXTURE_2D);
			//@line 157
			gl.bindTexture(gl.TEXTURE_2D, null);
			//@line 159
			var texData = new Float32Array([0, 0, -w2, -h2, 0, 1, -w2, h2, 1, 0, w2, -h2, 1, 1, w2, h2]);
			//@line 160
			__CLASS__COCOIMAGE__.buffer = gl.createBuffer();
			//@line 161
			gl.bindBuffer(gl.ARRAY_BUFFER, __CLASS__COCOIMAGE__.buffer);
			//@line 162
			gl.bufferData(gl.ARRAY_BUFFER, texData, gl.STATIC_DRAW);
			//@line 163
			gl.bindBuffer(gl.ARRAY_BUFFER, null);
		};
		//@line 43
		this.symbolName = "";
		//@line 44
		this.image = null;
		//@line 47
		this.texture = null;
		//@line 48
		this.textureCellWidth = 0;
		//@line 49
		this.textureCellHeight = 0;
		//@line 50
		this.textureGrid = null;
		//@line 51
		this.color = null;
		//@line 52
		this.texSize = null;
		//@line 53
		this.buffer = null;
		//@line 54
		this.isSpriteSheet = false;
		//@line 57
		this.sequences = [];
		//@line 60
		this.baseUrl = "";
		//@line 61
		this.viewOptimalWidth = 0;
		//@line 62
		this.viewOptimalHeight = 0;
		//@line 63
		this.viewSiblings = [];
		//@line 64
		this.pixelRatio = 0;
		//@line 67
		this.Constructor = function ()
		{
			//@line 69
			__CLASS__COCOIMAGE__.image = null;
			//@line 70
			__CLASS__COCOIMAGE__.symbolName = "";
			//@line 71
			__CLASS__COCOIMAGE__.texture = null;
			//@line 72
			__CLASS__COCOIMAGE__.textureCellWidth = 0;
			//@line 73
			__CLASS__COCOIMAGE__.textureCellHeight = 0;
			//@line 74
			__CLASS__COCOIMAGE__.textureGrid = new Float32Array([0, 0]);
			//@line 75
			__CLASS__COCOIMAGE__.color = new Float32Array([1, 1, 1, 1]);
			//@line 76
			__CLASS__COCOIMAGE__.texSize = new Float32Array([1, 1]);
			//@line 77
			__CLASS__COCOIMAGE__.buffer = null;
			//@line 78
			__CLASS__COCOIMAGE__.isSpriteSheet = false;
			//@line 79
			__CLASS__COCOIMAGE__.sequences = [];
			//@line 80
			__CLASS__COCOIMAGE__.baseUrl = null;
			//@line 81
			__CLASS__COCOIMAGE__.viewOptimalWidth = 0;
			//@line 82
			__CLASS__COCOIMAGE__.viewOptimalHeight = 0;
			//@line 83
			__CLASS__COCOIMAGE__.viewSiblings = [];
			//@line 84
			__CLASS__COCOIMAGE__.pixelRatio = 1;
			return __CLASS__COCOIMAGE__
		};
		__PDEFINE__ && __PDEFINE__(this, 'Constructor', __NOENUM__);
		return this
	}).call(
	{
	})).Constructor.apply(this, [].slice.call(arguments))
}