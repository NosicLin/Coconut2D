//@compile{false}
//@line 45
function CocoEngine()
{
	var __SUPER__;
	return ((function ()
	{
		var __CLASS1096__ = this,
			__PDEFINE__ = {}.constructor.defineProperty,
			__NOENUM__ =
			{
				enumerable: false
			};
		if (typeof __PDEFINE__ != 'function') __PDEFINE__ = null; /*@cc_on @if(1)try{({}).constructor.defineProperty({},'x',{})}catch(e){__PDEFINE__=null}@end @*/
		this.__SUPER__ = __SUPER__;
		__PDEFINE__ && __PDEFINE__(this, '__SUPER__', __NOENUM__);
		this.__PROTECTED__ = {};
		__PDEFINE__ && __PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 63
		var __setTouchEvent = function (e)
		{
			//@line 64
			//@line 65
			__CLASS1096__.__touchEvent = e;
			//@line 66
			__CLASS1096__.__touchEvent.clientX = e.changedTouches[0].clientX;
			//@line 67
			__CLASS1096__.__touchEvent.clientY = e.changedTouches[0].clientY;
		};
		//@line 71
		var currentState = this.currentState = function ()
		{
			//@line 72
			//@line 73
			return __currentState;
		};
		//@line 77
		var setState = this.setState = function (state)
		{
			//@line 78
			//@line 79
			__nextState = state;
		};
		//@line 83
		var tick = this.tick = function (gl, time)
		{
			//@line 84
			//@line 86
			if (__nextState != null)
			//@line 87
			{
				//@line 88
				__currentState = __nextState;
				//@line 89
				__stateStart = time;
				//@line 90
				__nextState = null;
			}
			//@line 94
			__currentState.tick(__CLASS1096__, gl, time - __stateStart);
			//@line 95
			__CLASS1096__.__touchEvent = null;
		};
		//@line 47
		var __currentState = null;
		//@line 48
		var __nextState = null;
		//@line 49
		var __stateStart = 0;
		//@line 51
		this.__touchEvent = undefined;
		this.Constructor = function ()
		{
			//@line 55
			//@line 57
			window.addEventListener("touchstart", __setTouchEvent);
			//@line 58
			window.addEventListener("touchmove", __setTouchEvent);
			//@line 59
			window.addEventListener("touchend", __setTouchEvent);
			return __CLASS1096__
		};
		__PDEFINE__ && __PDEFINE__(this, 'Constructor', __NOENUM__);
		return this
	}).call(
	{
	})).Constructor.apply(this, [].slice.call(arguments))
}
//@line 97
;