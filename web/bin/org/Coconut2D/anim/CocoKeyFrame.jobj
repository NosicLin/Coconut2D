//@compile{false}
//@line 39

function CocoKeyFrame()
{
	var __SUPER__;
	return ((function ()
	{
		var __CLASS__COCOKEYFRAME__ = this,
			__PDEFINE__ =
			{
			}.constructor.defineProperty,
			__NOENUM__ =
			{
				enumerable: false
			};
		if (typeof __PDEFINE__ != 'function') __PDEFINE__ = null; /*@cc_on @if(1)try{({}).constructor.defineProperty({},'x',{})}catch(e){__PDEFINE__=null}@end @*/
		this.__SUPER__ = __SUPER__;
		__PDEFINE__ && __PDEFINE__(this, '__SUPER__', __NOENUM__);
		this.__PROTECTED__ =
		{
		};
		__PDEFINE__ && __PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 79
		var clone = this.clone = function ()
		{
			//@line 81
			var c = new CocoKeyFrame;
			//@line 83
			c.alpha = __CLASS__COCOKEYFRAME__.alpha;
			//@line 84
			c.frameIndex = __CLASS__COCOKEYFRAME__.frameIndex;
			//@line 85
			c.frameInterpolation = __CLASS__COCOKEYFRAME__.frameInterpolation;
			//@line 86
			c.handleEvents = __CLASS__COCOKEYFRAME__.handleEvents;
			//@line 87
			c.pivotX = __CLASS__COCOKEYFRAME__.pivotX;
			//@line 88
			c.pivotY = __CLASS__COCOKEYFRAME__.pivotY;
			//@line 89
			c.rotation = __CLASS__COCOKEYFRAME__.rotation;
			//@line 90
			c.scaleX = __CLASS__COCOKEYFRAME__.scaleX;
			//@line 91
			c.scaleY = __CLASS__COCOKEYFRAME__.scaleY;
			//@line 92
			c.visible = __CLASS__COCOKEYFRAME__.visible;
			//@line 93
			c.x = __CLASS__COCOKEYFRAME__.x;
			//@line 94
			c.y = __CLASS__COCOKEYFRAME__.y;
			//@line 95
			c.action = __CLASS__COCOKEYFRAME__.action;
			//@line 96
			c.calcBoundingBox = __CLASS__COCOKEYFRAME__.calcBoundingBox;
			//@line 98
			return c;
		};
		//@line 102
		var reset = this.reset = function ()
		{
			//@line 104
			__lastActionExecutionTime = 0;
		};
		//@line 108
		var execute = this.execute = function (gl, currentTime, loopTime, scene, clip)
		{
			//@line 112
			if (currentTime - __lastActionExecutionTime > clip.__timeline.__singleFrameDurationTime)
			{
				//@line 114
				__lastActionExecutionTime = currentTime;
				//@line 115
				if (__CLASS__COCOKEYFRAME__.action)
				{
					//@line 117
					var args = [gl, currentTime, loopTime, clip, __CLASS__COCOKEYFRAME__];
					//@line 118
					__CLASS__COCOKEYFRAME__.action.apply(scene, args);
				}
			}
		};
		//@line 124
		var interpolate = this.interpolate = function (F1, F2, s)
		{
			//@line 126
			__CLASS__COCOKEYFRAME__.alpha = F1.alpha + s * (F2.alpha - F1.alpha);
			//@line 127
			__CLASS__COCOKEYFRAME__.x = F1.x + s * (F2.x - F1.x);
			//@line 128
			__CLASS__COCOKEYFRAME__.y = F1.y + s * (F2.y - F1.y);
			//@line 129
			__CLASS__COCOKEYFRAME__.scaleX = F1.scaleX + s * (F2.scaleX - F1.scaleX);
			//@line 130
			__CLASS__COCOKEYFRAME__.scaleY = F1.scaleY + s * (F2.scaleY - F1.scaleY);
			//@line 131
			__CLASS__COCOKEYFRAME__.rotation = F1.rotation + s * (F2.rotation - F1.rotation);
			//@line 132
			__CLASS__COCOKEYFRAME__.pivotX = F1.pivotX + s * (F2.pivotX - F1.pivotX);
			//@line 133
			__CLASS__COCOKEYFRAME__.pivotY = F1.pivotY + s * (F2.pivotY - F1.pivotY);
		};
		//@line 137
		var combine = this.combine = function (Frame)
		{
			//@line 139
			if (!Frame) return;
			//@line 140
			__CLASS__COCOKEYFRAME__.alpha = __CLASS__COCOKEYFRAME__.alpha * Frame.alpha;
			//@line 141
			__CLASS__COCOKEYFRAME__.visible = __CLASS__COCOKEYFRAME__.visible && Frame.visible;
			//@line 142
			__CLASS__COCOKEYFRAME__.handleEvents = __CLASS__COCOKEYFRAME__.handleEvents && Frame.handleEvents;
			//@line 143
			__CLASS__COCOKEYFRAME__.calcBoundingBox = __CLASS__COCOKEYFRAME__.calcBoundingBox && Frame.calcBoundingBox;
		};
		//@line 146
		var apply = this.apply = function (matrix)
		{
			//@line 148
			if (__CLASS__COCOKEYFRAME__.x != 0 || __CLASS__COCOKEYFRAME__.y != 0) matrix.translate(__CLASS__COCOKEYFRAME__.x, __CLASS__COCOKEYFRAME__.y);
			//@line 149
			if (__CLASS__COCOKEYFRAME__.rotation != 0) matrix.rotateZ(__CLASS__COCOKEYFRAME__.rotation * RADIANS);
			//@line 150
			if (__CLASS__COCOKEYFRAME__.scaleX != 1 || __CLASS__COCOKEYFRAME__.scaleY != 1) matrix.scale(__CLASS__COCOKEYFRAME__.scaleX, __CLASS__COCOKEYFRAME__.scaleY);
			//@line 151
			if (__CLASS__COCOKEYFRAME__.pivotX != 0 || __CLASS__COCOKEYFRAME__.pivotY != 0) matrix.translate(-__CLASS__COCOKEYFRAME__.pivotX, -__CLASS__COCOKEYFRAME__.pivotY);
		};
		//@line 41
		this.frameIndex = 0;
		//@line 42
		this.frameInterpolation = null;
		//@line 43
		this.handleEvents = false;
		//@line 44
		this.calcBoundingBox = false;
		//@line 45
		this.visible = false;
		//@line 46
		this.alpha = 0;
		//@line 47
		this.x = 0;
		//@line 48
		this.y = 0;
		//@line 49
		this.pivotX = 0;
		//@line 50
		this.pivotY = 0;
		//@line 51
		this.scaleX = 0;
		//@line 52
		this.scaleY = 0;
		//@line 53
		this.rotation = 0;
		//@line 54
		this.action = function ()
		{
		};
		//@line 56
		var __lastActionExecutionTime = 0;
		//@line 59
		this.Constructor = function ()
		{
			//@line 61
			__CLASS__COCOKEYFRAME__.frameIndex = 0;
			//@line 62
			__CLASS__COCOKEYFRAME__.frameInterpolation = COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_MOTION_TWEEN;
			//@line 63
			__CLASS__COCOKEYFRAME__.handleEvents = false;
			//@line 64
			__CLASS__COCOKEYFRAME__.calcBoundingBox = false;
			//@line 65
			__CLASS__COCOKEYFRAME__.visible = true;
			//@line 66
			__CLASS__COCOKEYFRAME__.x = 0;
			//@line 67
			__CLASS__COCOKEYFRAME__.y = 0;
			//@line 68
			__CLASS__COCOKEYFRAME__.scaleX = 1;
			//@line 69
			__CLASS__COCOKEYFRAME__.scaleY = 1;
			//@line 70
			__CLASS__COCOKEYFRAME__.rotation = 0;
			//@line 71
			__CLASS__COCOKEYFRAME__.pivotX = 0;
			//@line 72
			__CLASS__COCOKEYFRAME__.pivotY = 0;
			//@line 73
			__CLASS__COCOKEYFRAME__.alpha = 1;
			//@line 74
			__CLASS__COCOKEYFRAME__.action = null;
			//@line 75
			__lastActionExecutionTime = 0;
			return __CLASS__COCOKEYFRAME__
		};
		__PDEFINE__ && __PDEFINE__(this, 'Constructor', __NOENUM__);
		return this
	}).call(
	{
	})).Constructor.apply(this, [].slice.call(arguments))
}