"#export native"
"#export web"

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013-2014 www.coconut2D.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * ***** END LICENSE BLOCK ***** */

// ==================================================================================================================================
//	   ______                 ___             ___
//	  / ____/___  _________  /   | __  ______/ (_)___
//	 / /   / __ \/ ___/ __ \/ /| |/ / / / __  / / __ \
//	/ /___/ /_/ / /__/ /_/ / ___ / /_/ / /_/ / / /_/ /
//	\____/\____/\___/\____/_/  |_\__,_/\__,_/_/\____/
//
// ==================================================================================================================================

"#include WebGLRenderingContext.jspp"

class CocoAudio
{
	public var src:String;
	public var audio:Audio;
	public var autoplay:Boolean;
	public var loops:Integer;
	private var __firstPlayed:Boolean;
	private var __loopCount:Integer;

	private var __refCount:Integer;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Constructor(url:String, autoplay:Boolean, loops:Integer)
	{
		src = url;
		audio = new Audio(url);
		audio.autoplay = false;		// Controlled by CocoAudio
		audio.loop = false;			// Controlled by CocoAudio
		this.autoplay = autoplay;
		this.loops = loops;
		__firstPlayed = false;
		__loopCount = 0;
		__refCount = 1;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function Destructor()
	{
		if(--__refCount==0)
		{
			delete audio;
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function cloneNode(deep:Boolean) :CocoAudio
	{
		__refCount++;
		return this;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function tick()
	{
		if(!audio || !audio.src) return;

		if(!__firstPlayed && autoplay)
		{
			__firstPlayed = true;
			play();
		}

		trace(src + " : " + String(getCurrentTime()));

		if(loops>=0 && audio.ended)
		{
			__loopCount++;
			if(loops==0 || (loops>0 || __loopCount < loops))
				play();
		}
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function play()					{ if(audio) audio.play(); }
	public function pause()					{ if(audio) audio.pause(); }
	public function stop()					{ __loopCount=0; __firstPlayed=true; if(audio) audio.pause(); setCurrentTime(0); }
	public function duration() :Float   	{ return audio ? audio.duration : 0; }
	public function paused() :Boolean		{ return audio ? audio.paused : true; }
	public function ended() :Boolean		{ return audio ? audio.ended : true; }
	public function getCurrentTime() :Float	{ return audio ? audio.currentTime : 0; }
	public function setCurrentTime(t:Float)	{ if(audio) audio.currentTime = t; }
}
