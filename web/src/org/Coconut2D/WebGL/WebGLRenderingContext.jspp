//@compile{true}

//@include{Constants.js}
//@include{WebGLActiveInfo.jspp}
//@include{WebGLBuffer.jspp}
//@include{WebGLContextAttributes.jspp}
//@include{WebGLFramebuffer.jspp}
//@include{WebGLProgram.jspp}
//@include{WebGLRenderbuffer.jspp}
//@include{WebGLShader.jspp}
//@include{WebGLShaderPrecisionFormat.jspp}
//@include{WebGLTexture.jspp}
//@include{WebGLUniformLocation.jspp}

/* ***** BEGIN LICENSE BLOCK *****
 *
 * Copyright (C) 2013 www.coconut2D.org
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.   
 *
 * ***** END LICENSE BLOCK ***** */
 
class WebGLRenderingContext
{
	public var ACTIVE_ATTRIBUTES:Integer = 0x8B89;
	public var ACTIVE_TEXTURE:Integer = 0x84E0;
	public var ACTIVE_UNIFORMS:Integer = 0x8B86;
	public var ALIASED_LINE_WIDTH_RANGE:Integer = 0x846E;
	public var ALIASED_POINT_SIZE_RANGE:Integer = 0x846D;
	public var ALPHA:Integer = 0x1906;
	public var ALPHA_BITS:Integer = 0x0D55;
	public var ALWAYS:Integer = 0x0207;
	public var ARRAY_BUFFER:Integer = 0x8892;
	public var ARRAY_BUFFER_BINDING:Integer = 0x8894;
	public var ATTACHED_SHADERS:Integer = 0x8B85;
	public var BACK:Integer = 0x0405;
	public var BLEND:Integer = 0x0BE2;
	public var BLEND_COLOR:Integer = 0x8005;
	public var BLEND_DST_ALPHA:Integer = 0x80CA;
	public var BLEND_DST_RGB:Integer = 0x80C8;
	public var BLEND_EQUATION:Integer = 0x8009;
	public var BLEND_EQUATION_ALPHA:Integer = 0x883D;
	public var BLEND_EQUATION_RGB:Integer = 0x8009;
	public var BLEND_SRC_ALPHA:Integer = 0x80CB;
	public var BLEND_SRC_RGB:Integer = 0x80C9;
	public var BLUE_BITS:Integer = 0x0D54;
	public var BOOL:Integer = 0x8B56;
	public var BOOL_VEC2:Integer = 0x8B57;
	public var BOOL_VEC3:Integer = 0x8B58;
	public var BOOL_VEC4:Integer = 0x8B59;
	public var BROWSER_DEFAULT_WEBGL:Integer = 0x9244;
	public var BUFFER_SIZE:Integer = 0x8764;
	public var BUFFER_USAGE:Integer = 0x8765;
	public var BYTE:Integer = 0x1400;
	public var CCW:Integer = 0x0901;
	public var CLAMP_TO_EDGE:Integer = 0x812F;
	public var COLOR_ATTACHMENT0:Integer = 0x8CE0;
	public var COLOR_BUFFER_BIT:Integer = 0x00004000;
	public var COLOR_CLEAR_VALUE:Integer = 0x0C22;
	public var COLOR_WRITEMASK:Integer = 0x0C23;
	public var COMPILE_STATUS:Integer = 0x8B81;
	public var COMPRESSED_TEXTURE_FORMATS:Integer = 0x86A3;
	public var CONSTANT_ALPHA:Integer = 0x8003;
	public var CONSTANT_COLOR:Integer = 0x8001;
	public var CONTEXT_LOST_WEBGL:Integer = 0x9242;
	public var CULL_FACE:Integer = 0x0B44;
	public var CULL_FACE_MODE:Integer = 0x0B45;
	public var CURRENT_PROGRAM:Integer = 0x8B8D;
	public var CURRENT_VERTEX_ATTRIB:Integer = 0x8626;
	public var CW:Integer = 0x0900;
	public var DECR:Integer = 0x1E03;
	public var DECR_WRAP:Integer = 0x8508;
	public var DELETE_STATUS:Integer = 0x8B80;
	public var DEPTH_ATTACHMENT:Integer = 0x8D00;
	public var DEPTH_BITS:Integer = 0x0D56;
	public var DEPTH_BUFFER_BIT:Integer = 0x00000100;
	public var DEPTH_CLEAR_VALUE:Integer = 0x0B73;
	public var DEPTH_COMPONENT:Integer = 0x1902;
	public var DEPTH_COMPONENT16:Integer = 0x81A5;
	public var DEPTH_FUNC:Integer = 0x0B74;
	public var DEPTH_RANGE:Integer = 0x0B70;
	public var DEPTH_STENCIL:Integer = 0x84F9;
	public var DEPTH_STENCIL_ATTACHMENT:Integer = 0x821A;
	public var DEPTH_TEST:Integer = 0x0B71;
	public var DEPTH_WRITEMASK:Integer = 0x0B72;
	public var DITHER:Integer = 0x0BD0;
	public var DONT_CARE:Integer = 0x1100;
	public var DST_ALPHA:Integer = 0x0304;
	public var DST_COLOR:Integer = 0x0306;
	public var DYNAMIC_DRAW:Integer = 0x88E8;
	public var ELEMENT_ARRAY_BUFFER:Integer = 0x8893;
	public var ELEMENT_ARRAY_BUFFER_BINDING:Integer = 0x8895;
	public var EQUAL:Integer = 0x0202;
	public var FASTEST:Integer = 0x1101;
	public var FLOAT:Integer = 0x1406;
	public var FLOAT_MAT2:Integer = 0x8B5A;
	public var FLOAT_MAT3:Integer = 0x8B5B;
	public var FLOAT_MAT4:Integer = 0x8B5C;
	public var FLOAT_VEC2:Integer = 0x8B50;
	public var FLOAT_VEC3:Integer = 0x8B51;
	public var FLOAT_VEC4:Integer = 0x8B52;
	public var FRAGMENT_SHADER:Integer = 0x8B30;
	public var FRAMEBUFFER:Integer = 0x8D40;
	public var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:Integer = 0x8CD1;
	public var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:Integer = 0x8CD0;
	public var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:Integer = 0x8CD3;
	public var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:Integer = 0x8CD2;
	public var FRAMEBUFFER_BINDING:Integer = 0x8CA6;
	public var FRAMEBUFFER_COMPLETE:Integer = 0x8CD5;
	public var FRAMEBUFFER_INCOMPLETE_ATTACHMENT:Integer = 0x8CD6;
	public var FRAMEBUFFER_INCOMPLETE_DIMENSIONS:Integer = 0x8CD9;
	public var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:Integer = 0x8CD7;
	public var FRAMEBUFFER_UNSUPPORTED:Integer = 0x8CDD;
	public var FRONT:Integer = 0x0404;
	public var FRONT_AND_BACK:Integer = 0x0408;
	public var FRONT_FACE:Integer = 0x0B46;
	public var FUNC_ADD:Integer = 0x8006;
	public var FUNC_REVERSE_SUBTRACT:Integer = 0x800B;
	public var FUNC_SUBTRACT:Integer = 0x800A;
	public var GENERATE_MIPMAP_HINT:Integer = 0x8192;
	public var GEQUAL:Integer = 0x0206;
	public var GREATER:Integer = 0x0204;
	public var GREEN_BITS:Integer = 0x0D53;
	public var HIGH_FLOAT:Integer = 0x8DF2;
	public var HIGH_INT:Integer = 0x8DF5;
	public var INCR:Integer = 0x1E02;
	public var INCR_WRAP:Integer = 0x8507;
	public var INT:Integer = 0x1404;
	public var INT_VEC2:Integer = 0x8B53;
	public var INT_VEC3:Integer = 0x8B54;
	public var INT_VEC4:Integer = 0x8B55;
	public var INVALID_ENUM:Integer = 0x0500;
	public var INVALID_FRAMEBUFFER_OPERATION:Integer = 0x0506;
	public var INVALID_OPERATION:Integer = 0x0502;
	public var INVALID_VALUE:Integer = 0x0501;
	public var INVERT:Integer = 0x150A;
	public var KEEP:Integer = 0x1E00;
	public var LEQUAL:Integer = 0x0203;
	public var LESS:Integer = 0x0201;
	public var LINE_LOOP:Integer = 0x0002;
	public var LINE_STRIP:Integer = 0x0003;
	public var LINE_WIDTH:Integer = 0x0B21;
	public var LINEAR:Integer = 0x2601;
	public var LINEAR_MIPMAP_LINEAR:Integer = 0x2703;
	public var LINEAR_MIPMAP_NEAREST:Integer = 0x2701;
	public var LINES:Integer = 0x0001;
	public var LINK_STATUS:Integer = 0x8B82;
	public var LOW_FLOAT:Integer = 0x8DF0;
	public var LOW_INT:Integer = 0x8DF3;
	public var LUMINANCE:Integer = 0x1909;
	public var LUMINANCE_ALPHA:Integer = 0x190A;
	public var MAX_COMBINED_TEXTURE_IMAGE_UNITS:Integer = 0x8B4D;
	public var MAX_CUBE_MAP_TEXTURE_SIZE:Integer = 0x851C;
	public var MAX_FRAGMENT_UNIFORM_VECTORS:Integer = 0x8DFD;
	public var MAX_RENDERBUFFER_SIZE:Integer = 0x84E8;
	public var MAX_TEXTURE_IMAGE_UNITS:Integer = 0x8872;
	public var MAX_TEXTURE_SIZE:Integer = 0x0D33;
	public var MAX_VARYING_VECTORS:Integer = 0x8DFC;
	public var MAX_VERTEX_ATTRIBS:Integer = 0x8869;
	public var MAX_VERTEX_TEXTURE_IMAGE_UNITS:Integer = 0x8B4C;
	public var MAX_VERTEX_UNIFORM_VECTORS:Integer = 0x8DFB;
	public var MAX_VIEWPORT_DIMS:Integer = 0x0D3A;
	public var MEDIUM_FLOAT:Integer = 0x8DF1;
	public var MEDIUM_INT:Integer = 0x8DF4;
	public var MIRRORED_REPEAT:Integer = 0x8370;
	public var NEAREST:Integer = 0x2600;
	public var NEAREST_MIPMAP_LINEAR:Integer = 0x2702;
	public var NEAREST_MIPMAP_NEAREST:Integer = 0x2700;
	public var NEVER:Integer = 0x0200;
	public var NICEST:Integer = 0x1102;
	public var NO_ERROR:Integer = 0;
	public var NONE:Integer = 0;
	public var NOTEQUAL:Integer = 0x0205;
	public var ONE:Integer = 1;
	public var ONE_MINUS_CONSTANT_ALPHA:Integer = 0x8004;
	public var ONE_MINUS_CONSTANT_COLOR:Integer = 0x8002;
	public var ONE_MINUS_DST_ALPHA:Integer = 0x0305;
	public var ONE_MINUS_DST_COLOR:Integer = 0x0307;
	public var ONE_MINUS_SRC_ALPHA:Integer = 0x0303;
	public var ONE_MINUS_SRC_COLOR:Integer = 0x0301;
	public var OUT_OF_MEMORY:Integer = 0x0505;
	public var PACK_ALIGNMENT:Integer = 0x0D05;
	public var POINTS:Integer = 0x0000;
	public var POLYGON_OFFSET_FACTOR:Integer = 0x8038;
	public var POLYGON_OFFSET_FILL:Integer = 0x8037;
	public var POLYGON_OFFSET_UNITS:Integer = 0x2A00;
	public var RED_BITS:Integer = 0x0D52;
	public var RENDERBUFFER:Integer = 0x8D41;
	public var RENDERBUFFER_ALPHA_SIZE:Integer = 0x8D53;
	public var RENDERBUFFER_BINDING:Integer = 0x8CA7;
	public var RENDERBUFFER_BLUE_SIZE:Integer = 0x8D52;
	public var RENDERBUFFER_DEPTH_SIZE:Integer = 0x8D54;
	public var RENDERBUFFER_GREEN_SIZE:Integer = 0x8D51;
	public var RENDERBUFFER_HEIGHT:Integer = 0x8D43;
	public var RENDERBUFFER_INTERNAL_FORMAT:Integer = 0x8D44;
	public var RENDERBUFFER_RED_SIZE:Integer = 0x8D50;
	public var RENDERBUFFER_STENCIL_SIZE:Integer = 0x8D55;
	public var RENDERBUFFER_WIDTH:Integer = 0x8D42;
	public var RENDERER:Integer = 0x1F01;
	public var REPEAT:Integer = 0x2901;
	public var REPLACE:Integer = 0x1E01;
	public var RGB:Integer = 0x1907;
	public var RGB5_A1:Integer = 0x8057;
	public var RGB565:Integer = 0x8D62;
	public var RGBA:Integer = 0x1908;
	public var RGBA4:Integer = 0x8056;
	public var SAMPLE_ALPHA_TO_COVERAGE:Integer = 0x809E;
	public var SAMPLE_BUFFERS:Integer = 0x80A8;
	public var SAMPLE_COVERAGE:Integer = 0x80A0;
	public var SAMPLE_COVERAGE_INVERT:Integer = 0x80AB;
	public var SAMPLE_COVERAGE_VALUE:Integer = 0x80AA;
	public var SAMPLER_2D:Integer = 0x8B5E;
	public var SAMPLER_CUBE:Integer = 0x8B60;
	public var SAMPLES:Integer = 0x80A9;
	public var SCISSOR_BOX:Integer = 0x0C10;
	public var SCISSOR_TEST:Integer = 0x0C11;
	public var SHADER_TYPE:Integer = 0x8B4F;
	public var SHADING_LANGUAGE_VERSION:Integer = 0x8B8C;
	public var SHORT:Integer = 0x1402;
	public var SRC_ALPHA:Integer = 0x0302;
	public var SRC_ALPHA_SATURATE:Integer = 0x0308;
	public var SRC_COLOR:Integer = 0x0300;
	public var STATIC_DRAW:Integer = 0x88E4;
	public var STENCIL_ATTACHMENT:Integer = 0x8D20;
	public var STENCIL_BACK_FAIL:Integer = 0x8801;
	public var STENCIL_BACK_FUNC:Integer = 0x8800;
	public var STENCIL_BACK_PASS_DEPTH_FAIL:Integer = 0x8802;
	public var STENCIL_BACK_PASS_DEPTH_PASS:Integer = 0x8803;
	public var STENCIL_BACK_REF:Integer = 0x8CA3;
	public var STENCIL_BACK_VALUE_MASK:Integer = 0x8CA4;
	public var STENCIL_BACK_WRITEMASK:Integer = 0x8CA5;
	public var STENCIL_BITS:Integer = 0x0D57;
	public var STENCIL_BUFFER_BIT:Integer = 0x00000400;
	public var STENCIL_CLEAR_VALUE:Integer = 0x0B91;
	public var STENCIL_FAIL:Integer = 0x0B94;
	public var STENCIL_FUNC:Integer = 0x0B92;
	public var STENCIL_INDEX:Integer = 0x1901;
	public var STENCIL_INDEX8:Integer = 0x8D48;
	public var STENCIL_PASS_DEPTH_FAIL:Integer = 0x0B95;
	public var STENCIL_PASS_DEPTH_PASS:Integer = 0x0B96;
	public var STENCIL_REF:Integer = 0x0B97;
	public var STENCIL_TEST:Integer = 0x0B90;
	public var STENCIL_VALUE_MASK:Integer = 0x0B93;
	public var STENCIL_WRITEMASK:Integer = 0x0B98;
	public var STREAM_DRAW:Integer = 0x88E0;
	public var SUBPIXEL_BITS:Integer = 0x0D50;
	public var TEXTURE:Integer = 0x1702;
	public var TEXTURE_2D:Integer = 0x0DE1;
	public var TEXTURE_BINDING_2D:Integer = 0x8069;
	public var TEXTURE_BINDING_CUBE_MAP:Integer = 0x8514;
	public var TEXTURE_CUBE_MAP:Integer = 0x8513;
	public var TEXTURE_CUBE_MAP_NEGATIVE_X:Integer = 0x8516;
	public var TEXTURE_CUBE_MAP_NEGATIVE_Y:Integer = 0x8518;
	public var TEXTURE_CUBE_MAP_NEGATIVE_Z:Integer = 0x851A;
	public var TEXTURE_CUBE_MAP_POSITIVE_X:Integer = 0x8515;
	public var TEXTURE_CUBE_MAP_POSITIVE_Y:Integer = 0x8517;
	public var TEXTURE_CUBE_MAP_POSITIVE_Z:Integer = 0x8519;
	public var TEXTURE_MAG_FILTER:Integer = 0x2800;
	public var TEXTURE_MIN_FILTER:Integer = 0x2801;
	public var TEXTURE_WRAP_S:Integer = 0x2802;
	public var TEXTURE_WRAP_T:Integer = 0x2803;
	public var TEXTURE0:Integer = 0x84C0;
	public var TEXTURE1:Integer = 0x84C1;
	public var TEXTURE10:Integer = 0x84CA;
	public var TEXTURE11:Integer = 0x84CB;
	public var TEXTURE12:Integer = 0x84CC;
	public var TEXTURE13:Integer = 0x84CD;
	public var TEXTURE14:Integer = 0x84CE;
	public var TEXTURE15:Integer = 0x84CF;
	public var TEXTURE16:Integer = 0x84D0;
	public var TEXTURE17:Integer = 0x84D1;
	public var TEXTURE18:Integer = 0x84D2;
	public var TEXTURE19:Integer = 0x84D3;
	public var TEXTURE2:Integer = 0x84C2;
	public var TEXTURE20:Integer = 0x84D4;
	public var TEXTURE21:Integer = 0x84D5;
	public var TEXTURE22:Integer = 0x84D6;
	public var TEXTURE23:Integer = 0x84D7;
	public var TEXTURE24:Integer = 0x84D8;
	public var TEXTURE25:Integer = 0x84D9;
	public var TEXTURE26:Integer = 0x84DA;
	public var TEXTURE27:Integer = 0x84DB;
	public var TEXTURE28:Integer = 0x84DC;
	public var TEXTURE29:Integer = 0x84DD;
	public var TEXTURE3:Integer = 0x84C3;
	public var TEXTURE30:Integer = 0x84DE;
	public var TEXTURE31:Integer = 0x84DF;
	public var TEXTURE4:Integer = 0x84C4;
	public var TEXTURE5:Integer = 0x84C5;
	public var TEXTURE6:Integer = 0x84C6;
	public var TEXTURE7:Integer = 0x84C7;
	public var TEXTURE8:Integer = 0x84C8;
	public var TEXTURE9:Integer = 0x84C9;
	public var TRIANGLE_FAN:Integer = 0x0006;
	public var TRIANGLE_STRIP:Integer = 0x0005;
	public var TRIANGLES:Integer = 0x0004;
	public var UNPACK_ALIGNMENT:Integer = 0x0CF5;
	public var UNPACK_COLORSPACE_CONVERSION_WEBGL:Integer = 0x9243;
	public var UNPACK_FLIP_Y_WEBGL:Integer = 0x9240;
	public var UNPACK_PREMULTIPLY_ALPHA_WEBGL:Integer = 0x9241;
	public var UNSIGNED_BYTE:Integer = 0x1401;
	public var UNSIGNED_INT:Integer = 0x1405;
	public var UNSIGNED_SHORT:Integer = 0x1403;
	public var UNSIGNED_SHORT_4_4_4_4:Integer = 0x8033;
	public var UNSIGNED_SHORT_5_5_5_1:Integer = 0x8034;
	public var UNSIGNED_SHORT_5_6_5:Integer = 0x8363;
	public var VALIDATE_STATUS:Integer = 0x8B83;
	public var VENDOR:Integer = 0x1F00;
	public var VERSION:Integer = 0x1F02;
	public var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:Integer = 0x889F;
	public var VERTEX_ATTRIB_ARRAY_ENABLED:Integer = 0x8622;
	public var VERTEX_ATTRIB_ARRAY_NORMALIZED:Integer = 0x886A;
	public var VERTEX_ATTRIB_ARRAY_POINTER:Integer = 0x8645;
	public var VERTEX_ATTRIB_ARRAY_SIZE:Integer = 0x8623;
	public var VERTEX_ATTRIB_ARRAY_STRIDE:Integer = 0x8624;
	public var VERTEX_ATTRIB_ARRAY_TYPE:Integer = 0x8625;
	public var VERTEX_SHADER:Integer = 0x8B31;
	public var VIEWPORT:Integer = 0x0BA2;
	public var ZERO:Integer = 0;

    public var __uid:Integer;
    public var canvas:HTMLCanvasElement;
    
	////////////////////////////////////////////////////////////////////////////////////////////////////
    public function Constructor(canvas:HTMLCanvasElement)
    {
		this.__uid = 1;
    	this.canvas = canvas;
    }

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function activeTexture(texture:Integer)
	{
		return __WebGLRenderingContext_activeTexture(this.__uid, texture);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function attachShader(program:WebGLProgram, shader:WebGLShader)
	{
		return __WebGLRenderingContext_attachShader(this.__uid, program.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bindAttribLocation(program:WebGLProgram, index:Integer, name:String)
	{
		return __WebGLRenderingContext_bindAttribLocation(this.__uid, program.__uid, index, name);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bindBuffer(target:Integer, buffer:WebGLBuffer)
	{   
		if(buffer==null)		
			return __WebGLRenderingContext_bindBuffer(this.__uid, target, 0);
		else
			return __WebGLRenderingContext_bindBuffer(this.__uid, target, buffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bindFramebuffer(target:Integer, framebuffer:WebGLFramebuffer)
	{
		return __WebGLRenderingContext_bindFramebuffer(this.__uid, target, framebuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bindRenderbuffer(target:Integer, renderbuffer:WebGLRenderbuffer)
	{
		if(renderbuffer==null)
			return __WebGLRenderingContext_bindRenderbuffer(this.__uid, target, 0);
		else
			return __WebGLRenderingContext_bindRenderbuffer(this.__uid, target, renderbuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bindTexture(target:Integer, texture:WebGLTexture)
	{
		if(texture==null)
			return __WebGLRenderingContext_bindTexture(this.__uid, target, 0);
		else
			return __WebGLRenderingContext_bindTexture(this.__uid, target, texture.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function blendColor(red:Float, green:Float, blue:Float, alpha:Float)
	{
		return __WebGLRenderingContext_blendColor(this.__uid, red, green, blue, alpha);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function blendEquation(mode:Integer)
	{
		return __WebGLRenderingContext_blendEquation(this.__uid, mode);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function blendEquationSeparate(modeRGB:Integer, modeAlpha:Integer)
	{
		return __WebGLRenderingContext_blendEquationSeparate(this.__uid, modeRGB, modeAlpha);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function blendFunc(sfactor:Integer, dfactor:Integer)
	{
		return __WebGLRenderingContext_blendFunc(this.__uid, sfactor, dfactor);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function blendFuncSeparate(srcRGB:Integer, dstRGB:Integer, srcAlpha:Integer, dstAlpha:Integer)
	{
		return __WebGLRenderingContext_blendFuncSeparate(this.__uid, srcRGB, dstRGB, srcAlpha, dstAlpha);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bufferData(target:Integer, data:Float32Array, usage:Integer)	
	{
		return __WebGLRenderingContext_bufferData(this.__uid, target, data.buffer.__uid, data.byteOffset, data.length * data.BYTES_PER_ELEMENT, usage);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function bufferSubData(target:Integer, offset:Integer, data:Float32Array)
	{
		return __WebGLRenderingContext_bufferSubData(this.__uid, target, offset, data.buffer.__uid, data.byteOffset, data.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function checkFramebufferStatus(target:Integer) :Integer
	{
		return __WebGLRenderingContext_checkFramebufferStatus(this.__uid, target);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function clear(mask:Integer)
	{
		return __WebGLRenderingContext_clear(this.__uid, mask);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function clearColor(red:Float, green:Float, blue:Float, alpha:Float)
	{
		return __WebGLRenderingContext_clearColor(this.__uid, red, green, blue, alpha);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function clearDepth(depth:Float)
	{
		return __WebGLRenderingContext_clearDepth(this.__uid, depth);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function clearStencil(s:Integer)
	{
		return __WebGLRenderingContext_clearStencil(this.__uid, s);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function colorMask(red:Boolean, green:Boolean, blue:Boolean, alpha:Boolean)
	{
		return __WebGLRenderingContext_colorMask(this.__uid, red, green, blue, alpha);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function compileShader(shader:WebGLShader)
	{
		return __WebGLRenderingContext_compileShader(this.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function compressedTexImage2D(target:Integer, level:Integer, internalformat:Integer, width:Integer, height:Integer, border:Integer, data:Float32Array)
	{
		return __WebGLRenderingContext_compressedTexImage2D(this.__uid, target, level, internalformat, width, height, border, data.buffer.__uid, data.byteOffset, data.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function compressedTexSubImage2D(target:Integer, level:Integer, xoffset:Integer, yoffset:Integer, width:Integer, height:Integer, format:Integer, data:Float32Array)
	{
		return __WebGLRenderingContext_compressedTexSubImage2D(this.__uid, target, level, xoffset, yoffset, width, height, format, data.buffer.__uid, data.byteOffset, data.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function copyTexImage2D(target:Integer, level:Integer, internalformat:Integer, x:Integer, y:Integer, width:Integer, height:Integer, border:Integer)
	{
		return __WebGLRenderingContext_copyTexImage2D(this.__uid, target, level, internalformat, x, y, width, height, border);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function copyTexSubImage2D(target:Integer, level:Integer, xoffset:Integer, yoffset:Integer, x:Integer, y:Integer, width:Integer, height:Integer)
	{
		return __WebGLRenderingContext_copyTexSubImage2D(this.__uid, target, level, xoffset, yoffset, x, y, width, height);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createBuffer() :WebGLBuffer
	{
		return new WebGLBuffer(__WebGLRenderingContext_createBuffer(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createFramebuffer() :WebGLFramebuffer
	{
		return new WebGLFramebuffer(__WebGLRenderingContext_createFramebuffer(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createProgram() :WebGLProgram
	{
		return new WebGLProgram(__WebGLRenderingContext_createProgram(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createRenderbuffer() :WebGLRenderbuffer
	{
		return new WebGLRenderbuffer(__WebGLRenderingContext_createRenderbuffer(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createShader(type:Integer) :WebGLShader
	{
		return new WebGLShader(__WebGLRenderingContext_createShader(this.__uid, type), type);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function createTexture() :WebGLTexture
	{
		return new WebGLTexture(__WebGLRenderingContext_createTexture(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function cullFace(mode:Integer)
	{
		return __WebGLRenderingContext_cullFace(this.__uid, mode);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteBuffer(buffer:WebGLBuffer)
	{
		return __WebGLRenderingContext_deleteBuffer(this.__uid, buffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteFramebuffer(framebuffer:WebGLFramebuffer)
	{
		return __WebGLRenderingContext_deleteFramebuffer(this.__uid, framebuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteProgram(program:WebGLProgram)
	{
		return __WebGLRenderingContext_deleteProgram(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteRenderbuffer(renderbuffer:WebGLRenderbuffer)
	{
		return __WebGLRenderingContext_deleteRenderbuffer(this.__uid, renderbuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteShader(shader:WebGLShader)
	{
		return __WebGLRenderingContext_deleteShader(this.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function deleteTexture(texture:WebGLTexture)
	{
		return __WebGLRenderingContext_deleteTexture(this.__uid, texture.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function depthFunc(func:Integer)
	{
		return __WebGLRenderingContext_depthFunc(this.__uid, func);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function depthMask(flag:Boolean)
	{
		return __WebGLRenderingContext_depthMask(this.__uid, flag);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function depthRange(zNear:Float, zFar:Float)
	{
		return __WebGLRenderingContext_depthRange(this.__uid, zNear, zFar);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function detachShader(program:WebGLProgram, shader:WebGLShader)
	{
		return __WebGLRenderingContext_detachShader(this.__uid, program.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function disable(cap:Integer)
	{
		return __WebGLRenderingContext_disable(this.__uid, cap);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function disableVertexAttribArray(index:Integer)
	{
		return __WebGLRenderingContext_disableVertexAttribArray(this.__uid, index);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function drawArrays(mode:Integer, first:Integer, count:Integer)
	{
		return __WebGLRenderingContext_drawArrays(this.__uid, mode, first, count);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function drawElements(mode:Integer, count:Integer, type:Integer, offset:Integer)
	{
		return __WebGLRenderingContext_drawElements(this.__uid, mode, count, type, offset);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function enable(cap:Integer)
	{
		return __WebGLRenderingContext_enable(this.__uid, cap);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function enableVertexAttribArray(index:Integer)
	{
		return __WebGLRenderingContext_enableVertexAttribArray(this.__uid, index);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function finish()
	{
		return __WebGLRenderingContext_finish(this.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function flush()
	{
		return __WebGLRenderingContext_flush(this.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function framebufferRenderbuffer(target:Integer, attachment:Integer, renderbuffertarget:Integer, renderbuffer:WebGLRenderbuffer)
	{
		return __WebGLRenderingContext_framebufferRenderbuffer(this.__uid, target, attachment, renderbuffertarget, renderbuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function framebufferTexture2D(target:Integer, attachment:Integer, textarget:Integer, texture:WebGLTexture, level:Integer)
	{
		return __WebGLRenderingContext_framebufferTexture2D(this.__uid, target, attachment, textarget, texture.__uid, level);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function frontFace(mode:Integer)
	{
		return __WebGLRenderingContext_frontFace(this.__uid, mode);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function generateMipmap(target:Integer)
	{
		return __WebGLRenderingContext_generateMipmap(this.__uid, target);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getActiveAttrib(program:WebGLProgram, index:Integer) :WebGLActiveInfo
	{
		return new WebGLActiveInfo(__WebGLRenderingContext_getActiveAttrib(this.__uid, program.__uid, index), program.__uid, index);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getActiveUniform(program:WebGLProgram, index:Integer) :WebGLActiveInfo
	{
		return new WebGLActiveInfo(__WebGLRenderingContext_getActiveUniform(this.__uid, program.__uid, index), program.__uid, index);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getAttachedShaders(program:WebGLProgram) :Array<WebGLShader>
	{
		return __WebGLRenderingContext_getAttachedShaders(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getAttribLocation(program:WebGLProgram, name:String) :Integer
	{
		return __WebGLRenderingContext_getAttribLocation(this.__uid, program.__uid, name);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getBufferParameter(target:Integer, pname:Integer) :String
	{
		return __WebGLRenderingContext_getBufferParameter(this.__uid, target, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getContextAttributes() :WebGLContextAttributes
	{
		return new WebGLContextAttributes(__WebGLRenderingContext_getContextAttributes(this.__uid));
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getError() :Integer
	{
		return __WebGLRenderingContext_getError(this.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getExtension(name:String) :object
	{
		return __WebGLRenderingContext_getExtension(this.__uid, name);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getFramebufferAttachmentParameter(target:Integer, attachment:Integer, pname:Integer) :String
	{
		return __WebGLRenderingContext_getFramebufferAttachmentParameter(this.__uid, target, attachment, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getParameter(pname:Integer) :String
	{
		return __WebGLRenderingContext_getParameter(this.__uid, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getProgramInfoLog(program:WebGLProgram) :String
	{
		return __WebGLRenderingContext_getProgramInfoLog(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getProgramParameter(program:WebGLProgram, pname:Integer) :Boolean
	{
		return __WebGLRenderingContext_getProgramParameter(this.__uid, program.__uid, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getRenderbufferParameter(target:Integer, pname:Integer) :String
	{
		return __WebGLRenderingContext_getRenderbufferParameter(this.__uid, target, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getShaderInfoLog(shader:WebGLShader) :String
	{
		return __WebGLRenderingContext_getShaderInfoLog(this.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getShaderParameter(shader:WebGLShader, pname:Integer) :Boolean
	{
		return __WebGLRenderingContext_getShaderParameter(this.__uid, shader.__uid, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getShaderPrecisionFormat(shadertype:Integer, precisiontype:Integer) :WebGLShaderPrecisionFormat
	{
		return new WebGLShaderPrecisionFormat(__WebGLRenderingContext_getShaderPrecisionFormat(this.__uid, shadertype, precisiontype), shadertype, precisiontype);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getShaderSource(shader:WebGLShader) :String
	{
		return __WebGLRenderingContext_getShaderSource(this.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getSupportedExtensions() :sequence<String>
	{
		return __WebGLRenderingContext_getSupportedExtensions(this.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getTexParameter(target:Integer, pname:Integer) :String
	{
		return __WebGLRenderingContext_getTexParameter(this.__uid, target, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getUniform(program:WebGLProgram, location:WebGLUniformLocation) :String
	{
		return __WebGLRenderingContext_getUniform(this.__uid, program.__uid, location.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getUniformLocation(program:WebGLProgram, name:String) :WebGLUniformLocation
	{
		return new WebGLUniformLocation(__WebGLRenderingContext_getUniformLocation(this.__uid, program.__uid, name), program.__uid, name);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getVertexAttrib(index:Integer, pname:Integer) :String
	{
		return __WebGLRenderingContext_getVertexAttrib(this.__uid, index, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function getVertexAttribOffset(index:Integer, pname:Integer) :Integer
	{
		return __WebGLRenderingContext_getVertexAttribOffset(this.__uid, index, pname);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function hint(target:Integer, mode:Integer)
	{
		return __WebGLRenderingContext_hint(this.__uid, target, mode);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isBuffer(buffer:WebGLBuffer) :Boolean
	{
		return __WebGLRenderingContext_isBuffer(this.__uid, buffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isContextLost() :boolean
	{
		return __WebGLRenderingContext_isContextLost(this.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isEnabled(cap:Integer) :Boolean
	{
		return __WebGLRenderingContext_isEnabled(this.__uid, cap);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isFramebuffer(framebuffer:WebGLFramebuffer) :Boolean
	{
		return __WebGLRenderingContext_isFramebuffer(this.__uid, framebuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isProgram(program:WebGLProgram) :Boolean
	{
		return __WebGLRenderingContext_isProgram(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isRenderbuffer(renderbuffer:WebGLRenderbuffer) :Boolean
	{
		return __WebGLRenderingContext_isRenderbuffer(this.__uid, renderbuffer.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isShader(shader:WebGLShader) :Boolean
	{
		return __WebGLRenderingContext_isShader(this.__uid, shader.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function isTexture(texture:WebGLTexture) :Boolean
	{
		return __WebGLRenderingContext_isTexture(this.__uid, texture.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function lineWidth(width:Float)
	{
		return __WebGLRenderingContext_lineWidth(this.__uid, width);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function linkProgram(program:WebGLProgram)
	{
		return __WebGLRenderingContext_linkProgram(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function pixelStorei(pname:Integer, param:Integer)
	{
		return __WebGLRenderingContext_pixelStorei(this.__uid, pname, param);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function polygonOffset(factor:Float, units:Float)
	{
		return __WebGLRenderingContext_polygonOffset(this.__uid, factor, units);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function readPixels(x:Integer, y:Integer, width:Integer, height:Integer, format:Integer, type:Integer, pixels:Float32Array)
	{
		return __WebGLRenderingContext_readPixels(this.__uid, x, y, width, height, format, type, pixels.buffer.__uid, pixels.byteOffset, pixels.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function renderbufferStorage(target:Integer, internalformat:Integer, width:Integer, height:Integer)
	{
		return __WebGLRenderingContext_renderbufferStorage(this.__uid, target, internalformat, width, height);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function sampleCoverage(value:Float, invert:Boolean)
	{
		return __WebGLRenderingContext_sampleCoverage(this.__uid, value, invert);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function scissor(x:Integer, y:Integer, width:Integer, height:Integer)
	{
		return __WebGLRenderingContext_scissor(this.__uid, x, y, width, height);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function shaderSource(shader:WebGLShader, source:String)
	{
		return __WebGLRenderingContext_shaderSource(this.__uid, shader.__uid, source);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilFunc(func:Integer, ref:Integer, mask:Integer)
	{
		return __WebGLRenderingContext_stencilFunc(this.__uid, func, ref, mask);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilFuncSeparate(face:Integer, func:Integer, ref:Integer, mask:Integer)
	{
		return __WebGLRenderingContext_stencilFuncSeparate(this.__uid, face, func, ref, mask);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilMask(mask:Integer)
	{
		return __WebGLRenderingContext_stencilMask(this.__uid, mask);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilMaskSeparate(face:Integer, mask:Integer)
	{
		return __WebGLRenderingContext_stencilMaskSeparate(this.__uid, face, mask);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilOp(fail:Integer, zfail:Integer, zpass:Integer)
	{
		return __WebGLRenderingContext_stencilOp(this.__uid, fail, zfail, zpass);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function stencilOpSeparate(face:Integer, fail:Integer, zfail:Integer, zpass:Integer)
	{
		return __WebGLRenderingContext_stencilOpSeparate(this.__uid, face, fail, zfail, zpass);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function texImage2D(target:Integer, level:Integer, internalformat:Integer, format:Integer, type:Integer, image:Image)
	{ 
		return __WebGLRenderingContext_texImage2D(this.__uid, target, level, internalformat, image.width, image.height, 0, format, type, image.__imageData.buffer.__uid, 0, image.__imageData.buffer.byteLength);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function texParameterf(target:Integer, pname:Integer, param:Float)
	{
		return __WebGLRenderingContext_texParameterf(this.__uid, target, pname, param);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function texParameteri(target:Integer, pname:Integer, param:Integer)
	{
		return __WebGLRenderingContext_texParameteri(this.__uid, target, pname, param);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function texSubImage2D(target:Integer, level:Integer, xoffset:Integer, yoffset:Integer, width:Integer, height:Integer, format:Integer, type:Integer, pixels:Float32Array)
	{
		return __WebGLRenderingContext_texSubImage2D(this.__uid, target, level, xoffset, yoffset, width, height, format, type, pixels.buffer.__uid, pixels.byteOffset, pixels.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform1f(location:WebGLUniformLocation, x:Float)
	{
		return __WebGLRenderingContext_uniform1f(this.__uid, location.__uid, x);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform1fv(location:WebGLUniformLocation, v:Float32Array)
	{
		return __WebGLRenderingContext_uniform1fv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform1i(location:WebGLUniformLocation, x:Integer)
	{
		return __WebGLRenderingContext_uniform1i(this.__uid, location.__uid, x);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform1iv(location:WebGLUniformLocation, v:Int32Array)
	{
		return __WebGLRenderingContext_uniform1iv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform2f(location:WebGLUniformLocation, x:Float, y:Float)
	{
		return __WebGLRenderingContext_uniform2f(this.__uid, location.__uid, x, y);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform2fv(location:WebGLUniformLocation, v:Float32Array)
	{
		return __WebGLRenderingContext_uniform2fv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform2i(location:WebGLUniformLocation, x:Integer, y:Integer)
	{
		return __WebGLRenderingContext_uniform2i(this.__uid, location.__uid, x, y);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform2iv(location:WebGLUniformLocation, v:Int32Array)
	{
		return __WebGLRenderingContext_uniform2iv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform3f(location:WebGLUniformLocation, x:Float, y:Float, z:Float)
	{
		return __WebGLRenderingContext_uniform3f(this.__uid, location.__uid, x, y, z);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform3fv(location:WebGLUniformLocation, v:Float32Array)
	{
		return __WebGLRenderingContext_uniform3fv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform3i(location:WebGLUniformLocation, x:Integer, y:Integer, z:Integer)
	{
		return __WebGLRenderingContext_uniform3i(this.__uid, location.__uid, x, y, z);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform3iv(location:WebGLUniformLocation, v:Int32Array)
	{
		return __WebGLRenderingContext_uniform3iv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform4f(location:WebGLUniformLocation, x:Float, y:Float, z:Float, w:Float)
	{
		return __WebGLRenderingContext_uniform4f(this.__uid, location.__uid, x, y, z, w);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform4fv(location:WebGLUniformLocation, v:Float32Array)
	{
		return __WebGLRenderingContext_uniform4fv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform4i(location:WebGLUniformLocation, x:Integer, y:Integer, z:Integer, w:Integer)
	{
		return __WebGLRenderingContext_uniform4i(this.__uid, location.__uid, x, y, z, w);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniform4iv(location:WebGLUniformLocation, v:Int32Array)
	{
		return __WebGLRenderingContext_uniform4iv(this.__uid, location.__uid, v.buffer.__uid, v.byteOffset, v.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniformMatrix2fv(location:WebGLUniformLocation, transpose:Boolean, value:Float32Array)
	{
		return __WebGLRenderingContext_uniformMatrix2fv(this.__uid, location.__uid, transpose, value.buffer.__uid, value.byteOffset, value.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniformMatrix3fv(location:WebGLUniformLocation, transpose:Boolean, value:Float32Array)
	{
		return __WebGLRenderingContext_uniformMatrix3fv(this.__uid, location.__uid, transpose, value.buffer.__uid, value.byteOffset, value.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function uniformMatrix4fv(location:WebGLUniformLocation, transpose:Boolean, value:Float32Array)
	{
		return __WebGLRenderingContext_uniformMatrix4fv(this.__uid, location.__uid, transpose, value.buffer.__uid, value.byteOffset, value.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function useProgram(program:WebGLProgram)
	{
		return __WebGLRenderingContext_useProgram(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function validateProgram(program:WebGLProgram)
	{
		return __WebGLRenderingContext_validateProgram(this.__uid, program.__uid);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib1f(indx:Integer, x:Float)
	{
		return __WebGLRenderingContext_vertexAttrib1f(this.__uid, indx, x);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib1fv(indx:Integer, values:Float32Array)
	{
		return __WebGLRenderingContext_vertexAttrib1fv(this.__uid, indx, values.buffer.__uid, values.byteOffset, values.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib2f(indx:Integer, x:Float, y:Float)
	{
		return __WebGLRenderingContext_vertexAttrib2f(this.__uid, indx, x, y);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib2fv(indx:Integer, values:Float32Array)
	{
		return __WebGLRenderingContext_vertexAttrib2fv(this.__uid, indx, values.buffer.__uid, values.byteOffset, values.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib3f(indx:Integer, x:Float, y:Float, z:Float)
	{
		return __WebGLRenderingContext_vertexAttrib3f(this.__uid, indx, x, y, z);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib3fv(indx:Integer, values:Float32Array)
	{
		return __WebGLRenderingContext_vertexAttrib3fv(this.__uid, indx, values.buffer.__uid, values.byteOffset, values.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib4f(indx:Integer, x:Float, y:Float, z:Float, w:Float)
	{
		return __WebGLRenderingContext_vertexAttrib4f(this.__uid, indx, x, y, z, w);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttrib4fv(indx:Integer, values:Float32Array)
	{
		return __WebGLRenderingContext_vertexAttrib4fv(this.__uid, indx, values.buffer.__uid, values.byteOffset, values.length);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function vertexAttribPointer(indx:Integer, size:Integer, type:Integer, normalized:Boolean, stride:Integer, offset:Integer)
	{
		return __WebGLRenderingContext_vertexAttribPointer(this.__uid, indx, size, type, normalized, stride, offset);
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	public function viewport(x:Integer, y:Integer, width:Integer, height:Integer)
	{
		return __WebGLRenderingContext_viewport(this.__uid, x, y, width, height);
	}
}

