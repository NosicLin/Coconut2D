"#export web";
//@line 37

function CocoScene()
{
	var __BASE__ = null;

	function __CocoScene()
	{
		var Class = this.Class = 'CocoScene',
			__PDEFINE__ = Object.defineProperty,
			__NOENUM__ = {enumerable:false},
			__CLASS__COCOSCENE__ = this.__CLASS__COCOSCENE__ = this;
		var __THIS__ = this;
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		},
			__PRIVATE__ = this.__PRIVATE__ = {},
			__PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 40
		this.__sceneName = "";
		//@line 41
		this.__imageSymbols = [];
		//@line 44
		this.__fps = 0;
		//@line 45
		this.__view_width = 0;
		//@line 46
		this.__view_height = 0;
		//@line 47
		this.__view_pixel_ratio = 0;
		//@line 48
		this.__view_scale = 0;
		//@line 51
		this.__root = null;
		//@line 52
		this.__modelViewMatrix = null;
		//@line 53
		this.__projectionMatrix = null;
		//@line 54
		this.__glProgram = null;
		//@line 55
		this.__glProgram_Simple = null;
		//@line 56
		this.__glProgram_SimpleWithAlpha = null;
		//@line 57
		this.__glProgram_SaturationWithAlpha = null;
		//@line 58
		this.__levelParents = [];
		//@line 60
		this.__vertex_shader_Common = "";
		//@line 61
		this.__fragment_shader_Simple = "";
		//@line 62
		this.__fragment_shader_SimpleWithAlpha = "";
		//@line 63
		this.__fragment_shader_SaturationWithAlpha = "";
		//@line 65
		this.__boundingBoxVertexShader = "";
		//@line 66
		this.__boundingBoxFragmentShader = "";
		//@line 67
		this.__boundingBoxProgram = null;
		//@line 68
		this.__boundingBoxBuffer = null;
		//@line 70
		this.__ready = false;
		//@line 71
		this.__finished = false;
		//@line 124
		this.getImageSymbol = function (symbolName)
		{
			//@line 126
			for (var i = __CLASS__COCOSCENE__.__imageSymbols.size() - 1; i >= 0; i--)
			//@line 127
			{
				//@line 128
				if (__CLASS__COCOSCENE__.__imageSymbols[i].symbolName == symbolName)
				//@line 129
				return __CLASS__COCOSCENE__.__imageSymbols[i];
			}
			//@line 131
			return null;
		};
		//@line 135
		this.newResourceImage = function (symbolName, baseUrl)
		{
			//@line 137
			if (__CLASS__COCOSCENE__.getImageSymbol(symbolName)) throw "Resource image " + symbolName + " already exists.";
			//@line 138
			var img = new CocoImage;
			//@line 139
			img.symbolName = symbolName;
			//@line 140
			img.baseUrl = baseUrl;
			//@line 141
			__CLASS__COCOSCENE__.__imageSymbols.push(img);
			//@line 142
			return img;
		};
		//@line 146
		this.__PRIVATE__.prepare = function (gl)
		{
			//@line 148
			gl.disable(gl.DEPTH_TEST);
			//@line 149
			gl.enable(gl.BLEND);
			//@line 150
			gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
			//@line 151
			gl.disable(gl.CULL_FACE);
			//@line 153
			__CLASS__COCOSCENE__.__view_scale = __CLASS__COCOSCENE__.__view_width > 0 && __CLASS__COCOSCENE__.__view_height > 0 ? Math.min((gl.canvas.width) / __CLASS__COCOSCENE__.__view_width, (gl.canvas.height) / __CLASS__COCOSCENE__.__view_height) : window.devicePixelRatio;
			//@line 155
			if (window.deviceRotation)
			//@line 156
			{
				//@line 157
				var c = Math.cos(window.deviceRotation);
				//@line 158
				var s = Math.sin(window.deviceRotation);
				//@line 159
				var orthoWidth = Math.abs(c * (gl.canvas.width) + s * (gl.canvas.height));
				//@line 160
				var orthoHeight = Math.abs(-s * (gl.canvas.width) + c * (gl.canvas.height));
				//@line 161
				__CLASS__COCOSCENE__.__projectionMatrix.ortho(-orthoWidth / 2.0, orthoWidth / 2.0, orthoHeight / 2.0, -orthoHeight / 2.0, -1.0, 1.0);
				//@line 162
				__CLASS__COCOSCENE__.__projectionMatrix.rotateZ(-window.deviceRotation);
			}
			else
			//@line 165
			{
				//@line 166
				__CLASS__COCOSCENE__.__projectionMatrix.ortho(-((gl.canvas.width) / 2.0), (gl.canvas.width) / 2.0, (gl.canvas.height) / 2.0, -((gl.canvas.height) / 2.0), -1.0, 1.0);
			}
			//@line 169
			__CLASS__COCOSCENE__.__projectionMatrix.scale(__CLASS__COCOSCENE__.__view_scale, __CLASS__COCOSCENE__.__view_scale);
			//@line 171
			__CLASS__COCOSCENE__.__boundingBoxProgram = __CLASS__COCOSCENE__.__PRIVATE__.makeProgram(gl, __CLASS__COCOSCENE__.__boundingBoxVertexShader, __CLASS__COCOSCENE__.__boundingBoxFragmentShader);
			//@line 172
			gl.useProgram(__CLASS__COCOSCENE__.__boundingBoxProgram);
			//@line 173
			__CLASS__COCOSCENE__.__boundingBoxProgram.GLSLiVec2Coords = gl.getAttribLocation(__CLASS__COCOSCENE__.__boundingBoxProgram, "iVec2Coords");
			//@line 174
			__CLASS__COCOSCENE__.__boundingBoxProgram.GLSLuProjMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__boundingBoxProgram, "uProjMat");
			//@line 175
			__CLASS__COCOSCENE__.__boundingBoxBuffer = gl.createBuffer();
			//@line 176
			gl.bindBuffer(gl.ARRAY_BUFFER, __CLASS__COCOSCENE__.__boundingBoxBuffer);
			//@line 177
			gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), gl.DYNAMIC_DRAW);
			//@line 179
			__CLASS__COCOSCENE__.__glProgram_Simple = __CLASS__COCOSCENE__.__PRIVATE__.makeProgram(gl, __CLASS__COCOSCENE__.__vertex_shader_Common, __CLASS__COCOSCENE__.__fragment_shader_Simple);
			//@line 180
			gl.useProgram(__CLASS__COCOSCENE__.__glProgram_Simple);
			//@line 181
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLiVecCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "iVecCoords");
			//@line 182
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLiTexCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "iTexCoords");
			//@line 183
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuProjMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uProjMat");
			//@line 184
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuMVMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uMVMat");
			//@line 185
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuSprSize = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uSprSize");
			//@line 186
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuSprFrame = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uSprFrame");
			//@line 187
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuSprFlip = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uSprFlip");
			//@line 188
			__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuSampler = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_Simple, "uSampler");
			//@line 189
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_Simple.GLSLiVecCoords);
			//@line 190
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_Simple.GLSLiTexCoords);
			//@line 191
			gl.uniform1i(__CLASS__COCOSCENE__.__glProgram_Simple.GLSLuSampler, 0);
			//@line 192
			__CLASS__COCOSCENE__.__modelViewMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_Simple.GLSLuMVMat);
			//@line 193
			__CLASS__COCOSCENE__.__projectionMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_Simple.GLSLuProjMat);
			//@line 195
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha = __CLASS__COCOSCENE__.__PRIVATE__.makeProgram(gl, __CLASS__COCOSCENE__.__vertex_shader_Common, __CLASS__COCOSCENE__.__fragment_shader_SimpleWithAlpha);
			//@line 196
			gl.useProgram(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha);
			//@line 197
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLiVecCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "iVecCoords");
			//@line 198
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLiTexCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "iTexCoords");
			//@line 199
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuProjMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uProjMat");
			//@line 200
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuMVMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uMVMat");
			//@line 201
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuSprSize = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uSprSize");
			//@line 202
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuSprFrame = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uSprFrame");
			//@line 203
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuSprFlip = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uSprFlip");
			//@line 204
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuSampler = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uSampler");
			//@line 205
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuAlpha = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha, "uAlpha");
			//@line 206
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLiVecCoords);
			//@line 207
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLiTexCoords);
			//@line 208
			gl.uniform1i(__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuSampler, 0);
			//@line 209
			__CLASS__COCOSCENE__.__modelViewMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuMVMat);
			//@line 210
			__CLASS__COCOSCENE__.__projectionMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.GLSLuProjMat);
			//@line 212
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha = __CLASS__COCOSCENE__.__PRIVATE__.makeProgram(gl, __CLASS__COCOSCENE__.__vertex_shader_Common, __CLASS__COCOSCENE__.__fragment_shader_SaturationWithAlpha);
			//@line 213
			gl.useProgram(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha);
			//@line 214
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLiVecCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "iVecCoords");
			//@line 215
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLiTexCoords = gl.getAttribLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "iTexCoords");
			//@line 216
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuProjMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uProjMat");
			//@line 217
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuMVMat = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uMVMat");
			//@line 218
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuSprSize = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uSprSize");
			//@line 219
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuSprFrame = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uSprFrame");
			//@line 220
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuSprFlip = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uSprFlip");
			//@line 221
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuSampler = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uSampler");
			//@line 222
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuColor = gl.getUniformLocation(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha, "uColor");
			//@line 223
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLiVecCoords);
			//@line 224
			gl.enableVertexAttribArray(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLiTexCoords);
			//@line 225
			gl.uniform1i(__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuSampler, 0);
			//@line 226
			__CLASS__COCOSCENE__.__modelViewMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuMVMat);
			//@line 227
			__CLASS__COCOSCENE__.__projectionMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.GLSLuProjMat);
			//@line 229
			__CLASS__COCOSCENE__.__glProgram = __CLASS__COCOSCENE__.__glProgram_Simple;
			//@line 230
			gl.useProgram(__CLASS__COCOSCENE__.__glProgram);
			//@line 232
			__CLASS__COCOSCENE__.__root.prepare(__THIS__);
		};
		//@line 236
		this.__PRIVATE__.makeProgram = function (gl, vs, fs)
		{
			//@line 238
			var vshader = gl.createShader(gl.VERTEX_SHADER);
			//@line 239
			var fshader = gl.createShader(gl.FRAGMENT_SHADER);
			//@line 240
			gl.shaderSource(vshader, vs);
			//@line 241
			gl.shaderSource(fshader, fs);
			//@line 242
			gl.compileShader(vshader);
			//@line 243
			gl.compileShader(fshader);
			//@line 244
			var program = gl.createProgram();
			//@line 245
			gl.attachShader(program, vshader);
			//@line 246
			gl.attachShader(program, fshader);
			//@line 247
			gl.linkProgram(program);
			//@line 248
			return program;
		};
		//@line 252
		this.__PRIVATE__.loadResources = function ()
		{
			//@line 254
			var img = undefined;
			//@line 255
			var sibling = undefined;
			//@line 258
			for (var i = 0, L = __CLASS__COCOSCENE__.__imageSymbols.size(); i < L; i++)
			//@line 259
			{
				//@line 260
				img = __CLASS__COCOSCENE__.__imageSymbols[i];
				//@line 261
				if (__CLASS__COCOSCENE__.__view_width && __CLASS__COCOSCENE__.__view_height)
				//@line 262
				{
					//@line 263
					var w = img.viewOptimalWidth * __CLASS__COCOSCENE__.__view_scale * window.devicePixelRatio;
					//@line 264
					var h = img.viewOptimalHeight * __CLASS__COCOSCENE__.__view_scale * window.devicePixelRatio;
					//@line 265
					for (var j = 0; j < img.viewSiblings.size(); j++)
					//@line 266
					{
						//@line 267
						sibling = img.viewSiblings[j];
						//@line 268
						if (sibling.textureWidth >= w && sibling.textureHeight >= h)
						//@line 269
						{
							//@line 270
							img.image = new Image;
							//@line 271
							img.image.load(img.baseUrl + sibling.url);
							//@line 272
							img.textureCellWidth = sibling.textureWidth;
							//@line 273
							img.textureCellHeight = sibling.textureHeight;
							//@line 274
							img.pixelRatio = sibling.pixelRatio;
							//@line 275
							break;
						}
					}
				}
				//@line 279
				if (!img.image)
				//@line 280
				{
					//@line 281
					sibling = img.viewSiblings[img.viewSiblings.size() - 1];
					//@line 282
					img.image = new Image;
					//@line 283
					img.image.load(img.baseUrl + sibling.url);
					//@line 284
					img.textureCellWidth = sibling.textureWidth;
					//@line 285
					img.textureCellHeight = sibling.textureHeight;
					//@line 286
					img.pixelRatio = sibling.pixelRatio;
				}
				//@line 289
				if (img.image)
				//@line 290
				{
					//@line 291
					trace("Loaded image: " + img.image.src);
				}
			}
		};
		//@line 297
		this.__PRIVATE__.resourcesLoaded = function (gl)
		{
			//@line 299
			if (!__CLASS__COCOSCENE__.__ready)
			//@line 300
			{
				//@line 301
				var img = undefined;
				//@line 302
				for (var i = __CLASS__COCOSCENE__.__imageSymbols.size() - 1; i >= 0; i--)
				//@line 303
				{
					//@line 304
					img = __CLASS__COCOSCENE__.__imageSymbols[i];
					//@line 305
					if (!img.image || !img.image.width || !img.image.height)
					//@line 306
					{
						//@line 307
						return false;
					}
					else
					//@line 309
					if (!img.texture)
					//@line 310
					{
						//@line 311
						img.prepare(__THIS__, gl);
						//@line 312
						return false;
					}
				}
				//@line 315
				__CLASS__COCOSCENE__.__ready = true;
				//@line 316
				trace("Resources loaded.");
				//@line 317
				return false;
			}
			//@line 319
			return __CLASS__COCOSCENE__.__ready;
			return false
		};
		//@line 323
		this.paint = __VIRTUAL__.paint = function (gl, time)
		{
			//@line 325
			if (!__CLASS__COCOSCENE__.__glProgram)
			//@line 326
			{
				//@line 327
				__CLASS__COCOSCENE__.__PRIVATE__.prepare(gl);
				//@line 328
				__CLASS__COCOSCENE__.__PRIVATE__.loadResources();
			}
			else
			//@line 330
			if (__CLASS__COCOSCENE__.__PRIVATE__.resourcesLoaded(gl))
			//@line 331
			{
				//@line 332
				if (__CLASS__COCOSCENE__.__root)
				//@line 333
				{
					//@line 340
					__CLASS__COCOSCENE__.__modelViewMatrix.identity();
					//@line 341
					__CLASS__COCOSCENE__.__levelParents = [__CLASS__COCOSCENE__.__root];
					//@line 342
					__CLASS__COCOSCENE__.__root.paint(gl, __THIS__, null, false, 0);
					//@line 343
					__CLASS__COCOSCENE__.__levelParents = [];
					//@line 344
					var max = __CLASS__COCOSCENE__.__root.__childWithMaxTimelineDuration;
					//@line 345
					if (max && max.__currentFrame && max.__currentFrame.frameIndex == max.__timeline.lastKeyFrame().frameIndex)
					//@line 346
					{
						//@line 347
						__CLASS__COCOSCENE__.__finished = true;
					}
				}
			}
		};
		//@line 356
		this.__PRIVATE__.setFilter = function (filter)
		{
			//@line 358
			var changed = false;
			//@line 359
			switch (filter)
			{
				//@line 361
			case COCO_FILTER_ENUM.FILTER_INHERIT:
				{
					//@line 362
					if (__CLASS__COCOSCENE__.__glProgram != __CLASS__COCOSCENE__.__glProgram_Simple)
					//@line 363
					{
						//@line 364
						__CLASS__COCOSCENE__.__glProgram = __CLASS__COCOSCENE__.__glProgram_Simple;
						//@line 365
						changed = true;
					}
					//@line 367
					break;
				}
				break;
				//@line 368
			case COCO_FILTER_ENUM.FILTER_SIMPLE:
				{
					//@line 369
					if (__CLASS__COCOSCENE__.__glProgram != __CLASS__COCOSCENE__.__glProgram_Simple)
					//@line 370
					{
						//@line 371
						__CLASS__COCOSCENE__.__glProgram = __CLASS__COCOSCENE__.__glProgram_Simple;
						//@line 372
						changed = true;
					}
					//@line 374
					break;
				}
				break;
				//@line 375
			case COCO_FILTER_ENUM.FILTER_SIMPLE_WITH_ALPHA:
				{
					//@line 376
					if (__CLASS__COCOSCENE__.__glProgram != __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha)
					//@line 377
					{
						//@line 378
						__CLASS__COCOSCENE__.__glProgram = __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha;
						//@line 379
						changed = true;
					}
					//@line 381
					break;
				}
				break;
				//@line 382
			case COCO_FILTER_ENUM.FILTER_SATURATION_WITH_ALPHA:
				{
					//@line 383
					if (__CLASS__COCOSCENE__.__glProgram != __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha)
					//@line 384
					{
						//@line 385
						__CLASS__COCOSCENE__.__glProgram = __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha;
						//@line 386
						changed = true;
					}
					//@line 388
					break;
				}
				break;
			}
			//@line 390
			if (changed) gl.useProgram(__CLASS__COCOSCENE__.__glProgram);
			//@line 391
			return changed;
			return false
		};
		//@line 395
		this.drawFrame = function (gl, image, frame, KF)
		{
			//@line 397
			if (__CLASS__COCOSCENE__.__PRIVATE__.setFilter(KF.filter) || __CLASS__COCOSCENE__.__modelViewMatrix.__dirty) __CLASS__COCOSCENE__.__modelViewMatrix.update(gl, __CLASS__COCOSCENE__.__glProgram.GLSLuMVMat);
			//@line 398
			gl.uniform2f(__CLASS__COCOSCENE__.__glProgram.GLSLuSprSize, image.texSize[0], image.texSize[1]);
			//@line 399
			gl.uniform2f(__CLASS__COCOSCENE__.__glProgram.GLSLuSprFrame, image.textureGrid[frame * 2 + 1], image.textureGrid[frame * 2]);
			//@line 400
			gl.uniform2f(__CLASS__COCOSCENE__.__glProgram.GLSLuSprFlip, (KF.flipH ? 1.0 : 0.0), (KF.flipV ? 1.0 : 0.0));
			//@line 401
			gl.bindBuffer(gl.ARRAY_BUFFER, image.buffer);
			//@line 402
			gl.vertexAttribPointer(__CLASS__COCOSCENE__.__glProgram.GLSLiTexCoords, 2, gl.FLOAT, false, 16, 0);
			//@line 403
			gl.vertexAttribPointer(__CLASS__COCOSCENE__.__glProgram.GLSLiVecCoords, 2, gl.FLOAT, false, 16, 8);
			//@line 404
			gl.bindTexture(gl.TEXTURE_2D, image.texture);
			//@line 405
			switch (KF.filter)
			{
				//@line 407
			case COCO_FILTER_ENUM.FILTER_INHERIT:
				{}
				break;
				//@line 408
			case COCO_FILTER_ENUM.FILTER_SIMPLE:
				{
					//@line 409
					break;
				}
				break;
				//@line 410
			case COCO_FILTER_ENUM.FILTER_SIMPLE_WITH_ALPHA:
				{
					//@line 411
					gl.uniform1f(__CLASS__COCOSCENE__.__glProgram.GLSLuAlpha, KF.alpha);
					//@line 412
					break;
				}
				break;
				//@line 413
			case COCO_FILTER_ENUM.FILTER_SATURATION_WITH_ALPHA:
				{
					//@line 414
					gl.uniform4f(__CLASS__COCOSCENE__.__glProgram.GLSLuColor, KF.red, KF.green, KF.blue, KF.alpha);
					//@line 415
					break;
				}
				break;
			}
			//@line 417
			gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
			//@line 418
			gl.bindBuffer(gl.ARRAY_BUFFER, null);
		};
		//@line 422
		this.gotoAndPlayByName = function (LabelName)
		{
			//@line 424
			var scope = __CLASS__COCOSCENE__.__levelParents.size() == 0 ? __CLASS__COCOSCENE__.__root : __CLASS__COCOSCENE__.__levelParents[__CLASS__COCOSCENE__.__levelParents.size() - 1];
			//@line 425
			scope.gotoFrameByName(LabelName, false);
		};
		//@line 429
		this.gotoAndStopByName = function (LabelName)
		{
			//@line 431
			var scope = __CLASS__COCOSCENE__.__levelParents.size() == 0 ? __CLASS__COCOSCENE__.__root : __CLASS__COCOSCENE__.__levelParents[__CLASS__COCOSCENE__.__levelParents.size() - 1];
			//@line 432
			scope.gotoFrameByName(LabelName, true);
		};
		//@line 436
		this.gotoAndPlayByIndex = function (FrameIndex)
		{
			//@line 438
			var scope = __CLASS__COCOSCENE__.__levelParents.size() == 0 ? __CLASS__COCOSCENE__.__root : __CLASS__COCOSCENE__.__levelParents[__CLASS__COCOSCENE__.__levelParents.size() - 1];
			//@line 439
			scope.gotoFrameByIndex(FrameIndex, false);
		};
		//@line 443
		this.gotoAndStopyByIndex = function (FrameIndex)
		{
			//@line 445
			var scope = __CLASS__COCOSCENE__.__levelParents.size() == 0 ? __CLASS__COCOSCENE__.__root : __CLASS__COCOSCENE__.__levelParents[__CLASS__COCOSCENE__.__levelParents.size() - 1];
			//@line 446
			scope.gotoFrameByIndex(FrameIndex, true);
		};
		//@line 450
		this.stop = function ()
		{
			//@line 452
			var scope = __CLASS__COCOSCENE__.__levelParents.size() == 0 ? __CLASS__COCOSCENE__.__root : __CLASS__COCOSCENE__.__levelParents[__CLASS__COCOSCENE__.__levelParents.size() - 1];
			//@line 453
			scope.gotoFrameByIndex(COCO_STOP_ON_CURRENT_FRAME, true);
		};
		//@line 103
		this.Destructor = function ()
		{
			{
				//@line 105
				{
					__CLASS__COCOSCENE__.__root && ((__CLASS__COCOSCENE__.__root.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__root.Destructor()) || !__CLASS__COCOSCENE__.__root.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__root);
					__CLASS__COCOSCENE__.__root = null
				};
				//@line 106
				{
					__CLASS__COCOSCENE__.__modelViewMatrix && ((__CLASS__COCOSCENE__.__modelViewMatrix.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__modelViewMatrix.Destructor()) || !__CLASS__COCOSCENE__.__modelViewMatrix.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__modelViewMatrix);
					__CLASS__COCOSCENE__.__modelViewMatrix = null
				};
				//@line 107
				{
					__CLASS__COCOSCENE__.__projectionMatrix && ((__CLASS__COCOSCENE__.__projectionMatrix.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__projectionMatrix.Destructor()) || !__CLASS__COCOSCENE__.__projectionMatrix.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__projectionMatrix);
					__CLASS__COCOSCENE__.__projectionMatrix = null
				};
				//@line 108
				{
					__CLASS__COCOSCENE__.__glProgram_Simple && ((__CLASS__COCOSCENE__.__glProgram_Simple.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__glProgram_Simple.Destructor()) || !__CLASS__COCOSCENE__.__glProgram_Simple.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__glProgram_Simple);
					__CLASS__COCOSCENE__.__glProgram_Simple = null
				};
				//@line 109
				{
					__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha && ((__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.Destructor()) || !__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha);
					__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha = null
				};
				//@line 110
				{
					__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha && ((__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.Destructor()) || !__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha);
					__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha = null
				};
				//@line 111
				{
					__CLASS__COCOSCENE__.__boundingBoxProgram && ((__CLASS__COCOSCENE__.__boundingBoxProgram.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__boundingBoxProgram.Destructor()) || !__CLASS__COCOSCENE__.__boundingBoxProgram.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__boundingBoxProgram);
					__CLASS__COCOSCENE__.__boundingBoxProgram = null
				};
				//@line 112
				{
					__CLASS__COCOSCENE__.__boundingBoxBuffer && ((__CLASS__COCOSCENE__.__boundingBoxBuffer.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__boundingBoxBuffer.Destructor()) || !__CLASS__COCOSCENE__.__boundingBoxBuffer.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__boundingBoxBuffer);
					__CLASS__COCOSCENE__.__boundingBoxBuffer = null
				};
				//@line 114
				for (var i = __CLASS__COCOSCENE__.__imageSymbols.size(); i--;)
				//@line 115
				{
					//@line 116
					delete __CLASS__COCOSCENE__.__imageSymbols[i];
				}
				//@line 119
				{
					__CLASS__COCOSCENE__.__imageSymbols && ((__CLASS__COCOSCENE__.__imageSymbols.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__imageSymbols.Destructor()) || !__CLASS__COCOSCENE__.__imageSymbols.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__imageSymbols);
					__CLASS__COCOSCENE__.__imageSymbols = null
				};
				//@line 120
				{
					__CLASS__COCOSCENE__.__levelParents && ((__CLASS__COCOSCENE__.__levelParents.hasOwnProperty('Destructor') && __CLASS__COCOSCENE__.__levelParents.Destructor()) || !__CLASS__COCOSCENE__.__levelParents.hasOwnProperty('Destructor')) && (delete __CLASS__COCOSCENE__.__levelParents);
					__CLASS__COCOSCENE__.__levelParents = null
				};
			}
			{
				__CLASS__COCOSCENE__.__sceneName = null;
				__CLASS__COCOSCENE__.__imageSymbols = null;
				__CLASS__COCOSCENE__.__fps = null;
				__CLASS__COCOSCENE__.__view_width = null;
				__CLASS__COCOSCENE__.__view_height = null;
				__CLASS__COCOSCENE__.__view_pixel_ratio = null;
				__CLASS__COCOSCENE__.__view_scale = null;
				__CLASS__COCOSCENE__.__root = null;
				__CLASS__COCOSCENE__.__modelViewMatrix = null;
				__CLASS__COCOSCENE__.__projectionMatrix = null;
				__CLASS__COCOSCENE__.__glProgram = null;
				__CLASS__COCOSCENE__.__glProgram_Simple = null;
				__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha = null;
				__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha = null;
				__CLASS__COCOSCENE__.__levelParents = null;
				__CLASS__COCOSCENE__.__vertex_shader_Common = null;
				__CLASS__COCOSCENE__.__fragment_shader_Simple = null;
				__CLASS__COCOSCENE__.__fragment_shader_SimpleWithAlpha = null;
				__CLASS__COCOSCENE__.__fragment_shader_SaturationWithAlpha = null;
				__CLASS__COCOSCENE__.__boundingBoxVertexShader = null;
				__CLASS__COCOSCENE__.__boundingBoxFragmentShader = null;
				__CLASS__COCOSCENE__.__boundingBoxProgram = null;
				__CLASS__COCOSCENE__.__boundingBoxBuffer = null;
				__CLASS__COCOSCENE__.__ready = null;
				__CLASS__COCOSCENE__.__finished = null;
			}
			return true
		};
		//@line 74
		this.Constructor = function ()
		{
			//@line 76
			__CLASS__COCOSCENE__.__sceneName = "";
			//@line 77
			__CLASS__COCOSCENE__.__view_width = 0;
			//@line 78
			__CLASS__COCOSCENE__.__view_height = 0;
			//@line 79
			__CLASS__COCOSCENE__.__view_pixel_ratio = 0;
			//@line 80
			__CLASS__COCOSCENE__.__view_scale = 1;
			//@line 81
			__CLASS__COCOSCENE__.__root = null;
			//@line 82
			__CLASS__COCOSCENE__.__modelViewMatrix = new CocoMatrix;
			//@line 83
			__CLASS__COCOSCENE__.__projectionMatrix = new CocoMatrix;
			//@line 84
			__CLASS__COCOSCENE__.__glProgram = null;
			//@line 85
			__CLASS__COCOSCENE__.__glProgram_Simple = null;
			//@line 86
			__CLASS__COCOSCENE__.__glProgram_SimpleWithAlpha = null;
			//@line 87
			__CLASS__COCOSCENE__.__glProgram_SaturationWithAlpha = null;
			//@line 88
			__CLASS__COCOSCENE__.__vertex_shader_Common = "attribute vec2 iVecCoords;attribute vec2 iTexCoords;uniform mat4 uProjMat;uniform mat4 uMVMat;uniform vec2 uSprSize;uniform vec2 uSprFrame;uniform vec2 uSprFlip;varying vec2 pTexCoord;void main(void){ gl_Position = uProjMat * uMVMat * vec4(iVecCoords, 0.0, 1.0); pTexCoord = vec2(((abs(iTexCoords.x - uSprFlip.x) + uSprFrame.x) * uSprSize.x), ((abs(iTexCoords.y - uSprFlip.y) + uSprFrame.y) * uSprSize.y));}";
			//@line 89
			__CLASS__COCOSCENE__.__fragment_shader_Simple = "#ifdef GL_ES\nprecision lowp float;\n#endif\nuniform sampler2D uSampler;\nvarying vec2 pTexCoord; \n \nvoid main(void)\n{\n gl_FragColor = texture2D(uSampler, pTexCoord); }";
			//@line 90
			__CLASS__COCOSCENE__.__fragment_shader_SimpleWithAlpha = "#ifdef GL_ES\nprecision lowp float;\n#endif\nuniform sampler2D uSampler;\nuniform float uAlpha;\nvarying vec2 pTexCoord; \n \nvoid main(void)\n{\n vec4 texColor = texture2D(uSampler, pTexCoord);\n gl_FragColor = vec4(texColor.rgb, texColor.a * uAlpha); }";
			//@line 91
			__CLASS__COCOSCENE__.__fragment_shader_SaturationWithAlpha = "#ifdef GL_ES\nprecision lowp float;\n#endif\nuniform sampler2D uSampler;\nuniform vec4 uColor;\nvarying vec2 pTexCoord; \n \nvoid main(void)\n{\n vec4 texColor = texture2D(uSampler, pTexCoord);\n float c = (texColor.r + texColor.g + texColor.b) / 3.0; \n gl_FragColor = vec4((1.0 - uColor.r) * c + texColor.r * uColor.r, (1.0 - uColor.g) * c + texColor.g * uColor.g, (1.0 - uColor.b) * c + texColor.b * uColor.b, texColor.a * uColor.a);}";
			//@line 92
			__CLASS__COCOSCENE__.__boundingBoxVertexShader = "attribute vec2 iVec2Coords;uniform mat4 uProjMat;void main(void) { gl_Position = uProjMat * vec4(iVec2Coords, 0.0, 1.0);}";
			//@line 93
			__CLASS__COCOSCENE__.__boundingBoxFragmentShader = "#ifdef GL_ES\nprecision lowp float;\n#endif\nvoid main(void) { gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);}";
			//@line 94
			__CLASS__COCOSCENE__.__boundingBoxProgram = null;
			//@line 95
			__CLASS__COCOSCENE__.__boundingBoxBuffer = null;
			//@line 96
			__CLASS__COCOSCENE__.__ready = false;
			//@line 97
			__CLASS__COCOSCENE__.__finished = false;
			//@line 98
			__CLASS__COCOSCENE__.__imageSymbols = new Array;
			//@line 99
			__CLASS__COCOSCENE__.__levelParents = new Array;
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	return new __CocoScene();
}
CocoScene.__PRIVATE__ = {};
CocoScene.__PROTECTED__ = {};