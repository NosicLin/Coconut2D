"#export web";
//@line 39

function CocoUIView()
{
	var __BASE__ = null;

	function __CocoUIView()
	{
		var Class = this.Class = 'CocoUIView',
			__CLASS__COCOUIVIEW__ = this.__CLASS__COCOUIVIEW__ = this,
			__PDEFINE__ = Object.defineProperty,
			__NOENUM__ = {enumerable:false},
			__VIRTUAL__ = this.__VIRTUAL__ =
			{
				__PROTECTED__: {}
			},
			__PRIVATE__ = this.__PRIVATE__,
			__PROTECTED__ = this.__PROTECTED__,
			__CLASS__COCOCLIP__ = this.__CLASS__COCOCLIP__;
		//@line 41
		__PRIVATE__.__x = 0;
		//@line 42
		__PRIVATE__.__y = 0;
		//@line 43
		__PRIVATE__.__width = 0;
		//@line 44
		__PRIVATE__.__height = 0;
		//@line 45
		__PRIVATE__.__visible = false;
		//@line 46
		__PRIVATE__.__textureIsInvalid = false;
		//@line 47
		__PRIVATE__.__enabled = false;
		//@line 111
		this.invalidate = function ()
		{
			//@line 113
			__CLASS__COCOUIVIEW__.__PRIVATE__.__textureIsInvalid = true;
		};
		//@line 117
		this.paint = __VIRTUAL__.paint = __CLASS__COCOCLIP__.paint = function (gl, scene, parentClip, calcBoundingBox, level)
		{
			//@line 119
			if (!__CLASS__COCOUIVIEW__.__PRIVATE__.__visible)
			//@line 120
			return;
			//@line 123
			if (__CLASS__COCOUIVIEW__.__PRIVATE__.__textureIsInvalid)
			//@line 124
			{
				//@line 126
				var canvas = document.createElement("canvas");
				//@line 127
				canvas.width = Math.pow(2, Math.ceil(Math.log(__CLASS__COCOUIVIEW__.__PRIVATE__.__width) / Math.log(2)));
				//@line 128
				canvas.height = Math.pow(2, Math.ceil(Math.log(__CLASS__COCOUIVIEW__.__PRIVATE__.__height) / Math.log(2)));
				//@line 129
				var ctx = (canvas.getContext("2d"));
				//@line 132
				__CLASS__COCOUIVIEW__.repaint(scene, parentClip, ctx);
				//@line 135
				{
					__CLASS__COCOCLIP__.__image && ((__CLASS__COCOCLIP__.__image.hasOwnProperty('Destructor') && __CLASS__COCOCLIP__.__image.Destructor()) || !__CLASS__COCOCLIP__.__image.hasOwnProperty('Destructor')) && (delete __CLASS__COCOCLIP__.__image);
					__CLASS__COCOCLIP__.__image = null
				};
				//@line 138
				__CLASS__COCOCLIP__.__image = new CocoImage;
				//@line 139
				__CLASS__COCOCLIP__.__image.image = new Image;
				//@line 140
				var url = canvas.toDataURL();
				//@line 141
				__CLASS__COCOCLIP__.__image.image.load(url);
				//@line 142
				__CLASS__COCOCLIP__.__image.textureCellWidth = (__CLASS__COCOUIVIEW__.__PRIVATE__.__width);
				//@line 143
				__CLASS__COCOCLIP__.__image.textureCellHeight = (__CLASS__COCOUIVIEW__.__PRIVATE__.__height);
				//@line 144
				__CLASS__COCOCLIP__.__image.textureGrid = new Float32Array([0, 0]);
				//@line 145
				__CLASS__COCOCLIP__.__image.prepare(__CLASS__COCOCLIP__.__scene, gl);
				//@line 148
				ctx = null;
				//@line 149
				{
					canvas && ((canvas.hasOwnProperty('Destructor') && canvas.Destructor()) || !canvas.hasOwnProperty('Destructor')) && (delete canvas);
					canvas = null
				};
			}
			//@line 153
			__CLASS__COCOCLIP__.__VIRTUAL__.paint(gl, scene, parentClip, calcBoundingBox, level);
		};
		//@line 157
		this.repaint = __VIRTUAL__.repaint = function (scene, parentClip, ctx) {};
		//@line 62
		Object.defineProperty(this, 'Name', {
			enumerable: true,
			//@line 64
			get: function ()
			{
				return __CLASS__COCOCLIP__.__instanceName;
				return ""
			},
			//@line 65
			set: function (v)
			{
				__CLASS__COCOCLIP__.__instanceName = v;
			}
		});
		//@line 69
		Object.defineProperty(this, 'Enabled', {
			enumerable: true,
			//@line 71
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__enabled;
				return false
			},
			//@line 72
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__enabled = v;
				__CLASS__COCOUIVIEW__.invalidate();
			}
		});
		//@line 76
		Object.defineProperty(this, 'Width', {
			enumerable: true,
			//@line 78
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__width;
				return 0
			},
			//@line 79
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__width = v;
				__CLASS__COCOUIVIEW__.invalidate();
			}
		});
		//@line 83
		Object.defineProperty(this, 'Height', {
			enumerable: true,
			//@line 85
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__height;
				return 0
			},
			//@line 86
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__height = v;
				__CLASS__COCOUIVIEW__.invalidate();
			}
		});
		//@line 90
		Object.defineProperty(this, 'Left', {
			enumerable: true,
			//@line 92
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__x;
				return 0
			},
			//@line 93
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__x = v;
			}
		});
		//@line 97
		Object.defineProperty(this, 'Top', {
			enumerable: true,
			//@line 99
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__y;
				return 0
			},
			//@line 100
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__y = v;
			}
		});
		//@line 104
		Object.defineProperty(this, 'Visible', {
			enumerable: true,
			//@line 106
			get: function ()
			{
				return __CLASS__COCOUIVIEW__.__PRIVATE__.__visible;
				return false
			},
			//@line 107
			set: function (v)
			{
				__CLASS__COCOUIVIEW__.__PRIVATE__.__visible = v;
			}
		});
		//@line 50
		this.Constructor = function ()
		{
			//@line 52
			__CLASS__COCOUIVIEW__.__PRIVATE__.__textureIsInvalid = true;
			//@line 53
			__CLASS__COCOUIVIEW__.__PRIVATE__.__enabled = true;
			//@line 54
			__CLASS__COCOUIVIEW__.__PRIVATE__.__visible = true;
			//@line 55
			__CLASS__COCOUIVIEW__.__PRIVATE__.__x = 0;
			//@line 56
			__CLASS__COCOUIVIEW__.__PRIVATE__.__y = 0;
			//@line 57
			__CLASS__COCOUIVIEW__.__PRIVATE__.__width = 320;
			//@line 58
			__CLASS__COCOUIVIEW__.__PRIVATE__.__height = 480;
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	__CocoUIView.prototype = new CocoClip();
	return new __CocoUIView();
}
CocoUIView.__PRIVATE__ = {};
CocoUIView.__PROTECTED__ = {};