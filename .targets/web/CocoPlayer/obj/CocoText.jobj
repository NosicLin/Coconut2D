"#export web";
//@line 4

function CocoTextStyle(__CLASS__COCOTEXTSTYLE__$ff__, __CLASS__COCOTEXTSTYLE__$fsp__, __CLASS__COCOTEXTSTYLE__$fs__, __CLASS__COCOTEXTSTYLE__$fw__, __CLASS__COCOTEXTSTYLE__$u__, __CLASS__COCOTEXTSTYLE__$r__, __CLASS__COCOTEXTSTYLE__$g__, __CLASS__COCOTEXTSTYLE__$b__, __CLASS__COCOTEXTSTYLE__$a__, __CLASS__COCOTEXTSTYLE__$br__, __CLASS__COCOTEXTSTYLE__$bg__, __CLASS__COCOTEXTSTYLE__$bb__, __CLASS__COCOTEXTSTYLE__$ba__)
{
	var __BASE__ = null;

	function CocoTextStyleClass(__BASE__, __CLASS__COCOTEXTSTYLE__$ff__, __CLASS__COCOTEXTSTYLE__$fsp__, __CLASS__COCOTEXTSTYLE__$fs__, __CLASS__COCOTEXTSTYLE__$fw__, __CLASS__COCOTEXTSTYLE__$u__, __CLASS__COCOTEXTSTYLE__$r__, __CLASS__COCOTEXTSTYLE__$g__, __CLASS__COCOTEXTSTYLE__$b__, __CLASS__COCOTEXTSTYLE__$a__, __CLASS__COCOTEXTSTYLE__$br__, __CLASS__COCOTEXTSTYLE__$bg__, __CLASS__COCOTEXTSTYLE__$bb__, __CLASS__COCOTEXTSTYLE__$ba__)
	{
		var __CLASS__COCOTEXTSTYLE__ = this;
		__PDEFINE__ = Object.defineProperty, __NOENUM__ = {enumerable:false};
		this.__PRIVATE__ = {};
		this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		//@line 6
		this.fontFamily = "";
		//@line 7
		this.fontSizePixels = 0;
		//@line 8
		this.fontStyle = "";
		//@line 9
		this.fontWeight = "";
		//@line 10
		this.underline = false;
		//@line 11
		this.color = [];
		//@line 12
		this.bgcolor = [];
		var Destructor = this.Destructor = function ()
		{
			//@line 35
			{
				__CLASS__COCOTEXTSTYLE__.color && ((__CLASS__COCOTEXTSTYLE__.color.hasOwnProperty('Destructor') && __CLASS__COCOTEXTSTYLE__.color.Destructor()) || !__CLASS__COCOTEXTSTYLE__.color.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXTSTYLE__.color);
				__CLASS__COCOTEXTSTYLE__.color = null
			};
			//@line 36
			{
				__CLASS__COCOTEXTSTYLE__.bgcolor && ((__CLASS__COCOTEXTSTYLE__.bgcolor.hasOwnProperty('Destructor') && __CLASS__COCOTEXTSTYLE__.bgcolor.Destructor()) || !__CLASS__COCOTEXTSTYLE__.bgcolor.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXTSTYLE__.bgcolor);
				__CLASS__COCOTEXTSTYLE__.bgcolor = null
			};
			{
				__CLASS__COCOTEXTSTYLE__.fontFamily = null;
				__CLASS__COCOTEXTSTYLE__.fontSizePixels = null;
				__CLASS__COCOTEXTSTYLE__.fontStyle = null;
				__CLASS__COCOTEXTSTYLE__.fontWeight = null;
				__CLASS__COCOTEXTSTYLE__.underline = null;
				__CLASS__COCOTEXTSTYLE__.color = null;
				__CLASS__COCOTEXTSTYLE__.bgcolor = null;
			}
			return true
		};
		//@line 14
		this.Constructor = function ()
		{
			var ff = arguments[0];
			var fsp = arguments[1];
			var fs = arguments[2];
			var fw = arguments[3];
			var u = arguments[4];
			var r = arguments[5];
			var g = arguments[6];
			var b = arguments[7];
			var a = arguments[8];
			var br = arguments[9];
			var bg = arguments[10];
			var bb = arguments[11];
			var ba = arguments[12];
			//@line 16
			__CLASS__COCOTEXTSTYLE__.fontFamily = ff;
			//@line 17
			__CLASS__COCOTEXTSTYLE__.fontSizePixels = fsp;
			//@line 18
			__CLASS__COCOTEXTSTYLE__.fontStyle = fs;
			//@line 19
			__CLASS__COCOTEXTSTYLE__.fontWeight = fw;
			//@line 20
			__CLASS__COCOTEXTSTYLE__.underline = u;
			//@line 21
			__CLASS__COCOTEXTSTYLE__.color = new Array;
			//@line 22
			__CLASS__COCOTEXTSTYLE__.color.push(r);
			//@line 23
			__CLASS__COCOTEXTSTYLE__.color.push(g);
			//@line 24
			__CLASS__COCOTEXTSTYLE__.color.push(b);
			//@line 25
			__CLASS__COCOTEXTSTYLE__.color.push(a);
			//@line 26
			__CLASS__COCOTEXTSTYLE__.bgcolor = new Array;
			//@line 27
			__CLASS__COCOTEXTSTYLE__.bgcolor.push(br);
			//@line 28
			__CLASS__COCOTEXTSTYLE__.bgcolor.push(bg);
			//@line 29
			__CLASS__COCOTEXTSTYLE__.bgcolor.push(bb);
			//@line 30
			__CLASS__COCOTEXTSTYLE__.bgcolor.push(ba);
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor(__CLASS__COCOTEXTSTYLE__$ff__, __CLASS__COCOTEXTSTYLE__$fsp__, __CLASS__COCOTEXTSTYLE__$fs__, __CLASS__COCOTEXTSTYLE__$fw__, __CLASS__COCOTEXTSTYLE__$u__, __CLASS__COCOTEXTSTYLE__$r__, __CLASS__COCOTEXTSTYLE__$g__, __CLASS__COCOTEXTSTYLE__$b__, __CLASS__COCOTEXTSTYLE__$a__, __CLASS__COCOTEXTSTYLE__$br__, __CLASS__COCOTEXTSTYLE__$bg__, __CLASS__COCOTEXTSTYLE__$bb__, __CLASS__COCOTEXTSTYLE__$ba__);
		return this;
	}
	return new CocoTextStyleClass(__BASE__, __CLASS__COCOTEXTSTYLE__$ff__, __CLASS__COCOTEXTSTYLE__$fsp__, __CLASS__COCOTEXTSTYLE__$fs__, __CLASS__COCOTEXTSTYLE__$fw__, __CLASS__COCOTEXTSTYLE__$u__, __CLASS__COCOTEXTSTYLE__$r__, __CLASS__COCOTEXTSTYLE__$g__, __CLASS__COCOTEXTSTYLE__$b__, __CLASS__COCOTEXTSTYLE__$a__, __CLASS__COCOTEXTSTYLE__$br__, __CLASS__COCOTEXTSTYLE__$bg__, __CLASS__COCOTEXTSTYLE__$bb__, __CLASS__COCOTEXTSTYLE__$ba__);
}
CocoTextStyle.prototype =
{};
CocoTextStyle.prototype.__PRIVATE__ = {};
CocoTextStyle.prototype.__PROTECTED__ = {};
//@line 40

function CocoText()
{
	var __BASE__ = null;

	function CocoTextClass(__BASE__)
	{
		var __CLASS__COCOTEXT__ = this;
		__PDEFINE__ = Object.defineProperty, __NOENUM__ = {enumerable:false};
		this.__PRIVATE__ = {};
		this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		//@line 93
		var wrap = this.wrap = function (width)
		{
			//@line 95
			__CLASS__COCOTEXT__.lineBreaks.clear();
			//@line 96
			__CLASS__COCOTEXT__.lineWidths.clear();
			//@line 97
			__CLASS__COCOTEXT__.lineHeights.clear();
			//@line 98
			__CLASS__COCOTEXT__.totalHeight = 0;
			//@line 99
			var lineWidth = 0;
			//@line 100
			var lineHeight = 0;
			//@line 101
			for (var i = 0; i < __CLASS__COCOTEXT__.indices.size(); i++)
			//@line 102
			{
				//@line 103
				var style = __CLASS__COCOTEXT__.styles[__CLASS__COCOTEXT__.mappings[i]];
				//@line 104
				lineHeight = Math.max(lineHeight, style.fontSizePixels);
				//@line 105
				CocoText.prototype.c2d.font = style.fontStyle + " normal " + style.fontWeight + " " + (style.fontSizePixels) + "px " + style.fontFamily;
				//@line 106
				var to = i + 1 < __CLASS__COCOTEXT__.indices.size() ? __CLASS__COCOTEXT__.indices[i + 1] : __CLASS__COCOTEXT__.str.size();
				//@line 107
				for (var r = __CLASS__COCOTEXT__.indices[i]; r < to; r++)
				//@line 108
				{
					//@line 109
					var charWidth = CocoText.prototype.c2d.measureText((__CLASS__COCOTEXT__.str.substr(r, 1))).width;
					//@line 111
					if (lineWidth + charWidth > width)
					//@line 112
					{
						//@line 113
						if (lineWidth == 0) throw "Too small width!";
						//@line 114
						__CLASS__COCOTEXT__.lineBreaks.push(r);
						//@line 115
						__CLASS__COCOTEXT__.lineWidths.push(lineWidth);
						//@line 116
						__CLASS__COCOTEXT__.lineHeights.push(lineHeight);
						//@line 119
						__CLASS__COCOTEXT__.totalHeight += lineHeight;
						//@line 120
						lineWidth = charWidth;
						//@line 121
						lineHeight = style.fontSizePixels;
					}
					else
					//@line 123
					lineWidth += charWidth;
				}
			}
			//@line 126
			__CLASS__COCOTEXT__.lineWidths.push(lineWidth);
			//@line 127
			__CLASS__COCOTEXT__.lineHeights.push(lineHeight);
			//@line 130
			__CLASS__COCOTEXT__.totalHeight += lineHeight;
		};
		//@line 133
		var draw = this.draw = function (width, height, halign, valign, bgR, bgG, bgB, bgA)
		{
			//@line 135
			trace("CocoText::draw");
			//@line 136
			if (width > CocoText.prototype.c2d.canvas.width || height > CocoText.prototype.c2d.canvas.height) return "";
			//@line 137
			CocoText.prototype.c2d.clearRect(0.0, 0.0, width, height);
			//@line 138
			CocoText.prototype.c2d.fillStyle = "rgba(" + (bgR) + ", " + (bgG) + ", " + (bgB) + ", " + (bgA) + ")";
			//@line 140
			var cx = 0;
			//@line 141
			var cy = 0;
			//@line 142
			var currentLine = 0;
			//@line 143
			var prevStop = 0;
			//@line 144
			var firstChar = true;
			//@line 145
			for (var i = 0; i < __CLASS__COCOTEXT__.indices.size(); i++)
			//@line 146
			{
				//@line 147
				var style = __CLASS__COCOTEXT__.styles[__CLASS__COCOTEXT__.mappings[i]];
				//@line 148
				CocoText.prototype.c2d.font = style.fontStyle + " normal " + style.fontWeight + " " + (style.fontSizePixels) + "px " + style.fontFamily;
				//@line 149
				trace("CocoText::draw 1");
				//@line 150
				var stop = 0;
				//@line 151
				var nextStop = ((i + 1 < __CLASS__COCOTEXT__.indices.size()) ? __CLASS__COCOTEXT__.indices[i + 1] : __CLASS__COCOTEXT__.str.size());
				//@line 152
				trace("CocoText::draw 2");
				//@line 153
				do
				//@line 154
				{
					//@line 155
					trace("CocoText::draw 3");
					//@line 156
					var nextBreak = currentLine < __CLASS__COCOTEXT__.lineBreaks.size() ? __CLASS__COCOTEXT__.lineBreaks[currentLine] : __CLASS__COCOTEXT__.str.size();
					//@line 157
					trace("CocoText::draw 4");
					//@line 158
					stop = Math.min(nextStop, nextBreak);
					//@line 159
					var s = __CLASS__COCOTEXT__.str.substring(prevStop, stop);
					//@line 160
					trace("CocoText::draw 5");
					//@line 161
					if (firstChar)
					//@line 162
					{
						//@line 164
						firstChar = false;
					}
					//@line 166
					prevStop = stop;
					//@line 167
					var sWidth = CocoText.prototype.c2d.measureText(s).width;
					//@line 168
					trace("CocoText::draw 5 1");
					//@line 169
					var left = (width - __CLASS__COCOTEXT__.lineWidths[currentLine]) * halign;
					//@line 170
					trace("CocoText::draw 5 2");
					//@line 171
					var top = __CLASS__COCOTEXT__.lineHeights[currentLine] / 1.125 + (height - __CLASS__COCOTEXT__.totalHeight * 1.25) * valign;
					//@line 172
					trace("CocoText::draw 5 3");
					//@line 173
					CocoText.prototype.c2d.fillStyle = "rgba(" + (style.bgcolor[0]) + ", " + (style.bgcolor[1]) + ", " + (style.bgcolor[2]) + ", " + (style.bgcolor[3]) + ")";
					//@line 174
					trace("CocoText::draw 5 4");
					//@line 175
					CocoText.prototype.c2d.fillRect(cx + left, cy + top - (style.fontSizePixels) / 1.25, sWidth, (style.fontSizePixels) * 1.125);
					//@line 176
					trace("CocoText::draw 5 5");
					//@line 177
					var StyleString = "rgba(" + (style.color[0]) + ", " + (style.color[1]) + ", " + (style.color[2]) + ", " + (style.color[3]) + ")";
					//@line 178
					trace("CocoText::draw 5 6");
					//@line 179
					CocoText.prototype.c2d.fillStyle = StyleString;
					//@line 180
					trace("CocoText::draw 5 7");
					//@line 181
					CocoText.prototype.c2d.strokeStyle = StyleString;
					//@line 182
					trace("CocoText::draw 5 8");
					//@line 184
					trace("CocoText::draw 6");
					//@line 185
					CocoText.prototype.c2d.fillText(s, cx + left, cy + top);
					//@line 186
					trace("CocoText::draw 7");
					//@line 187
					if (style.underline)
					//@line 188
					{
						//@line 189
						CocoText.prototype.c2d.lineWidth = (style.fontSizePixels) / 12.0;
						//@line 190
						CocoText.prototype.c2d.beginPath();
						//@line 191
						CocoText.prototype.c2d.moveTo(cx + left, cy + top + CocoText.prototype.c2d.lineWidth * 1.5);
						//@line 192
						CocoText.prototype.c2d.lineTo(cx + left + sWidth, cy + top + CocoText.prototype.c2d.lineWidth * 1.5);
						//@line 193
						CocoText.prototype.c2d.stroke();
					}
					//@line 195
					trace("CocoText::draw 8");
					//@line 196
					cx += sWidth;
					//@line 197
					if (stop == nextBreak)
					//@line 198
					{
						//@line 199
						cx = 0;
						//@line 200
						cy += (__CLASS__COCOTEXT__.lineHeights[currentLine]) * 1.25;
						//@line 201
						++currentLine;
						//@line 202
						firstChar = true;
					}
					//@line 204
					trace("CocoText::draw 9");
				}
				while (//@line 205
				stop != nextStop);
			}
			//@line 207
			return CocoText.prototype.c2d.canvas.toDataURL();
			return ""
		};
		//@line 44
		this.str = "";
		//@line 45
		this.styles = [];
		//@line 46
		this.indices = [];
		//@line 47
		this.mappings = [];
		//@line 48
		this.lineBreaks = [];
		//@line 49
		this.lineWidths = [];
		//@line 50
		this.lineHeights = [];
		//@line 51
		this.totalHeight = 0;
		var Destructor = this.Destructor = function ()
		{
			//@line 85
			{
				(function (o)
				{
					if (!o) return;
					for (var i = o.length; i--;)
					{
						o[i] && ((o[i].hasOwnProperty('Destructor') && o[i].Destructor()) || !o[i].hasOwnProperty('Destructor')) && (delete o[i]);
						o[i] = null;
					}
				})(__CLASS__COCOTEXT__.styles);
				__CLASS__COCOTEXT__.styles && ((__CLASS__COCOTEXT__.styles.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.styles.Destructor()) || !__CLASS__COCOTEXT__.styles.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.styles);
				__CLASS__COCOTEXT__.styles = null
			};
			//@line 86
			{
				__CLASS__COCOTEXT__.indices && ((__CLASS__COCOTEXT__.indices.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.indices.Destructor()) || !__CLASS__COCOTEXT__.indices.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.indices);
				__CLASS__COCOTEXT__.indices = null
			};
			//@line 87
			{
				__CLASS__COCOTEXT__.mappings && ((__CLASS__COCOTEXT__.mappings.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.mappings.Destructor()) || !__CLASS__COCOTEXT__.mappings.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.mappings);
				__CLASS__COCOTEXT__.mappings = null
			};
			//@line 88
			{
				__CLASS__COCOTEXT__.lineBreaks && ((__CLASS__COCOTEXT__.lineBreaks.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.lineBreaks.Destructor()) || !__CLASS__COCOTEXT__.lineBreaks.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.lineBreaks);
				__CLASS__COCOTEXT__.lineBreaks = null
			};
			//@line 89
			{
				__CLASS__COCOTEXT__.lineWidths && ((__CLASS__COCOTEXT__.lineWidths.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.lineWidths.Destructor()) || !__CLASS__COCOTEXT__.lineWidths.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.lineWidths);
				__CLASS__COCOTEXT__.lineWidths = null
			};
			//@line 90
			{
				__CLASS__COCOTEXT__.lineHeights && ((__CLASS__COCOTEXT__.lineHeights.hasOwnProperty('Destructor') && __CLASS__COCOTEXT__.lineHeights.Destructor()) || !__CLASS__COCOTEXT__.lineHeights.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTEXT__.lineHeights);
				__CLASS__COCOTEXT__.lineHeights = null
			};
			{
				__CLASS__COCOTEXT__.c2d = null;
				__CLASS__COCOTEXT__.str = null;
				__CLASS__COCOTEXT__.styles = null;
				__CLASS__COCOTEXT__.indices = null;
				__CLASS__COCOTEXT__.mappings = null;
				__CLASS__COCOTEXT__.lineBreaks = null;
				__CLASS__COCOTEXT__.lineWidths = null;
				__CLASS__COCOTEXT__.lineHeights = null;
				__CLASS__COCOTEXT__.totalHeight = null;
			}
			return true
		};
		//@line 72
		this.Constructor = function ()
		{
			//@line 74
			__CLASS__COCOTEXT__.styles = new Array;
			//@line 75
			__CLASS__COCOTEXT__.indices = new Array;
			//@line 76
			__CLASS__COCOTEXT__.mappings = new Array;
			//@line 77
			__CLASS__COCOTEXT__.lineBreaks = new Array;
			//@line 78
			__CLASS__COCOTEXT__.lineWidths = new Array;
			//@line 79
			__CLASS__COCOTEXT__.lineHeights = new Array;
			//@line 80
			__CLASS__COCOTEXT__.totalHeight = 0;
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	return new CocoTextClass(__BASE__);
}
CocoText.prototype =
{};
CocoText.prototype.__PRIVATE__ = {};
CocoText.prototype.__PROTECTED__ = {};
//@line 53
CocoText.prototype.npo2 = function (i)
{
	//@line 55
	--i;
	//@line 56
	i |= i >> 1;
	//@line 57
	i |= i >> 2;
	//@line 58
	i |= i >> 4;
	//@line 59
	i |= i >> 8;
	//@line 60
	i |= i >> 16;
	//@line 61
	return ++i;
}
//@line 64
CocoText.prototype.init = function (width, height)
{
	//@line 66
	var canvas = document.createElement("canvas");
	//@line 67
	canvas.width = (CocoText.prototype.npo2(width));
	//@line 68
	canvas.height = (CocoText.prototype.npo2(height));
	//@line 69
	CocoText.prototype.c2d = (canvas.getContext("2d"));
}
//@line 42
CocoText.prototype.c2d = null;