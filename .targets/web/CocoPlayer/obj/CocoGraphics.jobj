//@line 35

function CocoRect()
{
	var __BASE__ = null;

	function __CocoRect()
	{
		var Class = this.Class = 'CocoRect',
			__PDEFINE__ = Object.defineProperty,
			__NOENUM__ = {enumerable:false},
			__CLASS__COCORECT__ = this.__CLASS__COCORECT__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'CocoRect'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { trace('chaning "this" of base class [CocoRect] to top-level class [' + v.Class + ']');
				__THIS__ = v;
			}
		});
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		},
			__PRIVATE__ = this.__PRIVATE__ = {},
			__PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 37
		this.left = 0;
		//@line 38
		this.top = 0;
		//@line 39
		this.right = 0;
		//@line 40
		this.bottom = 0;
		this.Constructor = function () {};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	return new __CocoRect();
}
CocoRect.__PRIVATE__ = {};
CocoRect.__PROTECTED__ = {};
//@line 63

function CocoGraphics()
{
	var __BASE__ = null;

	function __CocoGraphics()
	{
		var Class = this.Class = 'CocoGraphics',
			__PDEFINE__ = Object.defineProperty,
			__NOENUM__ = {enumerable:false},
			__CLASS__COCOGRAPHICS__ = this.__CLASS__COCOGRAPHICS__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'CocoGraphics'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { trace('chaning "this" of base class [CocoGraphics] to top-level class [' + v.Class + ']');
				__THIS__ = v;
			}
		});
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		},
			__PRIVATE__ = this.__PRIVATE__ = {},
			__PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 69
		this.Destructor = function ()
		{
			{
				//@line 70
			}
			{}
			return true
		};
		//@line 65
		this.Constructor = function ()
		{
			//@line 66
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	return new __CocoGraphics();
}
CocoGraphics.__PRIVATE__ = {};
CocoGraphics.__PROTECTED__ = {};
//@line 100
CocoGraphics.createTextTexture = function (scene, text, fontName, fontSizePixels, hAlign, vAlign, multiline, trimming, CSSColor, textRectWidth, textRectHeight)
{
	//@line 103
	var canvas = document.createElement("canvas");
	//@line 104
	canvas.width = Math.pow(2, Math.ceil(Math.log(textRectWidth) / Math.log(2)));
	//@line 105
	canvas.height = Math.pow(2, Math.ceil(Math.log(textRectHeight) / Math.log(2)));
	//@line 106
	var ctx = (canvas.getContext("2d"));
	//@line 109
	ctx.font = "normal normal normal " + (fontSizePixels) + "px / normal " + fontName;
	//@line 110
	ctx.fillStyle = "white";
	//@line 111
	ctx.fillText(text, 0, (fontSizePixels));
	//@line 114
	var image = new CocoImage;
	//@line 115
	image.image = new Image;
	//@line 116
	var url = canvas.toDataURL();
	//@line 117
	image.image.load(url);
	//@line 118
	image.textureCellWidth = (textRectWidth);
	//@line 119
	image.textureCellHeight = (textRectHeight);
	//@line 120
	image.textureGrid = new Float32Array([0, 0]);
	//@line 121
	image.prepare(scene, gl);
	//@line 124
	ctx = null;
	//@line 125
	{
		canvas && ((canvas.hasOwnProperty('Destructor') && canvas.Destructor()) || !canvas.hasOwnProperty('Destructor')) && (delete canvas);
		canvas = null
	};
	//@line 126
	return image;
};
//@line 139
CocoGraphics.drawSkin = function (ctx, skinImage, x, y, width, height, anchor)
{
	//@line 141
	if (!skinImage)
	//@line 142
	return;
	//@line 144
	var r = 1;
	//@line 145
	var p = 1;
	//@line 146
	var src = skinImage.image;
	//@line 147
	var cx = 0;
	//@line 148
	var cy = 0;
	//@line 149
	var cw = width;
	//@line 150
	var ch = height;
	//@line 151
	var W1 = skinImage.skin[0];
	//@line 152
	var W2 = skinImage.skin[1];
	//@line 153
	var W3 = skinImage.skin[2];
	//@line 154
	var H1 = skinImage.skin[3];
	//@line 155
	var H2 = skinImage.skin[4];
	//@line 156
	var H3 = skinImage.skin[5];
	//@line 157
	var RW1H1 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE;
	//@line 158
	var RW2H1 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_X;
	//@line 159
	var RW3H1 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE;
	//@line 160
	var RW1H2 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_Y;
	//@line 161
	var RW2H2 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_XY;
	//@line 162
	var RW3H2 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_Y;
	//@line 163
	var RW1H3 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE;
	//@line 164
	var RW2H3 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_X;
	//@line 165
	var RW3H3 = COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE;
	//@line 166
	var F = 0;
	//@line 167
	var RmW = 0;
	//@line 168
	var RmH = 0;
	//@line 169
	var R = [0, 0, 0];
	//@line 170
	var C = [0, 0, 0];
	//@line 180
	switch (anchor)
	{
		//@line 182
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_NONE:
		{
			//@line 183
			break;
		}
		break;
		//@line 185
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_CENTER:
		{
			//@line 186
			x = cx + (cw - width) / 2;
			//@line 187
			y = cy + (ch - height) / 2;
			//@line 188
			break;
		}
		break;
		//@line 190
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_TOP_LEFT:
		{
			//@line 191
			x = cx;
			//@line 192
			y = cy;
			//@line 193
			break;
		}
		break;
		//@line 195
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_TOP_MIDDLE:
		{
			//@line 196
			x = cx + (cw - width) / 2;
			//@line 197
			y = cy;
			//@line 198
			break;
		}
		break;
		//@line 200
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_TOP_RIGHT:
		{
			//@line 201
			x = cx + (cw - width);
			//@line 202
			y = cy;
			//@line 203
			break;
		}
		break;
		//@line 205
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_MIDDLE_LEFT:
		{
			//@line 206
			x = cx;
			//@line 207
			y = cy + (ch - height) / 2;
			//@line 208
			break;
		}
		break;
		//@line 210
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_MIDDLE_RIGHT:
		{
			//@line 211
			x = cx + (cw - width);
			//@line 212
			y = cy + (ch - height) / 2;
			//@line 213
			break;
		}
		break;
		//@line 215
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_BOTTOM_LEFT:
		{
			//@line 216
			x = cx;
			//@line 217
			y = cy + (ch - height);
			//@line 218
			break;
		}
		break;
		//@line 220
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_BOTTOM_MIDDLE:
		{
			//@line 221
			x = cx + (cw - width) / 2;
			//@line 222
			y = cy + (ch - height);
			//@line 223
			break;
		}
		break;
		//@line 225
	case COCO_CONTROL_ANCHOR_ENUM.ANCHOR_BOTTOM_RIGHT:
		{
			//@line 226
			x = cx + (cw - width);
			//@line 227
			y = cy + (ch - height);
			//@line 228
			break;
		}
		break;
	}
};
//@line 277
CocoGraphics.__PRIVATE__.__drawSlice = function (ctx, skin, cx, cy, cw, ch, sx, sy, sw, sh, r)
{
	//@line 279
	if (!cw || !ch || !sw || !sh) return;
	//@line 280
	if (r == COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE)
	//@line 281
	CocoGraphics.__PRIVATE__.__drawRegion(ctx, skin, sx, sy, sw, sh, cx, cy, cw, ch);
	else
	//@line 283
	CocoGraphics.__PRIVATE__.__tileSkin(ctx, skin, sx, sy, sw, sh, cx, cy, cw, ch);
};
//@line 287
CocoGraphics.__PRIVATE__.__countFixed = function (v)
{
	//@line 289
	var c = 0;
	//@line 290
	for (var i = 0; i < v.length; i++)
	//@line 291
	if (v[i]) c++;
	//@line 292
	return c;
	return 0
};
//@line 296
CocoGraphics.__PRIVATE__.__fixedW = function (v)
{
	//@line 298
	var R = false;
	//@line 299
	for (var i = 0; i < v.length; i++)
	//@line 300
	R |= ((v[i] == COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE) || (v[i] == COCO_SKIN_TILE_ENUM.TILE_REPEAT_Y));
	//@line 301
	return R;
	return false
};
//@line 305
CocoGraphics.__PRIVATE__.__fixedH = function (v)
{
	//@line 307
	var R = false;
	//@line 308
	for (var i = 0; i < v.length; i++)
	//@line 309
	R |= ((v[i] == COCO_SKIN_TILE_ENUM.TILE_REPEAT_NONE) || (v[i] == COCO_SKIN_TILE_ENUM.TILE_REPEAT_X));
	//@line 310
	return R;
	return false
};
//@line 314
CocoGraphics.__PRIVATE__.__tileSkin = function (ctx, image, cellX, cellY, cellWidth, cellHeight, x, y, width, height)
{
	//@line 316
	if (cellWidth == 0 || cellHeight == 0)
	//@line 317
	return;
	//@line 319
	var ix = 0,
		iy = 0,
		cx = 0,
		cy = 0,
		cw = 0,
		ch = 0,
		r = 0;
	//@line 321
	for (iy = y; iy <= y + height; iy += cellHeight)
	//@line 322
	{
		//@line 323
		for (ix = x; ix <= x + width; ix += cellWidth)
		//@line 324
		{
			//@line 325
			cw = (ix + cellWidth <= x + width ? cellWidth : x + width - ix);
			//@line 326
			ch = (iy + cellHeight <= y + height ? cellHeight : y + height - iy);
			//@line 327
			if (cw > 0 && ch > 0)
			//@line 328
			CocoGraphics.__PRIVATE__.__drawRegion(ctx, image, cellX, cellY, cw, ch, ix, iy, cw, ch);
		}
	}
};
//@line 334
CocoGraphics.__PRIVATE__.__drawRegion = function (ctx, image, sx, sy, sw, sh, dx, dy, dw, dh)
{
	//@line 336
	if (!ctx || !image || !sw || !sh || !dw || !dh)
	//@line 337
	return;
	//@line 339
	try
	{
		//@line 341
		ctx.drawImage(image.image, sx, sy, sw, sh, dx, dy, dw, dh);
	}
	catch (e)
	//@line 343
	{}
};
//@line 349
CocoGraphics.drawImage = function (image, x, y, stretchW, stretchH, anchor, clear)
{
	//@line 350
};