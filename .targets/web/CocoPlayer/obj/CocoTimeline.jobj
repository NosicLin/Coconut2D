"#export web";
//@line 37

function CocoTimeline()
{
	var __BASE__ = null;

	function __CocoTimeline()
	{
		var Class = this.Class = 'CocoTimeline',
			__PDEFINE__ = Object.defineProperty,
			__NOENUM__ = {enumerable:false},
			__CLASS__COCOTIMELINE__ = this.__CLASS__COCOTIMELINE__ = this;
		var __THIS__ = this;
		this.toString = function ()
		{
			return 'CocoTimeline'
		};
		__PDEFINE__(this, '__THIS__', { enumerable: false, get: function () { return __THIS__; }, set: function (v) { __THIS__ = v; } });
		var __VIRTUAL__ = this.__VIRTUAL__ =
		{
			__PROTECTED__: {}
		},
			__PRIVATE__ = this.__PRIVATE__ = {},
			__PROTECTED__ = this.__PROTECTED__ = {};
		__PDEFINE__(this, '__PRIVATE__', __NOENUM__);
		__PDEFINE__(this, '__PROTECTED__', __NOENUM__);
		//@line 39
		this.__labels = [];
		//@line 40
		this.__keyFrames = [];
		//@line 41
		this.__singleFrameDurationTime = null;
		//@line 42
		this.__durationInTime = null;
		//@line 43
		this.__durationInFrames = 0;
		//@line 44
		this.__paused = false;
		//@line 45
		this.__fps = 0;
		//@line 46
		this.__currentFrameIndex = 0;
		//@line 47
		this.__firstKeyFrameIndex = 0;
		//@line 48
		this.__lastKeyFrameIndex = 0;
		//@line 71
		this.prepare = function (scene, clip)
		{
			//@line 73
			__CLASS__COCOTIMELINE__.__fps = scene.__fps;
			//@line 74
			__CLASS__COCOTIMELINE__.normalizetimeline();
		};
		//@line 78
		this.clear = function ()
		{
			//@line 80
			__CLASS__COCOTIMELINE__.reset();
			//@line 81
			{
				__CLASS__COCOTIMELINE__.__labels && ((__CLASS__COCOTIMELINE__.__labels.hasOwnProperty('Destructor') && __CLASS__COCOTIMELINE__.__labels.Destructor()) || !__CLASS__COCOTIMELINE__.__labels.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTIMELINE__.__labels);
				__CLASS__COCOTIMELINE__.__labels = null
			};
			//@line 82
			{
				__CLASS__COCOTIMELINE__.__keyFrames && ((__CLASS__COCOTIMELINE__.__keyFrames.hasOwnProperty('Destructor') && __CLASS__COCOTIMELINE__.__keyFrames.Destructor()) || !__CLASS__COCOTIMELINE__.__keyFrames.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTIMELINE__.__keyFrames);
				__CLASS__COCOTIMELINE__.__keyFrames = null
			};
			//@line 83
			__CLASS__COCOTIMELINE__.__labels = new Array;
			//@line 84
			__CLASS__COCOTIMELINE__.__keyFrames = new Array;
			//@line 85
			__CLASS__COCOTIMELINE__.normalizetimeline();
		};
		//@line 89
		this.reset = function ()
		{
			//@line 91
			__CLASS__COCOTIMELINE__.__paused = false;
			//@line 92
			__CLASS__COCOTIMELINE__.__currentFrameIndex = -1;
			//@line 93
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			//@line 94
			{
				//@line 95
				__CLASS__COCOTIMELINE__.__keyFrames[i].reset();
			}
		};
		//@line 100
		this.addLabel = function (Label)
		{
			//@line 102
			if (Label) __CLASS__COCOTIMELINE__.__labels.push(Label);
			//@line 103
			return Label;
		};
		//@line 107
		this.addLabelEx = function (FrameIndex, LabelName)
		{
			//@line 109
			var Label = new CocoTimeLabel(FrameIndex, LabelName);
			//@line 110
			return __CLASS__COCOTIMELINE__.addLabel(Label);
		};
		//@line 114
		this.findLabelByName = function (LabelName)
		{
			//@line 116
			for (var i = __CLASS__COCOTIMELINE__.__labels.size() - 1; i >= 0; i--)
			//@line 117
			{
				//@line 118
				if (__CLASS__COCOTIMELINE__.__labels[i].name == LabelName)
				//@line 119
				{
					//@line 120
					return __CLASS__COCOTIMELINE__.__labels[i];
				}
			}
			//@line 123
			return null;
		};
		//@line 127
		this.keyFrame = function (frameIndex)
		{
			//@line 129
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			//@line 130
			{
				//@line 131
				if (__CLASS__COCOTIMELINE__.__keyFrames[i].frameIndex == frameIndex)
				//@line 132
				{
					//@line 133
					return __CLASS__COCOTIMELINE__.__keyFrames[i];
				}
			}
			//@line 136
			return null;
		};
		//@line 140
		this.firstKeyFrame = function ()
		{
			//@line 142
			return __CLASS__COCOTIMELINE__.__keyFrames[0];
		};
		//@line 146
		this.lastKeyFrame = function ()
		{
			//@line 148
			return __CLASS__COCOTIMELINE__.__keyFrames[__CLASS__COCOTIMELINE__.__keyFrames.size() - 1];
		};
		//@line 152
		this.addKeyFrame = function (KeyFrame)
		{
			//@line 154
			if (KeyFrame)
			//@line 155
			{
				//@line 156
				KeyFrame.frameIndex = Math.floor(KeyFrame.frameIndex);
				//@line 157
				__CLASS__COCOTIMELINE__.__keyFrames.push(KeyFrame);
				//@line 158
				__CLASS__COCOTIMELINE__.normalizetimeline();
			}
			//@line 160
			return KeyFrame;
		};
		//@line 164
		this.addKeyFrameEx = function (nextState, actionCallback, frameIndex, frameInterpolation, handleEvents, visible, x, y, scaleX, scaleY, rotation, pivotX, pivotY, filter, red, green, blue, alpha, audio, flipH, flipV, spriteSequenceName)
		{
			//@line 187
			var KeyFrame = new CocoKeyFrame;
			//@line 189
			KeyFrame.nextState = nextState;
			//@line 190
			KeyFrame.action = actionCallback;
			//@line 191
			KeyFrame.frameIndex = frameIndex;
			//@line 192
			KeyFrame.frameInterpolation = frameInterpolation;
			//@line 193
			KeyFrame.handleEvents = handleEvents;
			//@line 194
			KeyFrame.visible = visible;
			//@line 195
			KeyFrame.filter = filter;
			//@line 196
			KeyFrame.x = x;
			//@line 197
			KeyFrame.y = y;
			//@line 198
			KeyFrame.scaleX = scaleX;
			//@line 199
			KeyFrame.scaleY = scaleY;
			//@line 200
			KeyFrame.rotation = rotation;
			//@line 201
			KeyFrame.pivotX = pivotX;
			//@line 202
			KeyFrame.pivotY = pivotY;
			//@line 203
			KeyFrame.red = red;
			//@line 204
			KeyFrame.green = green;
			//@line 205
			KeyFrame.blue = blue;
			//@line 206
			KeyFrame.alpha = alpha;
			//@line 207
			KeyFrame.audio = audio;
			//@line 208
			KeyFrame.flipH = flipH;
			//@line 209
			KeyFrame.flipV = flipV;
			//@line 210
			KeyFrame.spriteSequenceName = spriteSequenceName;
			//@line 212
			return __CLASS__COCOTIMELINE__.addKeyFrame(KeyFrame);
		};
		//@line 216
		this.normalizetimeline = function ()
		{
			//@line 218
			__CLASS__COCOTIMELINE__.__durationInFrames = 0;
			//@line 219
			__CLASS__COCOTIMELINE__.__durationInTime = 0;
			//@line 220
			__CLASS__COCOTIMELINE__.__singleFrameDurationTime = 0;
			//@line 221
			if (__CLASS__COCOTIMELINE__.__keyFrames.size() > 0)
			//@line 222
			{
				//@line 223
				__CLASS__COCOTIMELINE__.__durationInFrames = __CLASS__COCOTIMELINE__.__keyFrames[__CLASS__COCOTIMELINE__.__keyFrames.size() - 1].frameIndex + 1;
				//@line 224
				__CLASS__COCOTIMELINE__.__singleFrameDurationTime = 1000.0 / __CLASS__COCOTIMELINE__.__fps;
				//@line 225
				__CLASS__COCOTIMELINE__.__durationInTime = (__CLASS__COCOTIMELINE__.__durationInFrames) * __CLASS__COCOTIMELINE__.__singleFrameDurationTime;
				//@line 226
				__CLASS__COCOTIMELINE__.__firstKeyFrameIndex = __CLASS__COCOTIMELINE__.firstKeyFrame().frameIndex;
				//@line 227
				__CLASS__COCOTIMELINE__.__lastKeyFrameIndex = __CLASS__COCOTIMELINE__.lastKeyFrame().frameIndex;
			}
		};
		//@line 232
		this.findKeyFrameBeforeframeIndex = function (frameIndex, inclusive, excludeListIndex)
		{
			//@line 234
			var KeyFrame = undefined;
			//@line 235
			for (var i = __CLASS__COCOTIMELINE__.__keyFrames.size() - 1; i >= 0; i--)
			//@line 236
			{
				//@line 237
				if (i != excludeListIndex)
				//@line 238
				{
					//@line 239
					KeyFrame = __CLASS__COCOTIMELINE__.__keyFrames[i];
					//@line 240
					if (inclusive)
					//@line 241
					{
						//@line 242
						if (KeyFrame.frameIndex <= frameIndex)
						//@line 243
						return KeyFrame;
					}
					else
					//@line 246
					{
						//@line 247
						if (KeyFrame.frameIndex < frameIndex)
						//@line 248
						return KeyFrame;
					}
				}
			}
			//@line 252
			return null;
		};
		//@line 256
		this.findKeyFrameAfterframeIndex = function (frameIndex, inclusive, excludeListIndex)
		{
			//@line 258
			var KeyFrame = undefined;
			//@line 259
			for (var i = 0, L = __CLASS__COCOTIMELINE__.__keyFrames.size(); i < L; i++)
			//@line 260
			{
				//@line 261
				if (i != excludeListIndex)
				//@line 262
				{
					//@line 263
					KeyFrame = __CLASS__COCOTIMELINE__.__keyFrames[i];
					//@line 264
					if (inclusive)
					//@line 265
					{
						//@line 266
						if (KeyFrame.frameIndex >= frameIndex)
						//@line 267
						return KeyFrame;
					}
					else
					//@line 270
					{
						//@line 271
						if (KeyFrame.frameIndex > frameIndex)
						//@line 272
						return KeyFrame;
					}
				}
			}
			//@line 276
			return null;
		};
		//@line 280
		this.interpolate = function (frameIndex)
		{
			//@line 282
			var F = null;
			//@line 283
			var F1 = null;
			//@line 284
			var F2 = null;
			//@line 285
			var s = 1.0;
			//@line 286
			if (frameIndex <= 0) frameIndex = 0;
			//@line 287
			var iFrameIndex = Math.floor(frameIndex);
			//@line 290
			if (__CLASS__COCOTIMELINE__.__keyFrames.size() == 0)
			//@line 291
			{
				//@line 292
				F = new CocoKeyFrame;
				//@line 293
				F.frameIndex = iFrameIndex;
				//@line 294
				F.visible = false;
				//@line 295
				return F;
			}
			//@line 299
			F1 = __CLASS__COCOTIMELINE__.findKeyFrameBeforeframeIndex(frameIndex, true, -1);
			//@line 301
			if (!F1)
			//@line 302
			{
				//@line 304
				F = new CocoKeyFrame;
				//@line 305
				F.frameIndex = iFrameIndex;
				//@line 306
				F.__frameIndex = frameIndex;
				//@line 307
				F.visible = false;
				//@line 308
				return F;
			}
			else
			//@line 311
			{
				//@line 312
				var exact = !__CLASS__COCOTIMELINE__.__paused && ((__CLASS__COCOTIMELINE__.__currentFrameIndex == -1) || (__CLASS__COCOTIMELINE__.__currentFrameIndex != F1.frameIndex));
				//@line 313
				__CLASS__COCOTIMELINE__.__currentFrameIndex = F1.frameIndex;
				//@line 315
				if (F1.frameIndex == iFrameIndex)
				//@line 316
				{
					//@line 317
					F1 = F1.clone(exact);
					//@line 318
					F1.__frameIndex = frameIndex;
					//@line 319
					return F1;
				}
				//@line 322
				switch (F1.frameInterpolation)
				{
					//@line 324
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_ECHO:
					{
						//@line 326
						F = F1.clone(exact);
						//@line 327
						F.frameIndex = iFrameIndex;
						//@line 328
						F.__frameIndex = frameIndex;
						//@line 329
						return F;
					}
					break;
					//@line 331
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_NONE:
					{
						//@line 333
						F = F1.clone(exact);
						//@line 334
						F.frameIndex = iFrameIndex;
						//@line 335
						F.__frameIndex = frameIndex;
						//@line 336
						F.visible = false;
						//@line 337
						return F;
					}
					break;
					//@line 339
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_MOTION_TWEEN:
					{
						//@line 342
						F2 = __CLASS__COCOTIMELINE__.findKeyFrameAfterframeIndex(frameIndex, (frameIndex > iFrameIndex), -1);
						//@line 344
						if (!F2)
						//@line 345
						{
							//@line 347
							F = F1.clone(exact);
							//@line 348
							F.frameIndex = iFrameIndex;
							//@line 349
							F.__frameIndex = frameIndex;
							//@line 350
							return F;
						}
						else
						//@line 353
						{
							//@line 355
							F = F1.clone(exact);
							//@line 356
							F.frameIndex = iFrameIndex;
							//@line 357
							F.__frameIndex = frameIndex;
							//@line 358
							s = (frameIndex - (F1.frameIndex)) / (F2.frameIndex - F1.frameIndex);
							//@line 359
							__CLASS__COCOTIMELINE__.__PRIVATE__.interpolate$1(F, F1, F2, s);
							//@line 360
							return F;
						}
					}
					break;
					//@line 363
				case COCO_KEYFRAME_INTERPOLATION_ENUM.KEYFRAME_INTERPOLATION_PHYSICS:
					{
						//@line 364
						break;
					}
					break;
				}
			}
			//@line 367
			return null;
		};
		//@line 371
		this.__PRIVATE__.interpolate$1 = function (F, F1, F2, s)
		{
			//@line 373
			F.red = F1.red + s * (F2.red - F1.red);
			//@line 374
			F.green = F1.green + s * (F2.green - F1.green);
			//@line 375
			F.blue = F1.blue + s * (F2.blue - F1.blue);
			//@line 376
			F.alpha = F1.alpha + s * (F2.alpha - F1.alpha);
			//@line 377
			F.x = F1.x + s * (F2.x - F1.x);
			//@line 378
			F.y = F1.y + s * (F2.y - F1.y);
			//@line 379
			F.scaleX = F1.scaleX + s * (F2.scaleX - F1.scaleX);
			//@line 380
			F.scaleY = F1.scaleY + s * (F2.scaleY - F1.scaleY);
			//@line 381
			F.rotation = F1.rotation + s * (F2.rotation - F1.rotation);
			//@line 382
			F.pivotX = F1.pivotX + s * (F2.pivotX - F1.pivotX);
			//@line 383
			F.pivotY = F1.pivotY + s * (F2.pivotY - F1.pivotY);
		};
		//@line 64
		this.Destructor = function ()
		{
			{
				//@line 66
				{
					__CLASS__COCOTIMELINE__.__labels && ((__CLASS__COCOTIMELINE__.__labels.hasOwnProperty('Destructor') && __CLASS__COCOTIMELINE__.__labels.Destructor()) || !__CLASS__COCOTIMELINE__.__labels.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTIMELINE__.__labels);
					__CLASS__COCOTIMELINE__.__labels = null
				};
				//@line 67
				{
					__CLASS__COCOTIMELINE__.__keyFrames && ((__CLASS__COCOTIMELINE__.__keyFrames.hasOwnProperty('Destructor') && __CLASS__COCOTIMELINE__.__keyFrames.Destructor()) || !__CLASS__COCOTIMELINE__.__keyFrames.hasOwnProperty('Destructor')) && (delete __CLASS__COCOTIMELINE__.__keyFrames);
					__CLASS__COCOTIMELINE__.__keyFrames = null
				};
			}
			{
				__CLASS__COCOTIMELINE__.__labels = null;
				__CLASS__COCOTIMELINE__.__keyFrames = null;
				__CLASS__COCOTIMELINE__.__singleFrameDurationTime = null;
				__CLASS__COCOTIMELINE__.__durationInTime = null;
				__CLASS__COCOTIMELINE__.__durationInFrames = null;
				__CLASS__COCOTIMELINE__.__paused = null;
				__CLASS__COCOTIMELINE__.__fps = null;
				__CLASS__COCOTIMELINE__.__currentFrameIndex = null;
				__CLASS__COCOTIMELINE__.__firstKeyFrameIndex = null;
				__CLASS__COCOTIMELINE__.__lastKeyFrameIndex = null;
			}
			return true
		};
		//@line 51
		this.Constructor = function ()
		{
			//@line 53
			__CLASS__COCOTIMELINE__.__labels = new Array;
			//@line 54
			__CLASS__COCOTIMELINE__.__keyFrames = new Array;
			//@line 55
			__CLASS__COCOTIMELINE__.__singleFrameDurationTime = 0.0;
			//@line 56
			__CLASS__COCOTIMELINE__.__durationInTime = 0.0;
			//@line 57
			__CLASS__COCOTIMELINE__.__durationInFrames = 0;
			//@line 58
			__CLASS__COCOTIMELINE__.__paused = false;
			//@line 59
			__CLASS__COCOTIMELINE__.__fps = 30;
			//@line 60
			__CLASS__COCOTIMELINE__.__currentFrameIndex = -1;
		};
		__PDEFINE__(this, 'Constructor', __NOENUM__);
		this.Constructor();
		return this;
	}
	return new __CocoTimeline();
}
CocoTimeline.__PRIVATE__ = {};
CocoTimeline.__PROTECTED__ = {};